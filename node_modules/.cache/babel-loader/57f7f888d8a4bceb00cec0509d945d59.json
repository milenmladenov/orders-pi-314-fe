{"ast":null,"code":"var _jsxFileName = \"/Users/milen.mladenov/asset-management-fe/src/pages/newExcelOrderForm.js\";\nimport React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nconst NewExcelOrderForm = () => {\n  const initialFormState = {\n    doorName: '',\n    modelName: \"Без\",\n    folioName: \"Без\",\n    handleName: 'Без Дръжка',\n    profilName: 'R1',\n    height: 400,\n    width: 400,\n    length: 2360,\n    number: 1,\n    bothSidesLaminated: \"false\",\n    detailType: {\n      material: \"\",\n      type: \"\"\n    },\n    deliveryAddress: '',\n    discount: 0,\n    note: ''\n  };\n  const [formStates, setFormStates] = useState([]);\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.onload = event => {\n      const binaryString = event.target.result;\n      const workbook = XLSX.read(binaryString, {\n        type: 'binary'\n      });\n      const sheetName = workbook.SheetNames[0]; // Assuming Sheet 1 is the first sheet\n      const sheet = workbook.Sheets[sheetName];\n      const data = XLSX.utils.sheet_to_json(sheet, {\n        header: 1\n      });\n      const newData = data.slice(1).map(row => {\n        return {\n          doorName: row[0] || initialFormState.doorName,\n          modelName: row[1] || initialFormState.modelName,\n          folioName: row[2] || initialFormState.folioName,\n          handleName: row[3] || initialFormState.handleName,\n          profilName: row[4] || initialFormState.profilName,\n          height: row[5] || initialFormState.height,\n          width: row[6] || initialFormState.width,\n          length: row[7] || initialFormState.length,\n          number: row[8] || initialFormState.number,\n          bothSidesLaminated: row[9] || initialFormState.bothSidesLaminated,\n          detailType: {\n            material: row[10] || initialFormState.detailType.material,\n            type: row[11] || initialFormState.detailType.type\n          },\n          deliveryAddress: row[12] || initialFormState.deliveryAddress,\n          discount: row[13] || initialFormState.discount,\n          note: row[14] || initialFormState.note\n        };\n      });\n      setFormStates(newData);\n    };\n    reader.readAsBinaryString(file);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: handleFileUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), formStates.map((formState, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"Row \", index + 1), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, JSON.stringify(formState, null, 2)))));\n};\nexport default NewExcelOrderForm;","map":{"version":3,"names":["React","useState","XLSX","NewExcelOrderForm","initialFormState","doorName","modelName","folioName","handleName","profilName","height","width","length","number","bothSidesLaminated","detailType","material","type","deliveryAddress","discount","note","formStates","setFormStates","handleFileUpload","e","file","target","files","reader","FileReader","onload","event","binaryString","result","workbook","read","sheetName","SheetNames","sheet","Sheets","data","utils","sheet_to_json","header","newData","slice","map","row","readAsBinaryString","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onChange","formState","index","key","JSON","stringify"],"sources":["/Users/milen.mladenov/asset-management-fe/src/pages/newExcelOrderForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\n\nconst NewExcelOrderForm = () => {\n  const initialFormState = {\n    doorName: '',\n    modelName: \"Без\",\n    folioName: \"Без\",\n    handleName: 'Без Дръжка',\n    profilName: 'R1',\n    height: 400,\n    width: 400,\n    length: 2360,\n    number: 1,\n    bothSidesLaminated: \"false\",\n    detailType: {\n      material: \"\",\n      type: \"\"\n    },\n    deliveryAddress: '',\n    discount: 0,\n    note: ''\n  };\n\n  const [formStates, setFormStates] = useState([]);\n\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = (event) => {\n      const binaryString = event.target.result;\n      const workbook = XLSX.read(binaryString, { type: 'binary' });\n      const sheetName = workbook.SheetNames[0]; // Assuming Sheet 1 is the first sheet\n      const sheet = workbook.Sheets[sheetName];\n      const data = XLSX.utils.sheet_to_json(sheet, { header: 1 });\n\n      const newData = data.slice(1).map(row => {\n        return {\n          doorName: row[0] || initialFormState.doorName,\n          modelName: row[1] || initialFormState.modelName,\n          folioName: row[2] || initialFormState.folioName,\n          handleName: row[3] || initialFormState.handleName,\n          profilName: row[4] || initialFormState.profilName,\n          height: row[5] || initialFormState.height,\n          width: row[6] || initialFormState.width,\n          length: row[7] || initialFormState.length,\n          number: row[8] || initialFormState.number,\n          bothSidesLaminated: row[9] || initialFormState.bothSidesLaminated,\n          detailType: {\n            material: row[10] || initialFormState.detailType.material,\n            type: row[11] || initialFormState.detailType.type,\n          },\n          deliveryAddress: row[12] || initialFormState.deliveryAddress,\n          discount: row[13] || initialFormState.discount,\n          note: row[14] || initialFormState.note,\n        };\n      });\n\n      setFormStates(newData);\n    };\n\n    reader.readAsBinaryString(file);\n  };\n\n  return (\n    <div>\n      <input type=\"file\" onChange={handleFileUpload} />\n      {formStates.map((formState, index) => (\n        <div key={index}>\n          <h2>Row {index + 1}</h2>\n          <pre>{JSON.stringify(formState, null, 2)}</pre>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default NewExcelOrderForm;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,KAAKC,IAAI,MAAM,MAAM;AAE5B,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAC9B,MAAMC,gBAAgB,GAAG;IACvBC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,KAAK;IAChBC,SAAS,EAAE,KAAK;IAChBC,UAAU,EAAE,YAAY;IACxBC,UAAU,EAAE,IAAI;IAChBC,MAAM,EAAE,GAAG;IACXC,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,IAAI;IACZC,MAAM,EAAE,CAAC;IACTC,kBAAkB,EAAE,OAAO;IAC3BC,UAAU,EAAE;MACVC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE;IACR,CAAC;IACDC,eAAe,EAAE,EAAE;IACnBC,QAAQ,EAAE,CAAC;IACXC,IAAI,EAAE;EACR,CAAC;EAED,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMsB,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAE/BD,MAAM,CAACE,MAAM,GAAIC,KAAK,IAAK;MACzB,MAAMC,YAAY,GAAGD,KAAK,CAACL,MAAM,CAACO,MAAM;MACxC,MAAMC,QAAQ,GAAGhC,IAAI,CAACiC,IAAI,CAACH,YAAY,EAAE;QAAEf,IAAI,EAAE;MAAS,CAAC,CAAC;MAC5D,MAAMmB,SAAS,GAAGF,QAAQ,CAACG,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1C,MAAMC,KAAK,GAAGJ,QAAQ,CAACK,MAAM,CAACH,SAAS,CAAC;MACxC,MAAMI,IAAI,GAAGtC,IAAI,CAACuC,KAAK,CAACC,aAAa,CAACJ,KAAK,EAAE;QAAEK,MAAM,EAAE;MAAE,CAAC,CAAC;MAE3D,MAAMC,OAAO,GAAGJ,IAAI,CAACK,KAAK,CAAC,CAAC,CAAC,CAACC,GAAG,CAACC,GAAG,IAAI;QACvC,OAAO;UACL1C,QAAQ,EAAE0C,GAAG,CAAC,CAAC,CAAC,IAAI3C,gBAAgB,CAACC,QAAQ;UAC7CC,SAAS,EAAEyC,GAAG,CAAC,CAAC,CAAC,IAAI3C,gBAAgB,CAACE,SAAS;UAC/CC,SAAS,EAAEwC,GAAG,CAAC,CAAC,CAAC,IAAI3C,gBAAgB,CAACG,SAAS;UAC/CC,UAAU,EAAEuC,GAAG,CAAC,CAAC,CAAC,IAAI3C,gBAAgB,CAACI,UAAU;UACjDC,UAAU,EAAEsC,GAAG,CAAC,CAAC,CAAC,IAAI3C,gBAAgB,CAACK,UAAU;UACjDC,MAAM,EAAEqC,GAAG,CAAC,CAAC,CAAC,IAAI3C,gBAAgB,CAACM,MAAM;UACzCC,KAAK,EAAEoC,GAAG,CAAC,CAAC,CAAC,IAAI3C,gBAAgB,CAACO,KAAK;UACvCC,MAAM,EAAEmC,GAAG,CAAC,CAAC,CAAC,IAAI3C,gBAAgB,CAACQ,MAAM;UACzCC,MAAM,EAAEkC,GAAG,CAAC,CAAC,CAAC,IAAI3C,gBAAgB,CAACS,MAAM;UACzCC,kBAAkB,EAAEiC,GAAG,CAAC,CAAC,CAAC,IAAI3C,gBAAgB,CAACU,kBAAkB;UACjEC,UAAU,EAAE;YACVC,QAAQ,EAAE+B,GAAG,CAAC,EAAE,CAAC,IAAI3C,gBAAgB,CAACW,UAAU,CAACC,QAAQ;YACzDC,IAAI,EAAE8B,GAAG,CAAC,EAAE,CAAC,IAAI3C,gBAAgB,CAACW,UAAU,CAACE;UAC/C,CAAC;UACDC,eAAe,EAAE6B,GAAG,CAAC,EAAE,CAAC,IAAI3C,gBAAgB,CAACc,eAAe;UAC5DC,QAAQ,EAAE4B,GAAG,CAAC,EAAE,CAAC,IAAI3C,gBAAgB,CAACe,QAAQ;UAC9CC,IAAI,EAAE2B,GAAG,CAAC,EAAE,CAAC,IAAI3C,gBAAgB,CAACgB;QACpC,CAAC;MACH,CAAC,CAAC;MAEFE,aAAa,CAACsB,OAAO,CAAC;IACxB,CAAC;IAEDhB,MAAM,CAACoB,kBAAkB,CAACvB,IAAI,CAAC;EACjC,CAAC;EAED,oBACEzB,KAAA,CAAAiD,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEvD,KAAA,CAAAiD,aAAA;IAAOhC,IAAI,EAAC,MAAM;IAACuC,QAAQ,EAAEjC,gBAAiB;IAAA2B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,EAChDlC,UAAU,CAACyB,GAAG,CAAC,CAACW,SAAS,EAAEC,KAAK,kBAC/B1D,KAAA,CAAAiD,aAAA;IAAKU,GAAG,EAAED,KAAM;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACdvD,KAAA,CAAAiD,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,MAAI,EAACG,KAAK,GAAG,CAAM,CAAC,eACxB1D,KAAA,CAAAiD,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAMK,IAAI,CAACC,SAAS,CAACJ,SAAS,EAAE,IAAI,EAAE,CAAC,CAAO,CAC3C,CACN,CACE,CAAC;AAEV,CAAC;AAED,eAAetD,iBAAiB"},"metadata":{},"sourceType":"module"}