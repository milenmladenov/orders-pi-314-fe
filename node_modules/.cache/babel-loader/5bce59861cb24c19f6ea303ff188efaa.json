{"ast":null,"code":"var _jsxFileName = \"/Users/milenmladenov/asset-management-fe/src/pages/Login.js\";\nimport React, { Component } from 'react';\nimport { NavLink, Navigate } from 'react-router-dom';\nimport { Button, Form, Grid, Segment, Message } from 'semantic-ui-react';\nimport AuthContext from '../components/context/AuthContext';\nimport { orderApi } from '../components/misc/OrderApi';\nimport { parseJwt, handleLogError } from '../components/misc/Helpers';\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min';\nclass Login extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      username: '',\n      password: '',\n      isLoggedIn: false,\n      isError: false\n    };\n    this.handleInputChange = (e, _ref) => {\n      let {\n        name,\n        value\n      } = _ref;\n      this.setState({\n        [name]: value\n      });\n    };\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        username,\n        password\n      } = this.state;\n      if (!(username && password)) {\n        this.setState({\n          isError: true\n        });\n        return;\n      }\n      orderApi.authenticate(username, password).then(response => {\n        const {\n          accessToken\n        } = response.data;\n        const data = parseJwt(accessToken);\n        const user = {\n          data,\n          accessToken\n        };\n        localStorage.setItem('accessToken', accessToken);\n        const Auth = this.context;\n        Auth.userLogin(user);\n        this.setState({\n          username: '',\n          password: '',\n          isLoggedIn: true,\n          isError: false\n        });\n      }).catch(error => {\n        handleLogError(error);\n        this.setState({\n          isError: true\n        });\n      });\n    };\n  }\n  componentDidMount() {\n    const Auth = this.context;\n    const isLoggedIn = Auth.userIsAuthenticated();\n    this.setState({\n      isLoggedIn\n    });\n  }\n  render() {\n    const {\n      isLoggedIn,\n      isError\n    } = this.state;\n    if (isLoggedIn) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: '/app',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 14\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(Grid, {\n        textAlign: \"center\",\n        className: \"min-h-screen bg-gray-50\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Column, {\n        style: {\n          maxWidth: 450\n        },\n        className: \"mx-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        size: \"large\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Segment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form.Input, {\n        fluid: true,\n        autoFocus: true,\n        name: \"username\",\n        icon: \"user\",\n        iconPosition: \"left\",\n        placeholder: \"Username\",\n        onChange: this.handleInputChange,\n        className: \"mb-4\" // Add Tailwind CSS class\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Form.Input, {\n        fluid: true,\n        name: \"password\",\n        icon: \"lock\",\n        iconPosition: \"left\",\n        placeholder: \"Password\",\n        type: \"password\",\n        onChange: this.handleInputChange,\n        className: \"mb-4\" // Add Tailwind CSS class\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"w-full px-4 py-2 text-sm font-medium text-white bg-violet-600 rounded-lg hover:bg-violet-500 focus:outline-none focus:bg-violet-500\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }\n      }, \"Login\"))), /*#__PURE__*/React.createElement(Message, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }\n      }, `Don't have already an account? `, /*#__PURE__*/React.createElement(NavLink, {\n        to: \"/signup\",\n        className: \"text-violet-600 hover:underline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }, \"Sign Up\")), isError && /*#__PURE__*/React.createElement(Message, {\n        negative: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }\n      }, \"The username or password provided are incorrect!\")));\n    }\n  }\n}\nLogin.contextType = AuthContext;\nexport default Login;","map":{"version":3,"names":["React","Component","NavLink","Navigate","Button","Form","Grid","Segment","Message","AuthContext","orderApi","parseJwt","handleLogError","Redirect","Login","constructor","arguments","state","username","password","isLoggedIn","isError","handleInputChange","e","_ref","name","value","setState","handleSubmit","preventDefault","authenticate","then","response","accessToken","data","user","localStorage","setItem","Auth","context","userLogin","catch","error","componentDidMount","userIsAuthenticated","render","createElement","to","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","className","Column","style","maxWidth","size","onSubmit","Input","fluid","autoFocus","icon","iconPosition","placeholder","onChange","type","negative","contextType"],"sources":["/Users/milenmladenov/asset-management-fe/src/pages/Login.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { NavLink, Navigate } from 'react-router-dom'\nimport { Button, Form, Grid, Segment, Message } from 'semantic-ui-react'\nimport AuthContext from '../components/context/AuthContext'\nimport { orderApi } from '../components/misc/OrderApi'\nimport { parseJwt, handleLogError } from '../components/misc/Helpers'\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min'\n\nclass Login extends Component {\n  static contextType = AuthContext\n\n  state = {\n    username: '',\n    password: '',\n    isLoggedIn: false,\n    isError: false\n  }\n\n  componentDidMount() {\n    const Auth = this.context\n    const isLoggedIn = Auth.userIsAuthenticated()\n    this.setState({ isLoggedIn })\n  }\n\n  handleInputChange = (e, {name, value}) => {\n    this.setState({ [name]: value })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n\n    const { username, password } = this.state\n    if (!(username && password)) {\n      this.setState({ isError: true })\n      return\n    }\n\n    orderApi.authenticate(username, password)\n      .then(response => {\n        const { accessToken } = response.data\n        const data = parseJwt(accessToken)\n        const user = { data, accessToken }\n        localStorage.setItem('accessToken', accessToken);\n        const Auth = this.context\n        Auth.userLogin(user)\n\n        this.setState({\n          username: '',\n          password: '',\n          isLoggedIn: true,\n          isError: false\n        })\n      })\n      .catch(error => {\n        handleLogError(error)\n        this.setState({ isError: true })\n      })\n  }\n\n  render() {\n    const { isLoggedIn, isError } = this.state\n    if (isLoggedIn) {\n      return <Redirect to={'/app'} />\n    } else {\n      return (\n        <Grid textAlign='center' className='min-h-screen bg-gray-50'>\n        <Grid.Column style={{ maxWidth: 450 }} className='mx-4'>\n          <Form size='large' onSubmit={this.handleSubmit}>\n            <Segment>\n              <Form.Input\n                fluid\n                autoFocus\n                name='username'\n                icon='user'\n                iconPosition='left'\n                placeholder='Username'\n                onChange={this.handleInputChange}\n                className='mb-4' // Add Tailwind CSS class\n              />\n              <Form.Input\n                fluid\n                name='password'\n                icon='lock'\n                iconPosition='left'\n                placeholder='Password'\n                type='password'\n                onChange={this.handleInputChange}\n                className='mb-4' // Add Tailwind CSS class\n              />\n              <button\n                type='submit'\n                className='w-full px-4 py-2 text-sm font-medium text-white bg-violet-600 rounded-lg hover:bg-violet-500 focus:outline-none focus:bg-violet-500'\n              >\n                Login\n              </button>\n            </Segment>\n          </Form>\n          <Message>{`Don't have already an account? `}\n            <NavLink to='/signup' className='text-violet-600 hover:underline'>\n              Sign Up\n            </NavLink>\n          </Message>\n          {isError && (\n            <Message negative>The username or password provided are incorrect!</Message>\n          )}\n        </Grid.Column>\n      </Grid>\n      )\n    }\n  }\n}\n\nexport default Login"],"mappings":"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"},"metadata":{},"sourceType":"module"}