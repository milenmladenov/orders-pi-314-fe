{"ast":null,"code":"var _jsxFileName = \"/Users/milenmladenov/asset-management-fe/src/pages/newExcelOrderForm.js\";\nimport React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport NewOrderForm from './newOrderForm';\nimport PageTitle from \"../components/Typography/PageTitle\";\nconst NewExcelOrderForm = () => {\n  const [groupForms, setGroupForms] = useState([]);\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = e => {\n      const data = new Uint8Array(e.target.result);\n      const workbook = XLSX.read(data, {\n        type: 'array'\n      });\n      const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n      const excelData = XLSX.utils.sheet_to_json(worksheet, {\n        header: 1\n      });\n\n      // Assuming the headers are in the order: 'Модел', 'Фолио', 'Височина', 'Ширина', 'Брой', 'м2', 'Профил', 'Дръжка'\n      const [modelHeader, folioHeader, heightHeader, widthHeader, quantityHeader, areaHeader, profilHeader, handleHeader] = excelData[0];\n      const formData = excelData.slice(1).map(row => ({\n        modelName: row[modelHeader],\n        folioName: row[folioHeader],\n        height: row[heightHeader],\n        width: row[widthHeader],\n        number: row[quantityHeader],\n        area: row[areaHeader],\n        profilName: row[profilHeader],\n        handleName: row[handleHeader]\n      }));\n      setGroupForms(formData); // Update the groupForms state with the imported data\n    };\n\n    reader.readAsArrayBuffer(file);\n  };\n  const handleImportButtonClick = () => {\n    // Check if there are any rows in the imported data\n    if (groupForms.length > 0) {\n      // If there is more than one row, create new groups\n      const newGroups = groupForms.map(formData => ({\n        ...formData\n      }));\n      setGroupForms(prevGroupForms => [...prevGroupForms, ...newGroups]);\n    }\n  };\n\n  // Rest of the form rendering code...\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-span-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"fileInput\",\n    className: \"block font-medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"\\u0418\\u043C\\u043F\\u043E\\u0440\\u0442\\u0438\\u0440\\u0430\\u043D\\u0435 \\u043D\\u0430 Excel \\u0444\\u0430\\u0439\\u043B:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"fileInput\",\n    name: \"fileInput\",\n    onChange: handleFileChange,\n    accept: \".xlsx, .xls\",\n    className: \"mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"px-4 py-2 mt-2 text-white bg-blue-600 rounded-md shadow-md hover:bg-blue-700\",\n    onClick: handleImportButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"\\u0418\\u043C\\u043F\\u043E\\u0440\\u0442\\u0438\\u0440\\u0430\\u0439\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid gap-2 mb-12 md:grid-cols-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-span-12 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"\\u0421\\u044A\\u0437\\u0434\\u0430\\u0432\\u0430\\u043D\\u0435 \\u043D\\u0430 \\u043D\\u043E\\u0432\\u0430 \\u043F\\u043E\\u0440\\u044A\\u0447\\u043A\\u0430\")), groupForms.map((formData, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"col-span-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: `orderForm${index}`,\n    className: \"grid grid-cols-2 gap-4 border\",\n    style: {\n      padding: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"modelName\",\n    className: \"block font-medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \"\\u041C\\u043E\\u0434\\u0435\\u043B:\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"mt-1 w-full p-2 border rounded-md shadow-sm\",\n    id: \"modelName\",\n    name: \"modelName\",\n    value: formData.modelName,\n    onChange: event => handleChange(event, index),\n    disabled: formData.doorName === '',\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-span-2 flex justify-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"w-full px-4 py-2 text-white bg-green-600 rounded-md shadow-md hover:bg-green-700\",\n    onClick: handleAddGroup,\n    style: {\n      width: '150px',\n      margin: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, \"\\u041D\\u043E\\u0432\\u0430 \\u0413\\u0440\\u0443\\u043F\\u0430\")))))), /*#__PURE__*/React.createElement(NewOrderForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }));\n};\nexport default NewExcelOrderForm;\n``;","map":{"version":3,"names":["React","useState","XLSX","NewOrderForm","PageTitle","NewExcelOrderForm","groupForms","setGroupForms","handleFileChange","event","file","target","files","reader","FileReader","onload","e","data","Uint8Array","result","workbook","read","type","worksheet","Sheets","SheetNames","excelData","utils","sheet_to_json","header","modelHeader","folioHeader","heightHeader","widthHeader","quantityHeader","areaHeader","profilHeader","handleHeader","formData","slice","map","row","modelName","folioName","height","width","number","area","profilName","handleName","readAsArrayBuffer","handleImportButtonClick","length","newGroups","prevGroupForms","createElement","Fragment","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","name","onChange","accept","onClick","index","key","style","padding","value","handleChange","disabled","doorName","required","handleAddGroup","margin"],"sources":["/Users/milenmladenov/asset-management-fe/src/pages/newExcelOrderForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport NewOrderForm from './newOrderForm';\nimport PageTitle from \"../components/Typography/PageTitle\";\n\n\nconst NewExcelOrderForm = () => {\n  const [groupForms, setGroupForms] = useState([]);\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const data = new Uint8Array(e.target.result);\n      const workbook = XLSX.read(data, { type: 'array' });\n      const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n      const excelData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n\n      // Assuming the headers are in the order: 'Модел', 'Фолио', 'Височина', 'Ширина', 'Брой', 'м2', 'Профил', 'Дръжка'\n      const [modelHeader, folioHeader, heightHeader, widthHeader, quantityHeader, areaHeader, profilHeader, handleHeader] = excelData[0];\n      const formData = excelData.slice(1).map((row) => ({\n        modelName: row[modelHeader],\n        folioName: row[folioHeader],\n        height: row[heightHeader],\n        width: row[widthHeader],\n        number: row[quantityHeader],\n        area: row[areaHeader],\n        profilName: row[profilHeader],\n        handleName: row[handleHeader],\n      }));\n\n      setGroupForms(formData); // Update the groupForms state with the imported data\n    };\n    reader.readAsArrayBuffer(file);\n  };\n\n  const handleImportButtonClick = () => {\n    // Check if there are any rows in the imported data\n    if (groupForms.length > 0) {\n      // If there is more than one row, create new groups\n      const newGroups = groupForms.map((formData) => ({ ...formData }));\n      setGroupForms((prevGroupForms) => [...prevGroupForms, ...newGroups]);\n    }\n  };\n\n  // Rest of the form rendering code...\n  return (\n    <>\n      <div className=\"col-span-2\">\n        <label htmlFor=\"fileInput\" className=\"block font-medium\">\n          Импортиране на Excel файл:\n        </label>\n        <input\n          type=\"file\"\n          id=\"fileInput\"\n          name=\"fileInput\"\n          onChange={handleFileChange}\n          accept=\".xlsx, .xls\"\n          className=\"mt-1\"\n        />\n        <button\n          className=\"px-4 py-2 mt-2 text-white bg-blue-600 rounded-md shadow-md hover:bg-blue-700\"\n          onClick={handleImportButtonClick}\n        >\n          Импортирай\n        </button>\n      </div>\n      <div className=\"grid gap-2 mb-12 md:grid-cols-2\">\n        <div className=\"col-span-12 text-center\">\n          <PageTitle>Създаване на нова поръчка</PageTitle>\n        </div>\n        {groupForms.map((formData, index) => (\n          <div key={index} className=\"col-span-2\">\n            <form\n              id={`orderForm${index}`}\n              className=\"grid grid-cols-2 gap-4 border\"\n              style={{ padding: '20px' }}\n            >\n              {/* Model Name */}\n              <div>\n                <label htmlFor=\"modelName\" className=\"block font-medium\">\n                  Модел:\n                </label>\n                <select\n                  className=\"mt-1 w-full p-2 border rounded-md shadow-sm\"\n                  id=\"modelName\"\n                  name=\"modelName\"\n                  value={formData.modelName}\n                  onChange={(event) => handleChange(event, index)}\n                  disabled={formData.doorName === ''}\n                  required\n                >\n                  {/* Add options for Model Name */}\n                </select>\n              </div>\n\n              {/* The rest of the form fields... */}\n              {/* Replace this section with the remaining form fields */}\n              {/* For example, you can have similar sections for Folio Name, Handle Name, Profil Name, Height, Width, Number, etc. */}\n\n              <div className=\"col-span-2 flex justify-end\">\n                <button\n                  className=\"w-full px-4 py-2 text-white bg-green-600 rounded-md shadow-md hover:bg-green-700\"\n                  onClick={handleAddGroup}\n                  style={{ width: '150px', margin: '10px' }}\n                >\n                  Нова Група\n                </button>\n              </div>\n            </form>\n          </div>\n        ))}\n      </div>\n      <NewOrderForm />\n    </>\n  );\n};\n\nexport default NewExcelOrderForm;\n``\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}