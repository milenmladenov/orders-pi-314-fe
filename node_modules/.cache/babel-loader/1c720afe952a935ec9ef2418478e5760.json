{"ast":null,"code":"var _jsxFileName = \"/Users/milenmladenov/asset-management-fe/src/pages/CreateAccount.js\";\nimport React, { Component } from 'react';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { Button, Form, Grid, Segment, Message } from 'semantic-ui-react';\nimport AuthContext from '../components/context/AuthContext';\nimport { orderApi } from '../components/misc/OrderApi';\nimport { parseJwt, handleLogError } from '../components/misc/Helpers';\nfunction CreateAccount() {\n  contextType = AuthContext;\n  state = {\n    username: '',\n    password: '',\n    name: '',\n    email: '',\n    isLoggedIn: false,\n    isError: false,\n    errorMessage: ''\n  };\n  componentDidMount = () => {\n    const Auth = this.context;\n    const isLoggedIn = Auth.userIsAuthenticated();\n    this.setState({\n      isLoggedIn\n    });\n  };\n  handleInputChange = (e, _ref) => {\n    let {\n      name,\n      value\n    } = _ref;\n    this.setState({\n      [name]: value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    const {\n      username,\n      password,\n      name,\n      email\n    } = this.state;\n    if (!(username && password && name && email)) {\n      this.setState({\n        isError: true,\n        errorMessage: 'Please, inform all fields!'\n      });\n      return;\n    }\n    const user = {\n      username,\n      password,\n      name,\n      email\n    };\n    orderApi.signup(user).then(response => {\n      const {\n        accessToken\n      } = response.data;\n      const data = parseJwt(accessToken);\n      const user = {\n        data,\n        accessToken\n      };\n      const Auth = this.context;\n      Auth.userLogin(user);\n      this.setState({\n        username: '',\n        password: '',\n        isLoggedIn: true,\n        isError: false,\n        errorMessage: ''\n      });\n    }).catch(error => {\n      handleLogError(error);\n      if (error.response && error.response.data) {\n        const errorData = error.response.data;\n        let errorMessage = 'Invalid fields';\n        if (errorData.status === 409) {\n          errorMessage = errorData.message;\n        } else if (errorData.status === 400) {\n          errorMessage = errorData.errors[0].defaultMessage;\n        }\n        this.setState({\n          isError: true,\n          errorMessage\n        });\n      }\n    });\n  };\n  render = () => {\n    const {\n      isLoggedIn,\n      isError,\n      errorMessage\n    } = this.state;\n    if (isLoggedIn) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/app\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 14\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(Grid, {\n        textAlign: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Column, {\n        style: {\n          maxWidth: 450\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        size: \"large\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Segment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Input, {\n        fluid: true,\n        autoFocus: true,\n        name: \"username\",\n        icon: \"user\",\n        iconPosition: \"left\",\n        placeholder: \"Username\",\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Form.Input, {\n        fluid: true,\n        name: \"password\",\n        icon: \"lock\",\n        iconPosition: \"left\",\n        placeholder: \"Password\",\n        type: \"password\",\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Form.Input, {\n        fluid: true,\n        name: \"name\",\n        icon: \"address card\",\n        iconPosition: \"left\",\n        placeholder: \"Name\",\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Form.Input, {\n        fluid: true,\n        name: \"email\",\n        icon: \"at\",\n        iconPosition: \"left\",\n        placeholder: \"Email\",\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        color: \"violet\",\n        fluid: true,\n        size: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }\n      }, \"Signup\"))), /*#__PURE__*/React.createElement(Message, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }\n      }, `Already have an account? `, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"/login\",\n        color: \"violet\",\n        as: NavLink,\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }\n      }, \"Login\")), isError && /*#__PURE__*/React.createElement(Message, {\n        negative: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }\n      }, errorMessage)));\n    }\n  };\n}\nexport default CreateAccount;","map":{"version":3,"names":["React","Component","NavLink","Redirect","Button","Form","Grid","Segment","Message","AuthContext","orderApi","parseJwt","handleLogError","CreateAccount","contextType","state","username","password","name","email","isLoggedIn","isError","errorMessage","componentDidMount","Auth","context","userIsAuthenticated","setState","handleInputChange","e","_ref","value","handleSubmit","preventDefault","user","signup","then","response","accessToken","data","userLogin","catch","error","errorData","status","message","errors","defaultMessage","render","createElement","to","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","Column","style","maxWidth","size","onSubmit","Input","fluid","autoFocus","icon","iconPosition","placeholder","onChange","type","color","href","as","negative"],"sources":["/Users/milenmladenov/asset-management-fe/src/pages/CreateAccount.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { NavLink, Redirect } from 'react-router-dom'; \nimport { Button, Form, Grid, Segment, Message } from 'semantic-ui-react'\nimport AuthContext from '../components/context/AuthContext'\nimport { orderApi } from '../components/misc/OrderApi'\nimport { parseJwt, handleLogError } from '../components/misc/Helpers'\nfunction CreateAccount()  {\n  contextType = AuthContext\n\n  state = {\n    username: '',\n    password: '',\n    name: '',\n    email: '',\n    isLoggedIn: false,\n    isError: false,\n    errorMessage: ''\n  }\n\n  componentDidMount = () => {\n    const Auth = this.context\n    const isLoggedIn = Auth.userIsAuthenticated()\n    this.setState({ isLoggedIn })\n  }\n\n  handleInputChange = (e, {name, value}) => {\n    this.setState({ [name]: value })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n\n    const { username, password, name, email } = this.state\n    if (!(username && password && name && email)) {\n      this.setState({\n        isError: true,\n        errorMessage: 'Please, inform all fields!'\n      })\n      return\n    }\n\n    const user = { username, password, name, email }\n    orderApi.signup(user)\n      .then(response => {\n        const { accessToken } = response.data\n        const data = parseJwt(accessToken)\n        const user = { data, accessToken }\n\n        const Auth = this.context\n        Auth.userLogin(user)\n\n        this.setState({\n          username: '',\n          password: '',\n          isLoggedIn: true,\n          isError: false,\n          errorMessage: ''\n        })\n      })\n      .catch(error => {\n        handleLogError(error)\n        if (error.response && error.response.data) {\n          const errorData = error.response.data\n          let errorMessage = 'Invalid fields'\n          if (errorData.status === 409) {\n            errorMessage = errorData.message\n          } else if (errorData.status === 400) {\n            errorMessage = errorData.errors[0].defaultMessage\n          }\n          this.setState({\n            isError: true,\n            errorMessage\n          })\n        }\n      })\n  }\n\n  render = () => {\n    const { isLoggedIn, isError, errorMessage } = this.state\n\n    if (isLoggedIn) {\n      return <Redirect to='/app' />\n    } else {\n      return (\n        <Grid textAlign='center'>\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Form size='large' onSubmit={this.handleSubmit}>\n              <Segment>\n                <Form.Input\n                  fluid\n                  autoFocus\n                  name='username'\n                  icon='user'\n                  iconPosition='left'\n                  placeholder='Username'\n                  onChange={this.handleInputChange}\n                />\n                <Form.Input\n                  fluid\n                  name='password'\n                  icon='lock'\n                  iconPosition='left'\n                  placeholder='Password'\n                  type='password'\n                  onChange={this.handleInputChange}\n                />\n                <Form.Input\n                  fluid\n                  name='name'\n                  icon='address card'\n                  iconPosition='left'\n                  placeholder='Name'\n                  onChange={this.handleInputChange}\n                />\n                <Form.Input\n                  fluid\n                  name='email'\n                  icon='at'\n                  iconPosition='left'\n                  placeholder='Email'\n                  onChange={this.handleInputChange}\n                />\n                <Button color='violet' fluid size='large'>Signup</Button>\n              </Segment>\n            </Form>\n            <Message>{`Already have an account? `}\n              <a href='/login' color='violet' as={NavLink} to=\"/login\">Login</a>\n            </Message>\n            {isError && <Message negative>{errorMessage}</Message>}\n          </Grid.Column>\n        </Grid>\n      )\n    }\n  }\n}\n\nexport default CreateAccount"],"mappings":"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"},"metadata":{},"sourceType":"module"}