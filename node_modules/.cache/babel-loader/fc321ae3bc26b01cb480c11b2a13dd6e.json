{"ast":null,"code":"import _slicedToArray from\"/Users/milenmladenov/asset-management-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{TableBody,TableContainer,Table,TableHeader,TableCell,TableRow,TableFooter,Avatar,Badge,Pagination}from\"@windmill/react-ui\";import response from\"../utils/demo/usersData\";var UsersTable=function UsersTable(_ref){var resultsPerPage=_ref.resultsPerPage,filter=_ref.filter;var _useState=useState(1),_useState2=_slicedToArray(_useState,2),page=_useState2[0],setPage=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),data=_useState4[0],setData=_useState4[1];// pagination setup\nvar totalResults=response.length;// pagination change control\nfunction onPageChange(p){setPage(p);}// on page change, load new sliced data\n// here you would make another server request for new data\nuseEffect(function(){setData(response.slice((page-1)*resultsPerPage,page*resultsPerPage));},[page,resultsPerPage,filter]);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(TableContainer,{className:\"mb-8\"},/*#__PURE__*/React.createElement(Table,null,/*#__PURE__*/React.createElement(TableHeader,null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(TableCell,null,\"First Name\"),/*#__PURE__*/React.createElement(TableCell,null,\"Last Name\"),/*#__PURE__*/React.createElement(TableCell,null,\"Email\"),/*#__PURE__*/React.createElement(TableCell,null,\"Joined on\"))),/*#__PURE__*/React.createElement(TableBody,null,data.map(function(user,i){return/*#__PURE__*/React.createElement(TableRow,{key:i},/*#__PURE__*/React.createElement(TableCell,null,/*#__PURE__*/React.createElement(\"div\",{className:\"flex items-center text-sm\"},/*#__PURE__*/React.createElement(Avatar,{className:\"hidden mr-3 md:block\",src:user.avatar,alt:\"User image\"}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",{className:\"font-semibold\"},user.first_name)))),/*#__PURE__*/React.createElement(TableCell,null,/*#__PURE__*/React.createElement(\"span\",{className:\"text-sm\"},user.last_name)),/*#__PURE__*/React.createElement(TableCell,null,/*#__PURE__*/React.createElement(\"span\",{className:\"text-sm\"},user.email)),/*#__PURE__*/React.createElement(TableCell,null,/*#__PURE__*/React.createElement(\"span\",{className:\"text-sm\"},new Date(user.joined_on).toLocaleDateString())));}))),/*#__PURE__*/React.createElement(TableFooter,null,/*#__PURE__*/React.createElement(Pagination,{totalResults:totalResults,resultsPerPage:resultsPerPage,label:\"Table navigation\",onChange:onPageChange}))));};export default UsersTable;","map":{"version":3,"sources":["/Users/milenmladenov/asset-management-fe/src/components/UsersTable.js"],"names":["React","useState","useEffect","TableBody","TableContainer","Table","TableHeader","TableCell","TableRow","TableFooter","Avatar","Badge","Pagination","response","UsersTable","resultsPerPage","filter","page","setPage","data","setData","totalResults","length","onPageChange","p","slice","map","user","i","avatar","first_name","last_name","email","Date","joined_on","toLocaleDateString"],"mappings":"+JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OACEC,SADF,CAEEC,cAFF,CAGEC,KAHF,CAIEC,WAJF,CAKEC,SALF,CAMEC,QANF,CAOEC,WAPF,CAQEC,MARF,CASEC,KATF,CAUEC,UAVF,KAWO,oBAXP,CAYA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAAgC,IAA7BC,CAAAA,cAA6B,MAA7BA,cAA6B,CAAbC,MAAa,MAAbA,MAAa,CACjD,cAAwBf,QAAQ,CAAC,CAAD,CAAhC,wCAAOgB,IAAP,eAAaC,OAAb,eACA,eAAwBjB,QAAQ,CAAC,EAAD,CAAhC,yCAAOkB,IAAP,eAAaC,OAAb,eAEA;AACA,GAAMC,CAAAA,YAAY,CAAGR,QAAQ,CAACS,MAA9B,CAEA;AACA,QAASC,CAAAA,YAAT,CAAsBC,CAAtB,CAAyB,CACvBN,OAAO,CAACM,CAAD,CAAP,CACD,CAED;AACA;AACAtB,SAAS,CAAC,UAAM,CACdkB,OAAO,CAACP,QAAQ,CAACY,KAAT,CAAe,CAACR,IAAI,CAAG,CAAR,EAAaF,cAA5B,CAA4CE,IAAI,CAAGF,cAAnD,CAAD,CAAP,CACD,CAFQ,CAEN,CAACE,IAAD,CAAOF,cAAP,CAAuBC,MAAvB,CAFM,CAAT,CAIA,mBACE,4CAEE,oBAAC,cAAD,EAAgB,SAAS,CAAC,MAA1B,eACE,oBAAC,KAAD,mBACE,oBAAC,WAAD,mBACE,2CACE,oBAAC,SAAD,mBADF,cAEE,oBAAC,SAAD,kBAFF,cAGE,oBAAC,SAAD,cAHF,cAIE,oBAAC,SAAD,kBAJF,CADF,CADF,cASE,oBAAC,SAAD,MACGG,IAAI,CAACO,GAAL,CAAS,SAACC,IAAD,CAAOC,CAAP,qBACR,oBAAC,QAAD,EAAU,GAAG,CAAEA,CAAf,eACE,oBAAC,SAAD,mBACE,2BAAK,SAAS,CAAC,2BAAf,eACE,oBAAC,MAAD,EACE,SAAS,CAAC,sBADZ,CAEE,GAAG,CAAED,IAAI,CAACE,MAFZ,CAGE,GAAG,CAAC,YAHN,EADF,cAME,4CACE,yBAAG,SAAS,CAAC,eAAb,EAA8BF,IAAI,CAACG,UAAnC,CADF,CANF,CADF,CADF,cAaE,oBAAC,SAAD,mBACE,4BAAM,SAAS,CAAC,SAAhB,EAA2BH,IAAI,CAACI,SAAhC,CADF,CAbF,cAgBE,oBAAC,SAAD,mBACE,4BAAM,SAAS,CAAC,SAAhB,EAA2BJ,IAAI,CAACK,KAAhC,CADF,CAhBF,cAoBE,oBAAC,SAAD,mBACE,4BAAM,SAAS,CAAC,SAAhB,EACG,GAAIC,CAAAA,IAAJ,CAASN,IAAI,CAACO,SAAd,EAAyBC,kBAAzB,EADH,CADF,CApBF,CADQ,EAAT,CADH,CATF,CADF,cAyCE,oBAAC,WAAD,mBACE,oBAAC,UAAD,EACE,YAAY,CAAEd,YADhB,CAEE,cAAc,CAAEN,cAFlB,CAGE,KAAK,CAAC,kBAHR,CAIE,QAAQ,CAAEQ,YAJZ,EADF,CAzCF,CAFF,CADF,CAuDD,CAzED,CA2EA,cAAeT,CAAAA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport response from \"../utils/demo/usersData\";\n\nconst UsersTable = ({ resultsPerPage, filter }) => {\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n\n  // pagination setup\n  const totalResults = response.length;\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n\n  // on page change, load new sliced data\n  // here you would make another server request for new data\n  useEffect(() => {\n    setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n  }, [page, resultsPerPage, filter]);\n\n  return (\n    <div>\n      {/* Table */}\n      <TableContainer className=\"mb-8\">\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>First Name</TableCell>\n              <TableCell>Last Name</TableCell>\n              <TableCell>Email</TableCell>\n              <TableCell>Joined on</TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {data.map((user, i) => (\n              <TableRow key={i}>\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <Avatar\n                      className=\"hidden mr-3 md:block\"\n                      src={user.avatar}\n                      alt=\"User image\"\n                    />\n                    <div>\n                      <p className=\"font-semibold\">{user.first_name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">{user.last_name}</span>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">{user.email}</span>\n                </TableCell>\n\n                <TableCell>\n                  <span className=\"text-sm\">\n                    {new Date(user.joined_on).toLocaleDateString()}\n                  </span>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter>\n          <Pagination\n            totalResults={totalResults}\n            resultsPerPage={resultsPerPage}\n            label=\"Table navigation\"\n            onChange={onPageChange}\n          />\n        </TableFooter>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default UsersTable;\n"]},"metadata":{},"sourceType":"module"}