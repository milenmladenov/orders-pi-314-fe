{"ast":null,"code":"var _jsxFileName = \"/Users/milenmladenov/asset-management_FE/src/pages/Chats.js\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport ChatUserCard from \"../components/ChatUserCard\";\nimport SelectChatWaiter from \"../components/SelectChatWait/SelectChatWaiter\";\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport SectionTitle from \"../components/Typography/SectionTitle\";\nimport response from \"../utils/demo/usersData\";\nimport { Avatar, Badge } from \"@windmill/react-ui\";\nimport ChatSection from \"../components/ChatSection\";\n\nconst Chats = () => {\n  const [selectedChat, setSelectedChat] = useState(undefined);\n\n  const handleSelect = user => setSelectedChat(user);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, !selectedChat && /*#__PURE__*/React.createElement(PageTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 25\n    }\n  }, \"Connect with your customers\"), selectedChat && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center mt-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: \"hidden md:inline-flex\",\n    src: selectedChat.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mx-3 inline-flex text-2xl font-semibold text-gray-700 dark:text-gray-200\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, selectedChat.first_name, \" \", selectedChat.last_name), /*#__PURE__*/React.createElement(Badge, {\n    type: selectedChat.state === true ? \"success\" : \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, selectedChat.state === true ? \"Online\" : \"Away\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid grid-col md:grid-cols-4 gap-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"md:col-span-3 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, !selectedChat ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-32 flex flex-col justify-center items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SelectChatWaiter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-gray-600 dark:text-gray-400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, \"Select a chat\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChatSection, {\n    messages: selectedChat.messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SectionTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Contacts\"), response.map((user, id) => {\n    if (user.messages !== null) {\n      return /*#__PURE__*/React.createElement(ChatUserCard, {\n        key: id,\n        avatar: user.avatar,\n        first_name: user.first_name,\n        last_name: user.last_name,\n        state: user.state,\n        handleClick: () => handleSelect(user),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      });\n    }\n  }))));\n};\n\nexport default Chats;","map":{"version":3,"sources":["/Users/milenmladenov/asset-management_FE/src/pages/Chats.js"],"names":["React","useState","ChatUserCard","SelectChatWaiter","PageTitle","SectionTitle","response","Avatar","Badge","ChatSection","Chats","selectedChat","setSelectedChat","undefined","handleSelect","user","avatar","first_name","last_name","state","messages","map","id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport ChatUserCard from \"../components/ChatUserCard\";\nimport SelectChatWaiter from \"../components/SelectChatWait/SelectChatWaiter\";\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport SectionTitle from \"../components/Typography/SectionTitle\";\nimport response from \"../utils/demo/usersData\";\nimport { Avatar, Badge } from \"@windmill/react-ui\";\nimport ChatSection from \"../components/ChatSection\";\n\nconst Chats = () => {\n  const [selectedChat, setSelectedChat] = useState(undefined);\n\n  const handleSelect = (user) => setSelectedChat(user);\n\n  return (\n    <div>\n      {!selectedChat && <PageTitle>Connect with your customers</PageTitle>}\n      {selectedChat && (\n        <div className=\"flex items-center mt-6\">\n          <Avatar className=\"hidden md:inline-flex\" src={selectedChat.avatar} />\n          <p className=\"mx-3 inline-flex text-2xl font-semibold text-gray-700 dark:text-gray-200\">\n            {selectedChat.first_name} {selectedChat.last_name}\n          </p>\n\n          <Badge type={selectedChat.state === true ? \"success\" : \"danger\"}>\n            {selectedChat.state === true ? \"Online\" : \"Away\"}\n          </Badge>\n        </div>\n      )}\n\n      <div className=\"grid grid-col md:grid-cols-4 gap-1\">\n        <div className=\"md:col-span-3 \">\n          {!selectedChat ? (\n            <div className=\"mt-32 flex flex-col justify-center items-center\">\n              <SelectChatWaiter />\n              <p className=\"text-gray-600 dark:text-gray-400\">Select a chat</p>\n            </div>\n          ) : (\n            <div>\n              <ChatSection messages={selectedChat.messages} />\n            </div>\n          )}\n        </div>\n        <div className=\"\">\n          <SectionTitle>Contacts</SectionTitle>\n          {response.map((user, id) => {\n            if (user.messages !== null) {\n              return (\n                <ChatUserCard\n                  key={id}\n                  avatar={user.avatar}\n                  first_name={user.first_name}\n                  last_name={user.last_name}\n                  state={user.state}\n                  handleClick={() => handleSelect(user)}\n                />\n              );\n            }\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Chats;\n"]},"metadata":{},"sourceType":"module"}