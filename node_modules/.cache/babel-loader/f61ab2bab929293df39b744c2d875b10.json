{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import * as XLSX from 'xlsx';\n// import NewOrderForm from './newOrderForm';\n// import PageTitle from \"../components/Typography/PageTitle\";\n// import \"../assets/css/groups-in-rows.css\"\n// import ConfirmationModal from '../components/ConfirmationModal';\n// import { config } from '../Constants';\n// import {\n//     Select, Input, Label, HelperText, Button, Modal,\n//     ModalHeader,\n//     ModalBody,\n//     ModalFooter, Textarea\n// } from \"@windmill/react-ui\";\n// import { citiesInBulgaria } from '../cities/citiesData';\n// import { Link } from 'react-router-dom'\n// import FolioOptions from '../components/FolioOptions';\n// import modelOptions from '../components/modelOptions';\n\n// const NewExcelOrderForm = () => {\n\n//     const initialFormState = {\n//         doorName: '',\n//         modelName: \"Без\",\n//         folioName: \"Без\",\n//         handleName: 'Без Дръжка',\n//         profilName: 'R1',\n//         height: 400,\n//         width: 400,\n//         length: 2360,\n//         number: 1,\n//         bothSidesLaminated: \"false\",\n//         detailType: {\n//             material: \"\",\n//             type: \"\"\n//         },\n//         deliveryAddress: '',\n//         discount: 0,\n//         note: ''\n//     };\n//     const [response, setResponse] = useState('');\n//     const [mainDropdownValue, setMainDropdownValue] = useState('');\n//     const [groupForms, setGroupForms] = useState([\n//         { ...initialFormState }\n//     ]);\n//     const apiBaseUrl = config.url.API_BASE_URL;\n//     const [totalPrice, setTotalPrice] = useState('0лв.');\n//     const [groupPrices, setGroupPrices] = useState('0');\n//     const [totalGroupPrices, setTotalGroupPrices] = useState('0');\n//     const [groupSqrt, setGroupSqrt] = useState('0');\n//     const [totalSqrt, setTotalSqrt] = useState('0');\n//     const [modalOpen, setModalOpen] = useState(false);\n//     const [errorModalOpen, setErrorModalOpen] = useState(false);\n//     const [orderUrl, setOrderUrl] = useState();\n//     const [orderPreflightUrl, setOrderPreflightUrl] = useState();\n//     const [handlePrice, setHandlePrice] = useState(0);\n//     const [handleNumber, setHandleNumber] = useState(0);\n//     const [data, setData] = useState([]);\n//     const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true)\n//     const [isModalOpen, setIsModalOpen] = useState(false);\n//     const [deliveryAddress, setDeliveryAddress] = useState('');\n//     const [discount, setDiscount] = useState(0);\n//     const [note, setNote] = useState('');\n//     const [city, setCity] = useState('');\n//     const [isTextareaVisible, setTextareaVisible] = useState(false);\n//     const [groupButtonVisibility, setGroupButtonVisibility] = useState([true]);\n//     const [createdOrderId, setCreatedOrderId] = useState(0)\n//     const [orderUuid, setOrederUuid] = useState('');\n//     const [createdOrderModalOpen, isCreatedOrderModalOpen] = useState(false);\n//     const [elementNumber, setElementNumber] = useState(0);\n//     const [selectedDoor, setSelectedDoor] = useState('');\n//     const [selectedMaterialType, setSelectedMaterialType] = useState('');\n\n//     function closeCreatedorderModal() {\n//         isCreatedOrderModalOpen(false);\n//         window.location.reload();\n//     }\n//     const loggedUser = JSON.parse(localStorage.getItem(\"user\"))\n//     const handleMaterialChange = (event, index) => {\n//         const updatedGroupForms = groupForms.map((formData, i) => {\n//             if (i === index) {\n//                 return { ...formData, detailType: { material: event.target.value } };\n//             }\n//             return formData;\n//         });\n//         setGroupForms(updatedGroupForms);\n//     };\n//     const handleTypeChange = (event, index) => {\n//         const updatedGroupForms = groupForms.map((formData, i) => {\n//             if (i === index) {\n\n//                 return {\n\n//                     ...formData,\n//                     detailType: {\n//                         ...formData.detailType, // Keep the existing material\n//                         type: event.target.value,\n//                     },\n//                 };\n//             }\n//             return formData;\n//         });\n//         setGroupForms(updatedGroupForms);\n//     };\n\n//     const handleDeleteGroup = (indexToDelete) => {\n//         setGroupForms((prevGroupForms) =>\n//             prevGroupForms.filter((_, index) => index !== indexToDelete)\n//         );\n//     };\n//     function closeModal() {\n//         setIsModalOpen(false);\n//         // window.location.reload();\n//     }\n//     const handleMainDropdownChange = (event) => {\n//         const selectedValue = event.target.value;\n//         setMainDropdownValue(selectedValue);\n\n//         // Update the groupForms array with the selected value for all doorName properties\n//         const updatedGroupForms = groupForms.map((formData) => ({\n//             ...formData,\n//             doorName: selectedValue,\n//         }));\n//         setGroupForms(updatedGroupForms);\n//     };\n//     const token = localStorage.getItem('accessToken')\n//     const handleSubmit = () => {\n//         // Create an array of groups from the groupForms state\n//         const groupsArray = groupForms.map((formData) => ({\n//             door: {\n//                 name: formData.doorName,\n//             },\n//             model: {\n//                 name: formData.modelName,\n//             },\n//             folio: {\n//                 name: formData.folioName,\n//             },\n//             handle: {\n//                 name: formData.handleName,\n//             },\n//             profil: {\n//                 name: formData.profilName,\n//             },\n//             height: parseInt(formData.height),\n//             width: parseInt(formData.width),\n//             number: parseInt(formData.number),\n//             detailType: {\n//                 material: formData.detailType.material,\n//                 type: formData.detailType.type\n//             }\n\n//         }));\n\n//         // Send the data to the backend using AJAX\n//         fetch(apiBaseUrl + 'api/orders/new-order', {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//                 'Authorization': `Bearer ${token}`,\n//             },\n//             body: JSON.stringify({\n//                 groups: groupsArray,\n//             }),\n//         })\n//             .then((response) => response.json())\n//             .then((data) => {\n//                 // Render the response data\n//                 setResponse(`Total Price: ${data.totalPrice}`);\n//                 window.location.reload();\n//             })\n//             .catch((error) => {\n//                 setResponse('Error: ' + error.message);\n\n//             });\n//         console.log(response);\n\n//     };\n\n//     const handleChange = (event, index) => {\n//         const { name, value } = event.target;\n//         const updatedForms = groupForms.map((formData, i) => {\n//             if (i === index) {\n//                 return {\n//                     ...formData, [name]: value\n//                 };\n//             }\n//             return formData;\n//         });\n//         setGroupForms(updatedForms);\n\n//     };\n//     useEffect(() => {\n//         handlePreflight();\n//     }, [groupForms]);\n\n//     const handlePreflight = () => {\n//         // Create an array of groups from the groupForms state\n//         const groupsArray = groupForms.map((formData) => ({\n//             door: {\n//                 name: formData.doorName,\n//             },\n//             model: {\n//                 name: formData.modelName,\n//             },\n//             folio: {\n//                 name: formData.folioName,\n//             },\n//             handle: {\n//                 name: formData.handleName,\n//             },\n//             profil: {\n//                 name: formData.profilName,\n//             },\n//             height: parseInt(formData.height),\n//             width: parseInt(formData.width),\n//             length: parseInt(formData.length),\n//             number: parseInt(formData.number),\n//             bothSidesLaminated: formData.bothSidesLaminated,\n//             detailType: {\n//                 material: formData.detailType.material,\n//                 type: formData.detailType.type\n//             }\n//         }));\n//         const token = localStorage.getItem('accessToken')\n//         // Send the data to the backend using AJAX\n//         fetch(apiBaseUrl + 'api/orders/new-order/preflight', {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//                 Authorization: `Bearer ${token}`,\n//             },\n//             body: JSON.stringify({\n//                 groups: groupsArray,\n//             }),\n//         })\n//             .then((response) => response.json())\n//             .then((data) => {\n//                 console.log(data);\n\n//                 // Get the groupTotalPrice for every group in the response\n//                 const groupPrices = data.groups.map((group) => group.groupTotalPrice);\n\n//                 // Set the total price as the sum of all groupTotalPrices\n//                 const totalPrice = data.totalPrice;\n\n//                 // Render the response data\n//                 setTotalPrice(`${totalPrice}лв. / Добавени са 30% надценка към крайната цена.`);\n//                 setGroupPrices(groupPrices);\n\n//             })\n//             .catch((error) => {\n//                 console.log('Error: ' + error.message);\n//             });\n//     };\n\n//     const handleFileChange = (event) => {\n//         const file = event.target.files[0];\n//         const reader = new FileReader();\n\n//         reader.onload = (e) => {\n//             const data = new Uint8Array(e.target.result);\n//             const workbook = XLSX.read(data, { type: 'array' });\n//             const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n//             const excelData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n\n//             console.log('Excel Data:', excelData);\n\n//             const headers = excelData[0];\n\n//             const formData = excelData.slice(1).map((row) => {\n\n//                 // Dynamically map headers to formData objects\n//                 headers.forEach((header, index) => {\n//                     se\n//                     }\n//                 )\n\n//                 return dataObj;\n//             });\n\n//             console.log('Form Data:', formData);\n\n//             ;\n//         };\n\n//         reader.readAsArrayBuffer(file);\n//     };\n//     const handleAddGroup = () => {\n//         setGroupForms((prevGroupForms) => [...prevGroupForms, { /* Initial form data for the new group */ }]);\n//     };\n\n//     return (\n//         <>\n//             <div className=\"col-span-2\">\n//                 <label htmlFor=\"fileInput\" className=\"block font-medium\">\n//                     <PageTitle> Импортиране на Excel файл </PageTitle>\n//                 </label>\n//                 <div> {<p className='flex justify-start'>Обща цена на поръчката : {totalPrice}</p>}\n//                     <div className=\"col-span-2 flex justify-end\">\n\n//                         <button\n//                             type=\"button\"\n//                             style={{ width: '150px', margin: '10px' }}\n//                             className=\"w-full py-2 text-white bg-indigo-600 rounded-md shadow-md hover:bg-indigo-700\"\n//                             onClick={() => setModalOpen(true)}\n//                         >\n//                             Създаване\n//                         </button>\n//                         <ConfirmationModal\n//                             isOpen={modalOpen}\n//                             onClose={() => setModalOpen(false)}\n//                             onConfirm={handleSubmit}\n//                         />\n//                     </div>\n//                 </div>\n//                 <input\n//                     type=\"file\"\n//                     id=\"fileInput\"\n//                     name=\"fileInput\"\n//                     onChange={handleFileChange}\n//                     accept=\".xlsx, .xls\"\n//                     className=\"mt-1\"\n//                 />\n\n//                 <div className='w-1/5'>\n//                     <label htmlFor=\"doorName\" className=\"block font-medium\">Материал:</label>\n//                     <Select className=\"mt-1 p-2 rounded shadow-sm\"\n//                         id=\"mainDropdown\"\n//                         name=\"mainDropdown\"\n//                         value={mainDropdownValue}\n//                         onChange={(event) => handleMainDropdownChange(event)}\n//                         required\n\n//                     >\n//                         <option value=\"\">-Изберете Материал-</option>\n//                         <option value=\"Мембранна вратичка\">Мембранна вратичка</option>\n//                         <option value=\"Двустранно грундиран МДФ\">Двустранно грундиран МДФ</option>\n//                         <option value=\"Фурнирован МДФ\">Фурнирован МДФ</option>\n//                     </Select>\n//                 </div>\n//             </div>\n\n//             <div className=\"\">\n//                 <div className=\"grid md:grid-cols-1 gap-10 justify-center\">\n//                     <div className=\"text-center \"><PageTitle >Създаване на нова поръчка</PageTitle></div>\n//                     {groupForms.map((formData, index) => (\n\n//                         <>\n//                             <Modal isOpen={createdOrderModalOpen}>\n//                                 <ModalHeader className=\"flex items-center\">\n//                                     Вашата поръчка е създадена!\n//                                 </ModalHeader>\n//                                 <ModalBody>\n//                                     Създадена е поръчка с номер {orderUuid}.\n//                                 </ModalBody>\n//                                 <ModalFooter className=\"flex items-right\">\n//                                     <div className=\"hidden sm:block\">\n//                                         <Button  >\n//                                             <Link\n//                                                 to={`orders/${createdOrderId}`}\n//                                             >\n//                                                 Преглед</Link>\n//                                         </Button>\n//                                     </div>\n//                                     <div className=\"hidden sm:block\">\n//                                         <Button >\n//                                             <Link\n//                                                 to={`orders`}\n//                                             >\n//                                                 Виж всички</Link>\n//                                         </Button>\n//                                     </div>\n//                                     <div className=\"hidden sm:block \">\n//                                         <Button layout=\"outline\" onClick={() => { closeCreatedorderModal() }}>\n//                                             Създаване на нова\n//                                         </Button>\n//                                     </div>\n\n//                                 </ModalFooter>\n//                             </Modal><><Modal isOpen={isModalOpen} onClose={closeModal}>\n//                                 <ModalHeader className=\"grid items-center\">\n//                                     Допълнителна информация\n//                                 </ModalHeader>\n//                                 <ModalBody>\n//                                     <hr className=\"customeDivider \" />\n//                                     <div className='mb-5 mt-5'>\n//                                         {/* Number */}\n//                                         <Label htmlFor=\"note\" className=\"font-medium \"><span>Забележка:</span></Label>\n//                                         <Textarea\n//                                             className=\"mt-1 border w-full\"\n//                                             type=\"text\"\n//                                             id={`note${index}`}\n//                                             name=\"note\"\n//                                             value={note}\n//                                             onChange={(event) => { setNote(event.target.value); }}\n//                                             required />\n//                                     </div>\n//                                     <hr className=\"customeDivider \" />\n//                                     {loggedUser.data.role === '[USER]' && (\n//                                         <>\n//                                             <div className='mb-5 mt-5'>\n//                                                 <Label htmlFor=\"deliveryAddress\" className=\"font-large mt-3 mb-3\"><span>Адрес за доставка:</span></Label>\n//                                                 <Label htmlFor=\"city\" className=\"font-medium mt-3 mb-3\"><span>Град:</span></Label>\n\n//                                                 <Select\n//                                                     name=\"city\"\n//                                                     className={`mt-1 border w-full`} // Toggle hidden class\n//                                                     id=\"city\"\n//                                                     value={city}\n//                                                     onChange={(event) => { setCity(event.target.value); }}\n//                                                     required\n//                                                 ><option key={city} value=\"\">\n//                                                         --Изберете Град--\n//                                                     </option>\n//                                                     {citiesInBulgaria.map((city) => (\n//                                                         <><option key={city} value={city}>\n//                                                             {city}\n//                                                         </option></>\n//                                                     ))}\n\n//                                                 </Select>\n\n//                                                 <Label htmlFor=\"deliveryAddress\" className=\"font-medium mt-3 mb-3\"><span>Адрес:</span></Label>\n//                                                 <div className={`mt-1 w-full ${isTextareaVisible ? 'hidden' : ''}`}>\n//                                                     <Select\n//                                                         value={deliveryAddress}\n//                                                         onChange={(event) => { setDeliveryAddress(event.target.value); }}>\n//                                                         <option key={deliveryAddress} value={deliveryAddress}>\n//                                                             {data.deliveryAddress}\n//                                                         </option>\n//                                                     </Select>\n//                                                 </div>\n//                                                 <div className=\"mb-5 mt-5\">\n//                                                     <Label htmlFor=\"toggleTextarea\" className=\"font-medium mt-3 mb-3\">\n//                                                         <Input\n//                                                             type=\"checkbox\"\n//                                                             id={`toggleTextarea${index}`}\n//                                                             name=\"toggleTextarea\"\n//                                                             checked={isTextareaVisible}\n//                                                             onChange={() => setTextareaVisible(!isTextareaVisible)} /><span className='ml-3'>Въведете друг адрес за доставка:</span>\n//                                                     </Label>\n\n//                                                 </div>\n//                                                 <div className={`mt-1 w-full ${!isTextareaVisible ? 'hidden' : ''}`}> {/* Toggle hidden class */}\n//                                                     <Textarea\n//                                                         className=\"mt-1 w-full\"\n//                                                         type=\"text\"\n//                                                         id=\"deliveryAddress\"\n//                                                         name=\"deliveryAddress\"\n//                                                         value={deliveryAddress}\n//                                                         onChange={(event) => { setDeliveryAddress(event.target); }}\n//                                                         required />\n//                                                 </div>\n//                                             </div>\n\n//                                         </>\n//                                     )}\n\n//                                     {loggedUser.data.role === '[ADMIN]' && (\n//                                         <>\n//                                             <div className='mb-5 mt-5'>\n//                                                 <Label htmlFor=\"deliveryAddress\" className=\"font-large mt-3 mb-3\"><span>Адрес за доставка:</span></Label>\n//                                                 <Label htmlFor=\"city\" className=\"font-medium mt-3 mb-3\"><span>Град:</span></Label>\n\n//                                                 <Select\n//                                                     name=\"city\"\n//                                                     className=\"mt-1 border w-full \"\n//                                                     type=\"text\"\n//                                                     id=\"city\"\n//                                                     value={city}\n//                                                     onChange={(event) => { handleChange(event, index); setCity(event.target.value); }}\n//                                                     required\n//                                                 >\n//                                                     {citiesInBulgaria.map((city) => (\n//                                                         <option key={city} value={city}>\n//                                                             {city}\n//                                                         </option>\n//                                                     ))}\n//                                                 </Select>\n\n//                                                 <Label htmlFor=\"deliveryAddress\" className=\"font-medium mt-3 mb-3\"><span>Адрес:</span></Label>\n//                                                 <Textarea\n//                                                     className=\"mt-1 w-full\"\n//                                                     type=\"text\"\n//                                                     id={`deliveryAddress${index}`}\n//                                                     name=\"deliveryAddress\"\n//                                                     value={deliveryAddress}\n//                                                     onChange={(event) => { handleChange(event, index); setDeliveryAddress(event.target.value); }}\n//                                                     required />\n//                                             </div>\n//                                             <hr className=\"customeDivider \" />\n//                                             <div className='mt-5'>\n//                                                 {/* Number */}\n//                                                 <Label htmlFor=\"discount\" className=\"font-medium\"><span>Отстъпка:</span></Label>\n//                                                 <Input\n//                                                     className=\"mt-1 border w-full\"\n//                                                     type=\"number\"\n//                                                     id=\"discount\"\n//                                                     name=\"discount\"\n//                                                     value={discount}\n//                                                     onChange={(event) => { setDiscount(event.target.value) }}\n//                                                     required />%\n//                                             </div>\n//                                         </>\n//                                     )}\n//                                 </ModalBody>\n//                                 <ModalFooter>\n//                                     <div className=\"hidden sm:block\">\n//                                         <Button onClick={(event) => { handleChange(event, index); setIsModalOpen(false); setModalOpen(true); }}>\n//                                             Продължи\n//                                         </Button>\n//                                     </div>\n//                                     <div className=\"hidden sm:block\">\n//                                         <Button layout=\"outline\" onClick={closeModal}>\n\n//                                             Отказ\n//                                         </Button>\n//                                     </div>\n//                                 </ModalFooter>\n//                             </Modal><div className=''>\n//                                     <div>\n//                                         <div></div>\n//                                     </div>\n//                                     <div key={index} className=\" \">\n//                                         <div className=''>\n\n//                                             <form\n\n//                                                 id={`orderForm${index}`}\n//                                                 className=\"grid grid-cols-4 gap-4 p-5 w-full h-1/4\"\n//                                             >\n\n//                                                 <div>\n//                                                     <Label htmlFor=\"doorName\" className=\"block font-medium\">Материал:</Label>\n//                                                     <Select className=\"mt-1 w-full p-2 border rounded-md shadow-sm\"\n//                                                         id=\"doorName\"\n//                                                         name=\"doorName\"\n//                                                         value={formData.doorName}\n//                                                         onChange={(event) => handleChange(event, index)}\n//                                                         disabled={index > 0}\n//                                                         required\n\n//                                                     >\n//                                                         <option value=\"\">-Изберете Материал-</option>\n//                                                         <option value=\"Мембранна вратичка\">Мембранна вратичка</option>\n//                                                         <option value=\"Двустранно грундиран МДФ\">Двустранно грундиран МДФ</option>\n//                                                         <option value=\"Фурнирован МДФ\">Фурнирован МДФ</option>\n//                                                     </Select>\n\n//                                                     {formData.doorName === \"\" && (<HelperText valid={false}>Моля изберете материал, за да продължите с поръчката!</HelperText>)}\n//                                                 </div>\n\n//                                                 <div>\n//                                                     <Label htmlFor={`materialName${index}`} className=\"block font-medium\">Вид:</Label>\n//                                                     <Select className=\"mt-1 w-full p-2 border rounded-md shadow-sm\"\n//                                                         id={`materialName${index}`}\n//                                                         name={`materialName${index}`}\n//                                                         value={formData.detailType.material}\n//                                                         onChange={(event) => handleMaterialChange(event, index)}\n//                                                         required\n//                                                         disabled={(formData.doorName === '')}\n\n//                                                     >\n//                                                         <option disabled value=\"\">-Изберете Вид-</option>\n//                                                         <option value=\"Вратичка\">Вратичка</option>\n//                                                         <option value=\"Чекмедже\">Чекмедже</option>\n//                                                         <option value=\"Пиластър\">Пиластър</option>\n//                                                         <option value=\"Корниз\">Корниз</option>\n\n//                                                     </Select>\n//                                                     {formData.detailType.material === 'Пиластър' && (\n//                                                         <div>\n//                                                             <Label htmlFor={`typeName${index}`}>Пиластър:</Label>\n//                                                             <Select\n//                                                                 className=\"mt-1 w-full p-2 border rounded-md shadow-sm\"\n//                                                                 id={`typeName${index}`}\n//                                                                 name={`typeName${index}`}\n//                                                                 value={formData.detailType.type}\n//                                                                 onChange={(event) => handleTypeChange(event, index)}\n//                                                                 required\n//                                                             >\n//                                                                 <option value=\"\">-Изберете Пиластър-</option>\n//                                                                 <option value=\"P1\">P1</option>\n//                                                                 <option value=\"P2\">P2</option>\n//                                                                 <option value=\"P3\">P3</option>\n//                                                             </Select>\n//                                                             {(formData.detailType.type !== \"P1\" && formData.detailType.type !== \"P2\" && formData.detailType.type !== \"P3\") && (<HelperText valid={false}>Моля изберете пиластър, за да продължите с поръчката!</HelperText>)}\n\n//                                                         </div>\n//                                                     )}\n//                                                     {formData.detailType.material === 'Чекмедже' && (\n//                                                         <><div>\n//                                                             <Select\n//                                                                 className=\"mt-1 w-full p-2 border rounded-md shadow-sm\"\n//                                                                 id={`typeName${index}`}\n//                                                                 name={`typeName${index}`}\n//                                                                 value={formData.detailType.type}\n//                                                                 onChange={(event) => handleTypeChange(event, index)}\n//                                                                 required\n//                                                                 disabled={formData.doorName === ''}\n//                                                             >\n//                                                                 <option disabled selected value=\"\">----------</option>\n//                                                                 <option value=\"Обща фрезовка\">Обща фрезовка</option>\n//                                                                 <option value=\"Изчистен детайл\">Изчистен детайл</option>\n//                                                                 <option value=\"Корекция на рамка\">Корекция на рамка</option>\n//                                                             </Select>\n//                                                             {(formData.detailType.type !== \"Обща фрезовка\" && formData.detailType.type !== \"Изчистен детайл\" && formData.detailType.type !== \"Корекция на рамка\") && (<HelperText valid={false}>Моля изберете Чекмедже, за да продължите с поръчката!</HelperText>)}\n\n//                                                         </div></>\n//                                                     )}\n//                                                     {formData.detailType.material === 'Корниз' && (\n//                                                         <><div>\n//                                                             <Label htmlFor={`typeName${index}`}>Корниз:</Label>\n//                                                             <Select\n//                                                                 className=\"mt-1 w-full p-2 border rounded-md shadow-sm\"\n//                                                                 id={`typeName${index}`}\n//                                                                 name={`typeName${index}`}\n//                                                                 value={formData.detailType.type}\n//                                                                 onChange={(event) => handleTypeChange(event, index)}\n//                                                                 required\n//                                                                 disabled={formData.doorName === ''}\n//                                                             >\n//                                                                 <option value=\"\">-Изберете Корниз-</option>\n//                                                                 <option value=\"К1 – 68мм височина\">К1 – 68мм височина</option>\n//                                                                 <option value=\"К2 – 70мм височина\">К2 – 70мм височина</option>\n//                                                                 <option value=\"К3 – 80мм височина\">К3 – 80мм височина</option>\n//                                                                 {/* Add more options here */}\n//                                                             </Select>\n//                                                             {(formData.detailType.type !== \"К1 – 68мм височина\" && formData.detailType.type !== \"К2 – 70мм височина\" && formData.detailType.type !== \"К3 – 80мм височина\") && (<HelperText valid={false}>Моля изберете Корниз, за да продължите с поръчката!</HelperText>)}\n\n//                                                         </div></>\n//                                                     )}\n\n//                                                 </div>\n\n//                                                 {/* Model Name */}\n//                                                 <div>\n//                                                     <Label htmlFor=\"modelName\" className=\"block font-medium\">Модел:</Label>\n//                                                     <Select className=\"mt-1 w-full p-2 border rounded-md shadow-sm\"\n//                                                         id=\"modelName\"\n//                                                         name=\"modelName\"\n//                                                         value={formData.modelName}\n//                                                         onChange={(event) => handleChange(event, index)}\n//                                                         disabled={(formData.doorName === '' || formData.detailType.material === \"Пиластър\" || formData.detailType.material === \"Корниз\")}\n//                                                         required\n//                                                     >\n\n//                                                         <option value=\"\" selected=\"selected\">-Изберете Модел-</option>\n//                                                         {modelOptions.map((option, index) => (\n//                                                             <option key={index} value={option}>\n//                                                                 {option}\n//                                                             </option>\n//                                                         ))}\n//                                                     </Select>\n//                                                 </div>\n//                                                 <div>\n//                                                     {/* Folio Name s\n//     */}\n//                                                     <Label htmlFor=\"folioName\" className=\"block font-medium\">Фолио :</Label>\n//                                                     <Select className=\"mt-1 w-full p-2 border rounded-md shadow-sm\"\n//                                                         id=\"folioName\"\n//                                                         name=\"folioName\"\n//                                                         value={formData.folioName}\n//                                                         onChange={(event) => handleChange(event, index)}\n//                                                         disabled={formData.modelName === '' || formData.doorName === 'Двустранно грундиран МДФ' || formData.doorName === 'Фурнирован МДФ'}\n//                                                         required\n//                                                     >\n//                                                         <option value=\"\" selected=\"selected\">-Изберете Фолио-</option>\n//                                                         {FolioOptions.map((option, index) => (\n//                                                             <option key={index} value={option}>\n//                                                                 {option}\n//                                                             </option>\n//                                                         ))}   </Select>\n//                                                 </div><div>\n//                                                     {/* Handle Name */}\n//                                                     <Label htmlFor=\"handleName\" className=\"block font-medium\">Дръжка</Label>\n//                                                     <Select className=\"mt-1 w-full p-2 border rounded-md shadow-sm\"\n//                                                         type=\"text\"\n//                                                         id=\"handleName\"\n//                                                         name=\"handleName\"\n//                                                         value={formData.handleName}\n//                                                         onChange={(event) => handleChange(event, index)}\n//                                                         disabled={formData.modelName === '' || formData.detailType.material === 'Корниз'}\n//                                                     >\n//                                                         <option value=\"Без Дръжка\">Без дръжка</option>\n//                                                         <option value=\"дръжка H1\">дръжка H1</option></Select></div>\n//                                                 <div>\n//                                                     {/* Profil Name */}\n//                                                     <Label htmlFor=\"profilName\" className=\"block font-medium\">Профил:</Label>\n//                                                     <Select className=\"mt-1 w-full p-2 border rounded-md shadow-sm\"\n//                                                         type=\"text\"\n//                                                         id=\"profilName\"\n//                                                         name=\"profilName\"\n//                                                         value={formData.profilName}\n//                                                         onChange={(event) => handleChange(event, index)}\n//                                                         required\n//                                                         disabled={formData.modelName === '' || formData.doorName === 'Фурнирован МДФ' || formData.detailType.material === 'Корниз'}\n//                                                     >\n//                                                         <option value=\"R1\">Профил R1</option>\n//                                                         <option value=\"R2\">Профил R2</option>\n//                                                         <option value=\"R3\">Профил R3</option>\n//                                                         <option value=\"R4\">Профил R4</option>\n//                                                         <option value=\"R5\">Профил R5</option></Select>\n\n//                                                 </div>\n//                                                 {formData.detailType.material === 'Корниз' ? (\n//                                                     <>\n//                                                         <div>\n//                                                             <Label htmlFor=\"length\" className=\"block font-medium\">Дължина, мм:</Label>\n//                                                             <Select\n//                                                                 className=\"mt-1 w-full p-2 border rounded-md shadow-sm\"\n//                                                                 id=\"length\"\n//                                                                 name=\"length\"\n//                                                                 value={formData.length}\n//                                                                 onChange={(event) => handleChange(event, index)}\n//                                                                 required\n//                                                             >\n//                                                                 <option value=\"2360\">2360мм / 1бр.</option>\n//                                                                 <option value=\"1160\">1160мм / 0.5бр.</option>\n//                                                             </Select>\n//                                                         </div>\n//                                                     </>\n//                                                 ) : formData.detailType.material === 'Пиластър' ? (\n\n//                                                     <div>\n//                                                         {/* Height */}\n//                                                         <div>\n//                                                             <Label htmlFor=\"height\" className=\"block font-medium\">Височина, мм:</Label>\n//                                                             <Input className=\"mt-1 p-2 border rounded-md shadow-sm\"\n//                                                                 type=\"number\"\n//                                                                 id=\"height\"\n//                                                                 name=\"height\"\n//                                                                 value={formData.height}\n//                                                                 onChange={(event) => handleChange(event, index)}\n//                                                                 required />\n//                                                             {formData.detailType.material !== 'Чекмедже' && !(formData.modelName === 'Без модел A100' || formData.modelName === 'B503' || formData.modelName === 'B505' || formData.modelName === 'B810' || formData.modelName === 'A811') && (formData.height < 200) && (\n//                                                                 <HelperText valid={false}>Минималният допустим размер е 200мм</HelperText>)}\n//                                                             {formData.height > 2400 && (\n//                                                                 <HelperText valid={false}>Максималният допустим размер е 2400мм</HelperText>)}\n//                                                             {(formData.modelName === 'Без модел A100' || formData.modelName === 'B503' || formData.modelName === 'B505' || formData.modelName === 'B810' || formData.modelName === 'A811') && (formData.height < 60) && (\n//                                                                 <HelperText valid={false}>Минималният допустим размер е 60мм</HelperText>)}\n//                                                             {formData.detailType.material === 'Чекмедже' && formData.height < 60 && (\n//                                                                 <HelperText valid={false}>Минималният допустим размер е 60мм</HelperText>\n//                                                             )}\n\n//                                                         </div>\n//                                                         {formData.detailType.material === 'Пиластър' && (\n//                                                             <div>\n//                                                                 <Label htmlFor=\"width\" className=\"block font-medium\">Широчина, мм:</Label>\n//                                                                 <Select\n//                                                                     className=\"mt-1 w-full p-2 border rounded-md shadow-sm\"\n//                                                                     id='width'\n//                                                                     name='width'\n//                                                                     value={formData.width}\n//                                                                     onChange={(event) => handleChange(event, index)}\n//                                                                     required\n//                                                                 >   <option\n//                                                                     selected value=\"0\">--Изберете Широчина--</option>\n//                                                                     <option value=\"50\">50</option>\n//                                                                     <option value=\"60\">60</option>\n//                                                                     <option value=\"70\">70</option>\n//                                                                     <option value=\"80\">80</option>\n//                                                                     <option value=\"90\">90</option>\n//                                                                     <option value=\"100\">100</option>\n//                                                                     <option value=\"110\">110</option>\n//                                                                 </Select>\n//                                                                 {(formData.detailType.material !== 'Чекмедже' && !(formData.modelName === 'Без модел A100' || formData.modelName === 'B503' || formData.modelName === 'B505' || formData.modelName === 'B810' || formData.modelName === 'A811') && (formData.width < 200)) || (formData.detailType.material === 'Пиластър' && formData.width < 40) && (\n//                                                                     <HelperText valid={false}>Минималният допустим размер е 200мм</HelperText>)}\n//                                                                 {formData.width > 1160 && (\n//                                                                     <HelperText valid={false}>Максималният допустим размер е 1160мм</HelperText>)}\n//                                                                 {(formData.modelName === 'Без модел A100' || formData.modelName === 'B503' || formData.modelName === 'B505' || formData.modelName === 'B810' || formData.modelName === 'A811') && (formData.width < 60) && (\n//                                                                     <HelperText valid={false}>Минималният допустим размер е  60мм</HelperText>)}\n//                                                                 {formData.detailType.material === 'Чекмедже' && formData.width < 60 && (\n//                                                                     <HelperText valid={false}>Минималният допустим размер е  60мм</HelperText>\n//                                                                 )}\n//                                                                 {formData.detailType.material === 'Пиластър' && formData.width < 40 && (\n//                                                                     <HelperText valid={false}>Минималният допустим размер е 50мм</HelperText>\n//                                                                 )}\n//                                                             </div>\n//                                                         )}\n//                                                     </div>\n\n//                                                 ) : (\n//                                                     <>\n//                                                         <div>\n//                                                             {/* Height */}\n//                                                             <Label htmlFor=\"height\" className=\"block font-medium\">Височина, мм:</Label>\n//                                                             <Input className=\"mt-1 p-2 border rounded-md shadow-sm\"\n//                                                                 type=\"number\"\n//                                                                 id=\"height\"\n//                                                                 name=\"height\"\n//                                                                 value={formData.height}\n//                                                                 onChange={(event) => handleChange(event, index)}\n//                                                                 required />\n//                                                             {formData.detailType.material !== 'Чекмедже' && !(formData.modelName === 'Без модел A100' || formData.modelName === 'B503' || formData.modelName === 'B505' || formData.modelName === 'B810' || formData.modelName === 'A811') && (formData.height < 200) && (\n//                                                                 <HelperText valid={false}>Минималният допустим размер е  200мм</HelperText>)}\n//                                                             {formData.height > 2400 && (\n//                                                                 <HelperText valid={false}>Максималният допустим размер е  2400мм</HelperText>)}\n//                                                             {(formData.modelName === 'Без модел A100' || formData.modelName === 'B503' || formData.modelName === 'B505' || formData.modelName === 'B810' || formData.modelName === 'A811') && (formData.height < 60) && (\n//                                                                 <HelperText valid={false}>Минималният допустим размер е  60мм</HelperText>)}\n//                                                             {formData.detailType.material === 'Чекмедже' && formData.height < 60 && (\n//                                                                 <HelperText valid={false}>Минималният допустим размер е  60мм</HelperText>\n//                                                             )}\n\n//                                                         </div>\n//                                                         <div>\n//                                                             <Label htmlFor=\"width\" className=\"block font-medium\">Широчина, мм:</Label>\n//                                                             <Input\n//                                                                 className=\"mt-1 p-2 border rounded-md shadow-sm\"\n//                                                                 type=\"number\"\n//                                                                 id=\"width\"\n//                                                                 name=\"width\"\n//                                                                 value={formData.width}\n//                                                                 onChange={(event) => handleChange(event, index)}\n//                                                                 required />\n//                                                             {formData.detailType.material !== 'Чекмедже' && !(formData.modelName === 'Без модел A100' || formData.modelName === 'B503' || formData.modelName === 'B505' || formData.modelName === 'B810' || formData.modelName === 'A811') && (formData.width < 200) && (\n//                                                                 <HelperText valid={false}>Минималният допустим размер е 200мм</HelperText>)}\n//                                                             {formData.width > 1160 && (\n//                                                                 <HelperText valid={false}>Максималният допустим размер е  1160мм</HelperText>)}\n//                                                             {(formData.modelName === 'Без модел A100' || formData.modelName === 'B503' || formData.modelName === 'B505' || formData.modelName === 'B810' || formData.modelName === 'A811') && (formData.width < 60) && (\n//                                                                 <HelperText valid={false}>Минималният допустим размер е 60мм</HelperText>)}\n//                                                             {formData.detailType.material === 'Чекмедже' && formData.width < 60 && (\n//                                                                 <HelperText valid={false}>Минималният допустим размер е 60мм</HelperText>\n//                                                             )}\n//                                                         </div>\n\n//                                                     </>\n//                                                 )}\n//                                                 <div>\n//                                                     {/* Number */}\n//                                                     <Label htmlFor=\"number\" className=\"block font-medium\">Брой:</Label>\n//                                                     <Input\n//                                                         className=\"mt-1 p-2 border rounded-md shadow-sm\"\n//                                                         type=\"number\"\n//                                                         id={`number${index}`}\n//                                                         name=\"number\"\n//                                                         value={formData.number}\n//                                                         onChange={(event) => handleChange(event, index)}\n//                                                         required />\n//                                                 </div>\n//                                                 <div className=''>\n//                                                     <Label>Ламиниране:</Label>\n//                                                     <Select className=\"mt-1 w-full p-2 border rounded-md shadow-sm\"\n//                                                         type=\"boolean\"\n//                                                         id={`bothSidesLaminated${index}`}\n//                                                         name=\"bothSidesLaminated\"\n//                                                         value={formData.detailType.material === 'Пиластър' || formData.detailType.material === 'Корниз' ? false : formData.bothSidesLaminated}\n//                                                         onChange={(event) => handleChange(event, index)}\n//                                                         disabled={formData.doorName === 'Двустранно грундиран МДФ' || formData.doorName === 'Фурнирован МДФ' || formData.detailType.material === 'Пиластър' || formData.detailType.material === 'Корниз'}\n//                                                     >\n//                                                         <option value=\"false\">Едностранно ламиниране</option>\n//                                                         <option value=\"true\">Двустранно ламиниране</option>\n//                                                     </Select>\n//                                                 </div>\n//                                                 <div><div className='text-center border-l border-r border-black'><PageTitle >Група № {index + 1}</PageTitle>\n//                                                 </div></div>\n//                                                 <div className='mt-5'>\n//                                                     <div className=''>\n//                                                         {groupButtonVisibility[index] && (\n//                                                             <Button\n//                                                                 onClick={(event, index) => handleAddGroup(event, index)}\n//                                                                 className=\"text-center w-10 h-10 bg-green-400 hover:bg-green-600 rounded-md\"\n//                                                                 disabled={(submitButtonDisabled)}\n//                                                                 layout=\"outline\"\n//                                                             >\n//                                                                 +\n//                                                             </Button>\n//                                                         )}\n\n//                                                         {index > 0 && (\n\n//                                                             <Button\n//                                                                 onClick={(event) => handleDeleteGroup(index)}\n//                                                                 className=\"border w-10 h-10 ml-5 bg-red-500 hover:bg-red-800 rounded-md\n\n//                                                                 \"\n//                                                                 type=\"button\"\n//                                                                 layout=\"outline\"\n//                                                             >\n//                                                                 -\n//                                                             </Button>\n//                                                         )}</div>\n\n//                                                 </div>\n//                                             </form>\n//                                             <div className='grid md:grid-cols-4 h-100 pb-5 border p-3'>\n//                                                 <div className='grid md:grid-rows-2 text-center border'><div>Вратичка на кв.м.</div><div className=''> <b>{groupSqrt[index]} кв.м/ {groupPrices[index]}лв. с ДДС</b></div> </div>\n//                                                 <div className='grid md:grid-rows-2 text-center border'><div>Дръжка, бр.</div><div className=''> <b>{formData.handleName !== \"Без Дръжка\"\n//                                                     ? `1бр. / ${handlePrice}лв.`\n//                                                     : \"0бр./ 0лв.\"} </b></div> </div>\n\n//                                                 <div className=\"grid md:grid-rows-2 text-center border\">\n//                                                     <div>\n//                                                         {formData.bothSidesLaminated === \"false\"\n//                                                             ? \"Едностранно ламиниране\"\n//                                                             : \"Двустранно ламиниране\"}\n//                                                     </div>\n//                                                     <div>{selectedDoor === \"Двустранно грундиран МДФ\" || selectedDoor === \"Фурнирован МДФ\" ? (<HelperText valid={false}>Не се предлага за този материал</HelperText>) : (\n\n//                                                         <div className=\"\">\n//                                                             <b>{groupSqrt[index]} кв.м</b>\n//                                                         </div>)\n//                                                     }</div>\n\n//                                                 </div>\n//                                                 <div className='border grid md:grid-rows-2 text-center'><div>Цена на групата :</div> <div> <b>{groupPrices[index]}лв. с ДДС</b></div></div>\n//                                             </div>\n//                                         </div>\n//                                     </div>\n//                                 </div></></>\n//                     ))}\n\n//                 </div> <div className=\"col-span-12 text-center  \">\n\n//                     <div className=\"grid md:grid-cols-1 border-t border-black p-5\">\n//                         <div className='grid md:grid-cols-5'>\n//                             <div className='grid md:grid-rows-2 text-center border'><div>Общо кв.м. вратички</div><div className=''> <b>{totalSqrt} кв.м/ {totalGroupPrices}лв. с ДДС</b></div> </div>\n//                             <div className='grid md:grid-rows-2 text-center border'><div>Общо бр. детайли</div><div className=''> <b>{elementNumber}</b></div> </div>\n\n//                             <div className='grid md:grid-rows-2 text-center border'><div>Общо бр. дръжки.</div><div className=''><b> {handleNumber} бр./ {handlePrice}лв.</b>\n//                             </div> </div>\n\n//                             <div className=\"grid md:grid-rows-2 text-center border\">Общо ламиниране\n\n//                                 <div>{selectedDoor === \"Двустранно грундиран МДФ\" || selectedDoor === \"Фурнирован МДФ\" ? (<HelperText valid={false}>Не се предлага за този материал</HelperText>) : (\n\n//                                     <div className=\"\">\n//                                         <b>{totalSqrt} кв.м</b>\n//                                     </div>)\n//                                 }</div>\n//                             </div>\n//                             <div className='border grid md:grid-rows-2 text-center'><div>Обща цена :</div> <div> <b>{totalPrice}</b></div></div>\n\n//                         </div>\n\n//                         <div className='grid md:grid-cols-2 '>\n//                             <div className=''>\n//                                 <Button\n//                                     className=\"w-1/3 text-black bg-green-400 rounded-md shadow-md hover:bg-green-700\"\n//                                     onClick={(event, index) => handleAddGroup(event, index + 1)}\n\n//                                     disabled={(submitButtonDisabled)}\n//                                     layout=\"outline\"\n//                                 >\n//                                     Добави Детайл\n//                                 </Button></div>\n//                             <div className=''>\n//                                 <Button\n//                                     type=\"button\"\n\n//                                     className=\"w-1/3  text-white bg-indigo-600 rounded-md shadow-md hover:bg-indigo-700\"\n//                                     disabled={(submitButtonDisabled)}\n//                                     onClick={() => setIsModalOpen(true)}\n//                                 >\n//                                     Завърши\n//                                 </Button>\n\n//                             </div>\n\n//                             <ConfirmationModal\n//                                 isOpen={modalOpen}\n//                                 onClose={() => setModalOpen(false)}\n//                                 onConfirm={handleSubmit}\n\n//                             />\n//                         </div>\n//                         {totalSqrt <= 1.5 && (<div className='text-center '>\n\n//                             <HelperText className='text-lg text-yellow-600'> <b><u>Общата квадратура на поръчката е под 1.5 кв.м. Добавена е 30% надценка !</u></b></HelperText><p><HelperText className='text-lg text-red-600'> <b><u>Доставката се поема от клиента !</u></b></HelperText></p></div>)}\n\n//                         {loggedUser.data.role === '[USER]' && data.appliedDiscount === null && (<div className='text-center'><HelperText className='text-lg text-green-600'> <b><u>Добавена е отстъпка от 5% </u></b></HelperText></div>)}\n//                         {loggedUser.data.role === '[USER]' && data.appliedDiscount != null && (<div className='text-center'><HelperText className='text-lg text-green-600'> <b><u>Добавена е отстъпка от {data.appliedDiscount}% </u></b></HelperText></div>)}\n//                     </div>\n\n//                     <hr className=\"customeDivider mx-4 my-5\" />\n\n//                 </div></div >\n//         </>\n//     );\n// };\n\n// export default NewExcelOrderForm;","map":{"version":3,"names":[],"sources":["/Users/milen.mladenov/asset-management-fe/src/pages/newExcelOrderForm.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import * as XLSX from 'xlsx';\n// import NewOrderForm from './newOrderForm';\n// import PageTitle from \"../components/Typography/PageTitle\";\n// import \"../assets/css/groups-in-rows.css\"\n// import ConfirmationModal from '../components/ConfirmationModal';\n// import { config } from '../Constants';\n// import {\n//     Select, Input, Label, HelperText, Button, Modal,\n//     ModalHeader,\n//     ModalBody,\n//     ModalFooter, Textarea\n// } from \"@windmill/react-ui\";\n// import { citiesInBulgaria } from '../cities/citiesData';\n// import { Link } from 'react-router-dom'\n// import FolioOptions from '../components/FolioOptions';\n// import modelOptions from '../components/modelOptions';\n\n\n\n\n\n// const NewExcelOrderForm = () => {\n\n//     const initialFormState = {\n//         doorName: '',\n//         modelName: \"Без\",\n//         folioName: \"Без\",\n//         handleName: 'Без Дръжка',\n//         profilName: 'R1',\n//         height: 400,\n//         width: 400,\n//         length: 2360,\n//         number: 1,\n//         bothSidesLaminated: \"false\",\n//         detailType: {\n//             material: \"\",\n//             type: \"\"\n//         },\n//         deliveryAddress: '',\n//         discount: 0,\n//         note: ''\n//     };\n//     const [response, setResponse] = useState('');\n//     const [mainDropdownValue, setMainDropdownValue] = useState('');\n//     const [groupForms, setGroupForms] = useState([\n//         { ...initialFormState }\n//     ]);\n//     const apiBaseUrl = config.url.API_BASE_URL;\n//     const [totalPrice, setTotalPrice] = useState('0лв.');\n//     const [groupPrices, setGroupPrices] = useState('0');\n//     const [totalGroupPrices, setTotalGroupPrices] = useState('0');\n//     const [groupSqrt, setGroupSqrt] = useState('0');\n//     const [totalSqrt, setTotalSqrt] = useState('0');\n//     const [modalOpen, setModalOpen] = useState(false);\n//     const [errorModalOpen, setErrorModalOpen] = useState(false);\n//     const [orderUrl, setOrderUrl] = useState();\n//     const [orderPreflightUrl, setOrderPreflightUrl] = useState();\n//     const [handlePrice, setHandlePrice] = useState(0);\n//     const [handleNumber, setHandleNumber] = useState(0);\n//     const [data, setData] = useState([]);\n//     const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true)\n//     const [isModalOpen, setIsModalOpen] = useState(false);\n//     const [deliveryAddress, setDeliveryAddress] = useState('');\n//     const [discount, setDiscount] = useState(0);\n//     const [note, setNote] = useState('');\n//     const [city, setCity] = useState('');\n//     const [isTextareaVisible, setTextareaVisible] = useState(false);\n//     const [groupButtonVisibility, setGroupButtonVisibility] = useState([true]);\n//     const [createdOrderId, setCreatedOrderId] = useState(0)\n//     const [orderUuid, setOrederUuid] = useState('');\n//     const [createdOrderModalOpen, isCreatedOrderModalOpen] = useState(false);\n//     const [elementNumber, setElementNumber] = useState(0);\n//     const [selectedDoor, setSelectedDoor] = useState('');\n//     const [selectedMaterialType, setSelectedMaterialType] = useState('');\n\n//     function closeCreatedorderModal() {\n//         isCreatedOrderModalOpen(false);\n//         window.location.reload();\n//     }\n//     const loggedUser = JSON.parse(localStorage.getItem(\"user\"))\n//     const handleMaterialChange = (event, index) => {\n//         const updatedGroupForms = groupForms.map((formData, i) => {\n//             if (i === index) {\n//                 return { ...formData, detailType: { material: event.target.value } };\n//             }\n//             return formData;\n//         });\n//         setGroupForms(updatedGroupForms);\n//     };\n//     const handleTypeChange = (event, index) => {\n//         const updatedGroupForms = groupForms.map((formData, i) => {\n//             if (i === index) {\n\n//                 return {\n\n//                     ...formData,\n//                     detailType: {\n//                         ...formData.detailType, // Keep the existing material\n//                         type: event.target.value,\n//                     },\n//                 };\n//             }\n//             return formData;\n//         });\n//         setGroupForms(updatedGroupForms);\n//     };\n\n//     const handleDeleteGroup = (indexToDelete) => {\n//         setGroupForms((prevGroupForms) =>\n//             prevGroupForms.filter((_, index) => index !== indexToDelete)\n//         );\n//     };\n//     function closeModal() {\n//         setIsModalOpen(false);\n//         // window.location.reload();\n//     }\n//     const handleMainDropdownChange = (event) => {\n//         const selectedValue = event.target.value;\n//         setMainDropdownValue(selectedValue);\n\n//         // Update the groupForms array with the selected value for all doorName properties\n//         const updatedGroupForms = groupForms.map((formData) => ({\n//             ...formData,\n//             doorName: selectedValue,\n//         }));\n//         setGroupForms(updatedGroupForms);\n//     };\n//     const token = localStorage.getItem('accessToken')\n//     const handleSubmit = () => {\n//         // Create an array of groups from the groupForms state\n//         const groupsArray = groupForms.map((formData) => ({\n//             door: {\n//                 name: formData.doorName,\n//             },\n//             model: {\n//                 name: formData.modelName,\n//             },\n//             folio: {\n//                 name: formData.folioName,\n//             },\n//             handle: {\n//                 name: formData.handleName,\n//             },\n//             profil: {\n//                 name: formData.profilName,\n//             },\n//             height: parseInt(formData.height),\n//             width: parseInt(formData.width),\n//             number: parseInt(formData.number),\n//             detailType: {\n//                 material: formData.detailType.material,\n//                 type: formData.detailType.type\n//             }\n\n//         }));\n\n//         // Send the data to the backend using AJAX\n//         fetch(apiBaseUrl + 'api/orders/new-order', {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//                 'Authorization': `Bearer ${token}`,\n//             },\n//             body: JSON.stringify({\n//                 groups: groupsArray,\n//             }),\n//         })\n//             .then((response) => response.json())\n//             .then((data) => {\n//                 // Render the response data\n//                 setResponse(`Total Price: ${data.totalPrice}`);\n//                 window.location.reload();\n//             })\n//             .catch((error) => {\n//                 setResponse('Error: ' + error.message);\n\n//             });\n//         console.log(response);\n\n//     };\n\n\n//     const handleChange = (event, index) => {\n//         const { name, value } = event.target;\n//         const updatedForms = groupForms.map((formData, i) => {\n//             if (i === index) {\n//                 return {\n//                     ...formData, [name]: value\n//                 };\n//             }\n//             return formData;\n//         });\n//         setGroupForms(updatedForms);\n\n\n//     };\n//     useEffect(() => {\n//         handlePreflight();\n//     }, [groupForms]);\n\n//     const handlePreflight = () => {\n//         // Create an array of groups from the groupForms state\n//         const groupsArray = groupForms.map((formData) => ({\n//             door: {\n//                 name: formData.doorName,\n//             },\n//             model: {\n//                 name: formData.modelName,\n//             },\n//             folio: {\n//                 name: formData.folioName,\n//             },\n//             handle: {\n//                 name: formData.handleName,\n//             },\n//             profil: {\n//                 name: formData.profilName,\n//             },\n//             height: parseInt(formData.height),\n//             width: parseInt(formData.width),\n//             length: parseInt(formData.length),\n//             number: parseInt(formData.number),\n//             bothSidesLaminated: formData.bothSidesLaminated,\n//             detailType: {\n//                 material: formData.detailType.material,\n//                 type: formData.detailType.type\n//             }\n//         }));\n//         const token = localStorage.getItem('accessToken')\n//         // Send the data to the backend using AJAX\n//         fetch(apiBaseUrl + 'api/orders/new-order/preflight', {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//                 Authorization: `Bearer ${token}`,\n//             },\n//             body: JSON.stringify({\n//                 groups: groupsArray,\n//             }),\n//         })\n//             .then((response) => response.json())\n//             .then((data) => {\n//                 console.log(data);\n\n//                 // Get the groupTotalPrice for every group in the response\n//                 const groupPrices = data.groups.map((group) => group.groupTotalPrice);\n\n//                 // Set the total price as the sum of all groupTotalPrices\n//                 const totalPrice = data.totalPrice;\n\n//                 // Render the response data\n//                 setTotalPrice(`${totalPrice}лв. / Добавени са 30% надценка към крайната цена.`);\n//                 setGroupPrices(groupPrices);\n\n//             })\n//             .catch((error) => {\n//                 console.log('Error: ' + error.message);\n//             });\n//     };\n\n//     const handleFileChange = (event) => {\n//         const file = event.target.files[0];\n//         const reader = new FileReader();\n\n//         reader.onload = (e) => {\n//             const data = new Uint8Array(e.target.result);\n//             const workbook = XLSX.read(data, { type: 'array' });\n//             const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n//             const excelData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n\n//             console.log('Excel Data:', excelData);\n\n//             const headers = excelData[0];\n            \n//             const formData = excelData.slice(1).map((row) => {\n                 \n\n//                 // Dynamically map headers to formData objects\n//                 headers.forEach((header, index) => {\n//                     se\n//                     }\n//                 )\n\n//                 return dataObj;\n//             });\n\n//             console.log('Form Data:', formData);\n\n//             ;\n//         };\n\n//         reader.readAsArrayBuffer(file);\n//     };\n//     const handleAddGroup = () => {\n//         setGroupForms((prevGroupForms) => [...prevGroupForms, { /* Initial form data for the new group */ }]);\n//     };\n\n//     return (\n//         <>\n//             <div className=\"col-span-2\">\n//                 <label htmlFor=\"fileInput\" className=\"block font-medium\">\n//                     <PageTitle> Импортиране на Excel файл </PageTitle>\n//                 </label>\n//                 <div> {<p className='flex justify-start'>Обща цена на поръчката : {totalPrice}</p>}\n//                     <div className=\"col-span-2 flex justify-end\">\n\n\n//                         <button\n//                             type=\"button\"\n//                             style={{ width: '150px', margin: '10px' }}\n//                             className=\"w-full py-2 text-white bg-indigo-600 rounded-md shadow-md hover:bg-indigo-700\"\n//                             onClick={() => setModalOpen(true)}\n//                         >\n//                             Създаване\n//                         </button>\n//                         <ConfirmationModal\n//                             isOpen={modalOpen}\n//                             onClose={() => setModalOpen(false)}\n//                             onConfirm={handleSubmit}\n//                         />\n//                     </div>\n//                 </div>\n//                 <input\n//                     type=\"file\"\n//                     id=\"fileInput\"\n//                     name=\"fileInput\"\n//                     onChange={handleFileChange}\n//                     accept=\".xlsx, .xls\"\n//                     className=\"mt-1\"\n//                 />\n\n//                 <div className='w-1/5'>\n//                     <label htmlFor=\"doorName\" className=\"block font-medium\">Материал:</label>\n//                     <Select className=\"mt-1 p-2 rounded shadow-sm\"\n//                         id=\"mainDropdown\"\n//                         name=\"mainDropdown\"\n//                         value={mainDropdownValue}\n//                         onChange={(event) => handleMainDropdownChange(event)}\n//                         required\n\n//                     >\n//                         <option value=\"\">-Изберете Материал-</option>\n//                         <option value=\"Мембранна вратичка\">Мембранна вратичка</option>\n//                         <option value=\"Двустранно грундиран МДФ\">Двустранно грундиран МДФ</option>\n//                         <option value=\"Фурнирован МДФ\">Фурнирован МДФ</option>\n//                     </Select>\n//                 </div>\n//             </div>\n\n\n//             <div className=\"\">\n//                 <div className=\"grid md:grid-cols-1 gap-10 justify-center\">\n//                     <div className=\"text-center \"><PageTitle >Създаване на нова поръчка</PageTitle></div>\n//                     {groupForms.map((formData, index) => (\n\n//                         <>\n//                             <Modal isOpen={createdOrderModalOpen}>\n//                                 <ModalHeader className=\"flex items-center\">\n//                                     Вашата поръчка е създадена!\n//                                 </ModalHeader>\n//                                 <ModalBody>\n//                                     Създадена е поръчка с номер {orderUuid}.\n//                                 </ModalBody>\n//                                 <ModalFooter className=\"flex items-right\">\n//                                     <div className=\"hidden sm:block\">\n//                                         <Button  >\n//                                             <Link\n//                                                 to={`orders/${createdOrderId}`}\n//                                             >\n//                                                 Преглед</Link>\n//                                         </Button>\n//                                     </div>\n//                                     <div className=\"hidden sm:block\">\n//                                         <Button >\n//                                             <Link\n//                                                 to={`orders`}\n//                                             >\n//                                                 Виж всички</Link>\n//                                         </Button>\n//                                     </div>\n//                                     <div className=\"hidden sm:block \">\n//                                         <Button layout=\"outline\" onClick={() => { closeCreatedorderModal() }}>\n//                                             Създаване на нова\n//                                         </Button>\n//                                     </div>\n\n//                                 </ModalFooter>\n//                             </Modal><><Modal isOpen={isModalOpen} onClose={closeModal}>\n//                                 <ModalHeader className=\"grid items-center\">\n//                                     Допълнителна информация\n//                                 </ModalHeader>\n//                                 <ModalBody>\n//                                     <hr className=\"customeDivider \" />\n//                                     <div className='mb-5 mt-5'>\n//                                         {/* Number */}\n//                                         <Label htmlFor=\"note\" className=\"font-medium \"><span>Забележка:</span></Label>\n//                                         <Textarea\n//                                             className=\"mt-1 border w-full\"\n//                                             type=\"text\"\n//                                             id={`note${index}`}\n//                                             name=\"note\"\n//                                             value={note}\n//                                             onChange={(event) => { setNote(event.target.value); }}\n//                                             required />\n//                                     </div>\n//                                     <hr className=\"customeDivider \" />\n//                                     {loggedUser.data.role === '[USER]' && (\n//                                         <>\n//                                             <div className='mb-5 mt-5'>\n//                                                 <Label htmlFor=\"deliveryAddress\" className=\"font-large mt-3 mb-3\"><span>Адрес за доставка:</span></Label>\n//                                                 <Label htmlFor=\"city\" className=\"font-medium mt-3 mb-3\"><span>Град:</span></Label>\n\n//                                                 <Select\n//                                                     name=\"city\"\n//                                                     className={`mt-1 border w-full`} // Toggle hidden class\n//                                                     id=\"city\"\n//                                                     value={city}\n//                                                     onChange={(event) => { setCity(event.target.value); }}\n//                                                     required\n//                                                 ><option key={city} value=\"\">\n//                                                         --Изберете Град--\n//                                                     </option>\n//                                                     {citiesInBulgaria.map((city) => (\n//                                                         <><option key={city} value={city}>\n//                                                             {city}\n//                                                         </option></>\n//                                                     ))}\n\n//                                                 </Select>\n\n//                                                 <Label htmlFor=\"deliveryAddress\" className=\"font-medium mt-3 mb-3\"><span>Адрес:</span></Label>\n//                                                 <div className={`mt-1 w-full ${isTextareaVisible ? 'hidden' : ''}`}>\n//                                                     <Select\n//                                                         value={deliveryAddress}\n//                                                         onChange={(event) => { setDeliveryAddress(event.target.value); }}>\n//                                                         <option key={deliveryAddress} value={deliveryAddress}>\n//                                                             {data.deliveryAddress}\n//                                                         </option>\n//                                                     </Select>\n//                                                 </div>\n//                                                 <div className=\"mb-5 mt-5\">\n//                                                     <Label htmlFor=\"toggleTextarea\" className=\"font-medium mt-3 mb-3\">\n//                                                         <Input\n//                                                             type=\"checkbox\"\n//                                                             id={`toggleTextarea${index}`}\n//                                                             name=\"toggleTextarea\"\n//                                                             checked={isTextareaVisible}\n//                                                             onChange={() => setTextareaVisible(!isTextareaVisible)} /><span className='ml-3'>Въведете друг адрес за доставка:</span>\n//                                                     </Label>\n\n//                                                 </div>\n//                                                 <div className={`mt-1 w-full ${!isTextareaVisible ? 'hidden' : ''}`}> {/* Toggle hidden class */}\n//                                                     <Textarea\n//                                                         className=\"mt-1 w-full\"\n//                                                         type=\"text\"\n//                                                         id=\"deliveryAddress\"\n//                                                         name=\"deliveryAddress\"\n//                                                         value={deliveryAddress}\n//                                                         onChange={(event) => { setDeliveryAddress(event.target); }}\n//                                                         required />\n//                                                 </div>\n//                                             </div>\n\n\n//                                         </>\n//                                     )}\n\n//                                     {loggedUser.data.role === '[ADMIN]' && (\n//                                         <>\n//                                             <div className='mb-5 mt-5'>\n//                                                 <Label htmlFor=\"deliveryAddress\" className=\"font-large mt-3 mb-3\"><span>Адрес за доставка:</span></Label>\n//                                                 <Label htmlFor=\"city\" className=\"font-medium mt-3 mb-3\"><span>Град:</span></Label>\n\n//                                                 <Select\n//                                                     name=\"city\"\n//                                                     className=\"mt-1 border w-full \"\n//                                                     type=\"text\"\n//                                                     id=\"city\"\n//                                                     value={city}\n//                                                     onChange={(event) => { handleChange(event, index); setCity(event.target.value); }}\n//                                                     required\n//                                                 >\n//                                                     {citiesInBulgaria.map((city) => (\n//                                                         <option key={city} value={city}>\n//                                                             {city}\n//                                                         </option>\n//                                                     ))}\n//                                                 </Select>\n\n//                                                 <Label htmlFor=\"deliveryAddress\" className=\"font-medium mt-3 mb-3\"><span>Адрес:</span></Label>\n//                                                 <Textarea\n//                                                     className=\"mt-1 w-full\"\n//                                                     type=\"text\"\n//                                                     id={`deliveryAddress${index}`}\n//                                                     name=\"deliveryAddress\"\n//                                                     value={deliveryAddress}\n//                                                     onChange={(event) => { handleChange(event, index); setDeliveryAddress(event.target.value); }}\n//                                                     required />\n//                                             </div>\n//                                             <hr className=\"customeDivider \" />\n//                                             <div className='mt-5'>\n//                                                 {/* Number */}\n//                                                 <Label htmlFor=\"discount\" className=\"font-medium\"><span>Отстъпка:</span></Label>\n//                                                 <Input\n//                                                     className=\"mt-1 border w-full\"\n//                                                     type=\"number\"\n//                                                     id=\"discount\"\n//                                                     name=\"discount\"\n//                                                     value={discount}\n//                                                     onChange={(event) => { setDiscount(event.target.value) }}\n//                                                     required />%\n//                                             </div>\n//                                         </>\n//                                     )}\n//                                 </ModalBody>\n//                                 <ModalFooter>\n//                                     <div className=\"hidden sm:block\">\n//                                         <Button onClick={(event) => { handleChange(event, index); setIsModalOpen(false); setModalOpen(true); }}>\n//                                             Продължи\n//                                         </Button>\n//                                     </div>\n//                                     <div className=\"hidden sm:block\">\n//                                         <Button layout=\"outline\" onClick={closeModal}>\n\n//                                             Отказ\n//                                         </Button>\n//                                     </div>\n//                                 </ModalFooter>\n//                             </Modal><div className=''>\n//                                     <div>\n//                                         <div></div>\n//                                     </div>\n//                                     <div key={index} className=\" \">\n//                                         <div className=''>\n\n//                                             <form\n\n//                                                 id={`orderForm${index}`}\n//                                                 className=\"grid grid-cols-4 gap-4 p-5 w-full h-1/4\"\n//                                             >\n\n//                                                 <div>\n//                                                     <Label htmlFor=\"doorName\" className=\"block font-medium\">Материал:</Label>\n//                                                     <Select className=\"mt-1 w-full p-2 border rounded-md shadow-sm\"\n//                                                         id=\"doorName\"\n//                                                         name=\"doorName\"\n//                                                         value={formData.doorName}\n//                                                         onChange={(event) => handleChange(event, index)}\n//                                                         disabled={index > 0}\n//                                                         required\n\n//                                                     >\n//                                                         <option value=\"\">-Изберете Материал-</option>\n//                                                         <option value=\"Мембранна вратичка\">Мембранна вратичка</option>\n//                                                         <option value=\"Двустранно грундиран МДФ\">Двустранно грундиран МДФ</option>\n//                                                         <option value=\"Фурнирован МДФ\">Фурнирован МДФ</option>\n//                                                     </Select>\n\n//                                                     {formData.doorName === \"\" && (<HelperText valid={false}>Моля изберете материал, за да продължите с поръчката!</HelperText>)}\n//                                                 </div>\n\n//                                                 <div>\n//                                                     <Label htmlFor={`materialName${index}`} className=\"block font-medium\">Вид:</Label>\n//                                                     <Select className=\"mt-1 w-full p-2 border rounded-md shadow-sm\"\n//                                                         id={`materialName${index}`}\n//                                                         name={`materialName${index}`}\n//                                                         value={formData.detailType.material}\n//                                                         onChange={(event) => handleMaterialChange(event, index)}\n//                                                         required\n//                                                         disabled={(formData.doorName === '')}\n\n//                                                     >\n//                                                         <option disabled value=\"\">-Изберете Вид-</option>\n//                                                         <option value=\"Вратичка\">Вратичка</option>\n//                                                         <option value=\"Чекмедже\">Чекмедже</option>\n//                                                         <option value=\"Пиластър\">Пиластър</option>\n//                                                         <option value=\"Корниз\">Корниз</option>\n\n//                                                     </Select>\n//                                                     {formData.detailType.material === 'Пиластър' && (\n//                                                         <div>\n//                                                             <Label htmlFor={`typeName${index}`}>Пиластър:</Label>\n//                                                             <Select\n//                                                                 className=\"mt-1 w-full p-2 border rounded-md shadow-sm\"\n//                                                                 id={`typeName${index}`}\n//                                                                 name={`typeName${index}`}\n//                                                                 value={formData.detailType.type}\n//                                                                 onChange={(event) => handleTypeChange(event, index)}\n//                                                                 required\n//                                                             >\n//                                                                 <option value=\"\">-Изберете Пиластър-</option>\n//                                                                 <option value=\"P1\">P1</option>\n//                                                                 <option value=\"P2\">P2</option>\n//                                                                 <option value=\"P3\">P3</option>\n//                                                             </Select>\n//                                                             {(formData.detailType.type !== \"P1\" && formData.detailType.type !== \"P2\" && formData.detailType.type !== \"P3\") && (<HelperText valid={false}>Моля изберете пиластър, за да продължите с поръчката!</HelperText>)}\n\n//                                                         </div>\n//                                                     )}\n//                                                     {formData.detailType.material === 'Чекмедже' && (\n//                                                         <><div>\n//                                                             <Select\n//                                                                 className=\"mt-1 w-full p-2 border rounded-md shadow-sm\"\n//                                                                 id={`typeName${index}`}\n//                                                                 name={`typeName${index}`}\n//                                                                 value={formData.detailType.type}\n//                                                                 onChange={(event) => handleTypeChange(event, index)}\n//                                                                 required\n//                                                                 disabled={formData.doorName === ''}\n//                                                             >\n//                                                                 <option disabled selected value=\"\">----------</option>\n//                                                                 <option value=\"Обща фрезовка\">Обща фрезовка</option>\n//                                                                 <option value=\"Изчистен детайл\">Изчистен детайл</option>\n//                                                                 <option value=\"Корекция на рамка\">Корекция на рамка</option>\n//                                                             </Select>\n//                                                             {(formData.detailType.type !== \"Обща фрезовка\" && formData.detailType.type !== \"Изчистен детайл\" && formData.detailType.type !== \"Корекция на рамка\") && (<HelperText valid={false}>Моля изберете Чекмедже, за да продължите с поръчката!</HelperText>)}\n\n//                                                         </div></>\n//                                                     )}\n//                                                     {formData.detailType.material === 'Корниз' && (\n//                                                         <><div>\n//                                                             <Label htmlFor={`typeName${index}`}>Корниз:</Label>\n//                                                             <Select\n//                                                                 className=\"mt-1 w-full p-2 border rounded-md shadow-sm\"\n//                                                                 id={`typeName${index}`}\n//                                                                 name={`typeName${index}`}\n//                                                                 value={formData.detailType.type}\n//                                                                 onChange={(event) => handleTypeChange(event, index)}\n//                                                                 required\n//                                                                 disabled={formData.doorName === ''}\n//                                                             >\n//                                                                 <option value=\"\">-Изберете Корниз-</option>\n//                                                                 <option value=\"К1 – 68мм височина\">К1 – 68мм височина</option>\n//                                                                 <option value=\"К2 – 70мм височина\">К2 – 70мм височина</option>\n//                                                                 <option value=\"К3 – 80мм височина\">К3 – 80мм височина</option>\n//                                                                 {/* Add more options here */}\n//                                                             </Select>\n//                                                             {(formData.detailType.type !== \"К1 – 68мм височина\" && formData.detailType.type !== \"К2 – 70мм височина\" && formData.detailType.type !== \"К3 – 80мм височина\") && (<HelperText valid={false}>Моля изберете Корниз, за да продължите с поръчката!</HelperText>)}\n\n//                                                         </div></>\n//                                                     )}\n\n//                                                 </div>\n\n\n//                                                 {/* Model Name */}\n//                                                 <div>\n//                                                     <Label htmlFor=\"modelName\" className=\"block font-medium\">Модел:</Label>\n//                                                     <Select className=\"mt-1 w-full p-2 border rounded-md shadow-sm\"\n//                                                         id=\"modelName\"\n//                                                         name=\"modelName\"\n//                                                         value={formData.modelName}\n//                                                         onChange={(event) => handleChange(event, index)}\n//                                                         disabled={(formData.doorName === '' || formData.detailType.material === \"Пиластър\" || formData.detailType.material === \"Корниз\")}\n//                                                         required\n//                                                     >\n\n//                                                         <option value=\"\" selected=\"selected\">-Изберете Модел-</option>\n//                                                         {modelOptions.map((option, index) => (\n//                                                             <option key={index} value={option}>\n//                                                                 {option}\n//                                                             </option>\n//                                                         ))}\n//                                                     </Select>\n//                                                 </div>\n//                                                 <div>\n//                                                     {/* Folio Name s\n//     */}\n//                                                     <Label htmlFor=\"folioName\" className=\"block font-medium\">Фолио :</Label>\n//                                                     <Select className=\"mt-1 w-full p-2 border rounded-md shadow-sm\"\n//                                                         id=\"folioName\"\n//                                                         name=\"folioName\"\n//                                                         value={formData.folioName}\n//                                                         onChange={(event) => handleChange(event, index)}\n//                                                         disabled={formData.modelName === '' || formData.doorName === 'Двустранно грундиран МДФ' || formData.doorName === 'Фурнирован МДФ'}\n//                                                         required\n//                                                     >\n//                                                         <option value=\"\" selected=\"selected\">-Изберете Фолио-</option>\n//                                                         {FolioOptions.map((option, index) => (\n//                                                             <option key={index} value={option}>\n//                                                                 {option}\n//                                                             </option>\n//                                                         ))}   </Select>\n//                                                 </div><div>\n//                                                     {/* Handle Name */}\n//                                                     <Label htmlFor=\"handleName\" className=\"block font-medium\">Дръжка</Label>\n//                                                     <Select className=\"mt-1 w-full p-2 border rounded-md shadow-sm\"\n//                                                         type=\"text\"\n//                                                         id=\"handleName\"\n//                                                         name=\"handleName\"\n//                                                         value={formData.handleName}\n//                                                         onChange={(event) => handleChange(event, index)}\n//                                                         disabled={formData.modelName === '' || formData.detailType.material === 'Корниз'}\n//                                                     >\n//                                                         <option value=\"Без Дръжка\">Без дръжка</option>\n//                                                         <option value=\"дръжка H1\">дръжка H1</option></Select></div>\n//                                                 <div>\n//                                                     {/* Profil Name */}\n//                                                     <Label htmlFor=\"profilName\" className=\"block font-medium\">Профил:</Label>\n//                                                     <Select className=\"mt-1 w-full p-2 border rounded-md shadow-sm\"\n//                                                         type=\"text\"\n//                                                         id=\"profilName\"\n//                                                         name=\"profilName\"\n//                                                         value={formData.profilName}\n//                                                         onChange={(event) => handleChange(event, index)}\n//                                                         required\n//                                                         disabled={formData.modelName === '' || formData.doorName === 'Фурнирован МДФ' || formData.detailType.material === 'Корниз'}\n//                                                     >\n//                                                         <option value=\"R1\">Профил R1</option>\n//                                                         <option value=\"R2\">Профил R2</option>\n//                                                         <option value=\"R3\">Профил R3</option>\n//                                                         <option value=\"R4\">Профил R4</option>\n//                                                         <option value=\"R5\">Профил R5</option></Select>\n\n\n\n\n\n//                                                 </div>\n//                                                 {formData.detailType.material === 'Корниз' ? (\n//                                                     <>\n//                                                         <div>\n//                                                             <Label htmlFor=\"length\" className=\"block font-medium\">Дължина, мм:</Label>\n//                                                             <Select\n//                                                                 className=\"mt-1 w-full p-2 border rounded-md shadow-sm\"\n//                                                                 id=\"length\"\n//                                                                 name=\"length\"\n//                                                                 value={formData.length}\n//                                                                 onChange={(event) => handleChange(event, index)}\n//                                                                 required\n//                                                             >\n//                                                                 <option value=\"2360\">2360мм / 1бр.</option>\n//                                                                 <option value=\"1160\">1160мм / 0.5бр.</option>\n//                                                             </Select>\n//                                                         </div>\n//                                                     </>\n//                                                 ) : formData.detailType.material === 'Пиластър' ? (\n\n//                                                     <div>\n//                                                         {/* Height */}\n//                                                         <div>\n//                                                             <Label htmlFor=\"height\" className=\"block font-medium\">Височина, мм:</Label>\n//                                                             <Input className=\"mt-1 p-2 border rounded-md shadow-sm\"\n//                                                                 type=\"number\"\n//                                                                 id=\"height\"\n//                                                                 name=\"height\"\n//                                                                 value={formData.height}\n//                                                                 onChange={(event) => handleChange(event, index)}\n//                                                                 required />\n//                                                             {formData.detailType.material !== 'Чекмедже' && !(formData.modelName === 'Без модел A100' || formData.modelName === 'B503' || formData.modelName === 'B505' || formData.modelName === 'B810' || formData.modelName === 'A811') && (formData.height < 200) && (\n//                                                                 <HelperText valid={false}>Минималният допустим размер е 200мм</HelperText>)}\n//                                                             {formData.height > 2400 && (\n//                                                                 <HelperText valid={false}>Максималният допустим размер е 2400мм</HelperText>)}\n//                                                             {(formData.modelName === 'Без модел A100' || formData.modelName === 'B503' || formData.modelName === 'B505' || formData.modelName === 'B810' || formData.modelName === 'A811') && (formData.height < 60) && (\n//                                                                 <HelperText valid={false}>Минималният допустим размер е 60мм</HelperText>)}\n//                                                             {formData.detailType.material === 'Чекмедже' && formData.height < 60 && (\n//                                                                 <HelperText valid={false}>Минималният допустим размер е 60мм</HelperText>\n//                                                             )}\n\n//                                                         </div>\n//                                                         {formData.detailType.material === 'Пиластър' && (\n//                                                             <div>\n//                                                                 <Label htmlFor=\"width\" className=\"block font-medium\">Широчина, мм:</Label>\n//                                                                 <Select\n//                                                                     className=\"mt-1 w-full p-2 border rounded-md shadow-sm\"\n//                                                                     id='width'\n//                                                                     name='width'\n//                                                                     value={formData.width}\n//                                                                     onChange={(event) => handleChange(event, index)}\n//                                                                     required\n//                                                                 >   <option\n//                                                                     selected value=\"0\">--Изберете Широчина--</option>\n//                                                                     <option value=\"50\">50</option>\n//                                                                     <option value=\"60\">60</option>\n//                                                                     <option value=\"70\">70</option>\n//                                                                     <option value=\"80\">80</option>\n//                                                                     <option value=\"90\">90</option>\n//                                                                     <option value=\"100\">100</option>\n//                                                                     <option value=\"110\">110</option>\n//                                                                 </Select>\n//                                                                 {(formData.detailType.material !== 'Чекмедже' && !(formData.modelName === 'Без модел A100' || formData.modelName === 'B503' || formData.modelName === 'B505' || formData.modelName === 'B810' || formData.modelName === 'A811') && (formData.width < 200)) || (formData.detailType.material === 'Пиластър' && formData.width < 40) && (\n//                                                                     <HelperText valid={false}>Минималният допустим размер е 200мм</HelperText>)}\n//                                                                 {formData.width > 1160 && (\n//                                                                     <HelperText valid={false}>Максималният допустим размер е 1160мм</HelperText>)}\n//                                                                 {(formData.modelName === 'Без модел A100' || formData.modelName === 'B503' || formData.modelName === 'B505' || formData.modelName === 'B810' || formData.modelName === 'A811') && (formData.width < 60) && (\n//                                                                     <HelperText valid={false}>Минималният допустим размер е  60мм</HelperText>)}\n//                                                                 {formData.detailType.material === 'Чекмедже' && formData.width < 60 && (\n//                                                                     <HelperText valid={false}>Минималният допустим размер е  60мм</HelperText>\n//                                                                 )}\n//                                                                 {formData.detailType.material === 'Пиластър' && formData.width < 40 && (\n//                                                                     <HelperText valid={false}>Минималният допустим размер е 50мм</HelperText>\n//                                                                 )}\n//                                                             </div>\n//                                                         )}\n//                                                     </div>\n\n//                                                 ) : (\n//                                                     <>\n//                                                         <div>\n//                                                             {/* Height */}\n//                                                             <Label htmlFor=\"height\" className=\"block font-medium\">Височина, мм:</Label>\n//                                                             <Input className=\"mt-1 p-2 border rounded-md shadow-sm\"\n//                                                                 type=\"number\"\n//                                                                 id=\"height\"\n//                                                                 name=\"height\"\n//                                                                 value={formData.height}\n//                                                                 onChange={(event) => handleChange(event, index)}\n//                                                                 required />\n//                                                             {formData.detailType.material !== 'Чекмедже' && !(formData.modelName === 'Без модел A100' || formData.modelName === 'B503' || formData.modelName === 'B505' || formData.modelName === 'B810' || formData.modelName === 'A811') && (formData.height < 200) && (\n//                                                                 <HelperText valid={false}>Минималният допустим размер е  200мм</HelperText>)}\n//                                                             {formData.height > 2400 && (\n//                                                                 <HelperText valid={false}>Максималният допустим размер е  2400мм</HelperText>)}\n//                                                             {(formData.modelName === 'Без модел A100' || formData.modelName === 'B503' || formData.modelName === 'B505' || formData.modelName === 'B810' || formData.modelName === 'A811') && (formData.height < 60) && (\n//                                                                 <HelperText valid={false}>Минималният допустим размер е  60мм</HelperText>)}\n//                                                             {formData.detailType.material === 'Чекмедже' && formData.height < 60 && (\n//                                                                 <HelperText valid={false}>Минималният допустим размер е  60мм</HelperText>\n//                                                             )}\n\n//                                                         </div>\n//                                                         <div>\n//                                                             <Label htmlFor=\"width\" className=\"block font-medium\">Широчина, мм:</Label>\n//                                                             <Input\n//                                                                 className=\"mt-1 p-2 border rounded-md shadow-sm\"\n//                                                                 type=\"number\"\n//                                                                 id=\"width\"\n//                                                                 name=\"width\"\n//                                                                 value={formData.width}\n//                                                                 onChange={(event) => handleChange(event, index)}\n//                                                                 required />\n//                                                             {formData.detailType.material !== 'Чекмедже' && !(formData.modelName === 'Без модел A100' || formData.modelName === 'B503' || formData.modelName === 'B505' || formData.modelName === 'B810' || formData.modelName === 'A811') && (formData.width < 200) && (\n//                                                                 <HelperText valid={false}>Минималният допустим размер е 200мм</HelperText>)}\n//                                                             {formData.width > 1160 && (\n//                                                                 <HelperText valid={false}>Максималният допустим размер е  1160мм</HelperText>)}\n//                                                             {(formData.modelName === 'Без модел A100' || formData.modelName === 'B503' || formData.modelName === 'B505' || formData.modelName === 'B810' || formData.modelName === 'A811') && (formData.width < 60) && (\n//                                                                 <HelperText valid={false}>Минималният допустим размер е 60мм</HelperText>)}\n//                                                             {formData.detailType.material === 'Чекмедже' && formData.width < 60 && (\n//                                                                 <HelperText valid={false}>Минималният допустим размер е 60мм</HelperText>\n//                                                             )}\n//                                                         </div>\n\n//                                                     </>\n//                                                 )}\n//                                                 <div>\n//                                                     {/* Number */}\n//                                                     <Label htmlFor=\"number\" className=\"block font-medium\">Брой:</Label>\n//                                                     <Input\n//                                                         className=\"mt-1 p-2 border rounded-md shadow-sm\"\n//                                                         type=\"number\"\n//                                                         id={`number${index}`}\n//                                                         name=\"number\"\n//                                                         value={formData.number}\n//                                                         onChange={(event) => handleChange(event, index)}\n//                                                         required />\n//                                                 </div>\n//                                                 <div className=''>\n//                                                     <Label>Ламиниране:</Label>\n//                                                     <Select className=\"mt-1 w-full p-2 border rounded-md shadow-sm\"\n//                                                         type=\"boolean\"\n//                                                         id={`bothSidesLaminated${index}`}\n//                                                         name=\"bothSidesLaminated\"\n//                                                         value={formData.detailType.material === 'Пиластър' || formData.detailType.material === 'Корниз' ? false : formData.bothSidesLaminated}\n//                                                         onChange={(event) => handleChange(event, index)}\n//                                                         disabled={formData.doorName === 'Двустранно грундиран МДФ' || formData.doorName === 'Фурнирован МДФ' || formData.detailType.material === 'Пиластър' || formData.detailType.material === 'Корниз'}\n//                                                     >\n//                                                         <option value=\"false\">Едностранно ламиниране</option>\n//                                                         <option value=\"true\">Двустранно ламиниране</option>\n//                                                     </Select>\n//                                                 </div>\n//                                                 <div><div className='text-center border-l border-r border-black'><PageTitle >Група № {index + 1}</PageTitle>\n//                                                 </div></div>\n//                                                 <div className='mt-5'>\n//                                                     <div className=''>\n//                                                         {groupButtonVisibility[index] && (\n//                                                             <Button\n//                                                                 onClick={(event, index) => handleAddGroup(event, index)}\n//                                                                 className=\"text-center w-10 h-10 bg-green-400 hover:bg-green-600 rounded-md\"\n//                                                                 disabled={(submitButtonDisabled)}\n//                                                                 layout=\"outline\"\n//                                                             >\n//                                                                 +\n//                                                             </Button>\n//                                                         )}\n\n\n\n\n//                                                         {index > 0 && (\n\n//                                                             <Button\n//                                                                 onClick={(event) => handleDeleteGroup(index)}\n//                                                                 className=\"border w-10 h-10 ml-5 bg-red-500 hover:bg-red-800 rounded-md\n\n//                                                                 \"\n//                                                                 type=\"button\"\n//                                                                 layout=\"outline\"\n//                                                             >\n//                                                                 -\n//                                                             </Button>\n//                                                         )}</div>\n\n//                                                 </div>\n//                                             </form>\n//                                             <div className='grid md:grid-cols-4 h-100 pb-5 border p-3'>\n//                                                 <div className='grid md:grid-rows-2 text-center border'><div>Вратичка на кв.м.</div><div className=''> <b>{groupSqrt[index]} кв.м/ {groupPrices[index]}лв. с ДДС</b></div> </div>\n//                                                 <div className='grid md:grid-rows-2 text-center border'><div>Дръжка, бр.</div><div className=''> <b>{formData.handleName !== \"Без Дръжка\"\n//                                                     ? `1бр. / ${handlePrice}лв.`\n//                                                     : \"0бр./ 0лв.\"} </b></div> </div>\n\n//                                                 <div className=\"grid md:grid-rows-2 text-center border\">\n//                                                     <div>\n//                                                         {formData.bothSidesLaminated === \"false\"\n//                                                             ? \"Едностранно ламиниране\"\n//                                                             : \"Двустранно ламиниране\"}\n//                                                     </div>\n//                                                     <div>{selectedDoor === \"Двустранно грундиран МДФ\" || selectedDoor === \"Фурнирован МДФ\" ? (<HelperText valid={false}>Не се предлага за този материал</HelperText>) : (\n\n//                                                         <div className=\"\">\n//                                                             <b>{groupSqrt[index]} кв.м</b>\n//                                                         </div>)\n//                                                     }</div>\n\n//                                                 </div>\n//                                                 <div className='border grid md:grid-rows-2 text-center'><div>Цена на групата :</div> <div> <b>{groupPrices[index]}лв. с ДДС</b></div></div>\n//                                             </div>\n//                                         </div>\n//                                     </div>\n//                                 </div></></>\n//                     ))}\n\n\n//                 </div> <div className=\"col-span-12 text-center  \">\n\n//                     <div className=\"grid md:grid-cols-1 border-t border-black p-5\">\n//                         <div className='grid md:grid-cols-5'>\n//                             <div className='grid md:grid-rows-2 text-center border'><div>Общо кв.м. вратички</div><div className=''> <b>{totalSqrt} кв.м/ {totalGroupPrices}лв. с ДДС</b></div> </div>\n//                             <div className='grid md:grid-rows-2 text-center border'><div>Общо бр. детайли</div><div className=''> <b>{elementNumber}</b></div> </div>\n\n//                             <div className='grid md:grid-rows-2 text-center border'><div>Общо бр. дръжки.</div><div className=''><b> {handleNumber} бр./ {handlePrice}лв.</b>\n//                             </div> </div>\n\n//                             <div className=\"grid md:grid-rows-2 text-center border\">Общо ламиниране\n\n//                                 <div>{selectedDoor === \"Двустранно грундиран МДФ\" || selectedDoor === \"Фурнирован МДФ\" ? (<HelperText valid={false}>Не се предлага за този материал</HelperText>) : (\n\n//                                     <div className=\"\">\n//                                         <b>{totalSqrt} кв.м</b>\n//                                     </div>)\n//                                 }</div>\n//                             </div>\n//                             <div className='border grid md:grid-rows-2 text-center'><div>Обща цена :</div> <div> <b>{totalPrice}</b></div></div>\n\n//                         </div>\n\n\n//                         <div className='grid md:grid-cols-2 '>\n//                             <div className=''>\n//                                 <Button\n//                                     className=\"w-1/3 text-black bg-green-400 rounded-md shadow-md hover:bg-green-700\"\n//                                     onClick={(event, index) => handleAddGroup(event, index + 1)}\n\n//                                     disabled={(submitButtonDisabled)}\n//                                     layout=\"outline\"\n//                                 >\n//                                     Добави Детайл\n//                                 </Button></div>\n//                             <div className=''>\n//                                 <Button\n//                                     type=\"button\"\n\n//                                     className=\"w-1/3  text-white bg-indigo-600 rounded-md shadow-md hover:bg-indigo-700\"\n//                                     disabled={(submitButtonDisabled)}\n//                                     onClick={() => setIsModalOpen(true)}\n//                                 >\n//                                     Завърши\n//                                 </Button>\n\n//                             </div>\n\n//                             <ConfirmationModal\n//                                 isOpen={modalOpen}\n//                                 onClose={() => setModalOpen(false)}\n//                                 onConfirm={handleSubmit}\n\n//                             />\n//                         </div>\n//                         {totalSqrt <= 1.5 && (<div className='text-center '>\n\n//                             <HelperText className='text-lg text-yellow-600'> <b><u>Общата квадратура на поръчката е под 1.5 кв.м. Добавена е 30% надценка !</u></b></HelperText><p><HelperText className='text-lg text-red-600'> <b><u>Доставката се поема от клиента !</u></b></HelperText></p></div>)}\n\n//                         {loggedUser.data.role === '[USER]' && data.appliedDiscount === null && (<div className='text-center'><HelperText className='text-lg text-green-600'> <b><u>Добавена е отстъпка от 5% </u></b></HelperText></div>)}\n//                         {loggedUser.data.role === '[USER]' && data.appliedDiscount != null && (<div className='text-center'><HelperText className='text-lg text-green-600'> <b><u>Добавена е отстъпка от {data.appliedDiscount}% </u></b></HelperText></div>)}\n//                     </div>\n\n//                     <hr className=\"customeDivider mx-4 my-5\" />\n\n//                 </div></div >\n//         </>\n//     );\n// };\n\n// export default NewExcelOrderForm;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}