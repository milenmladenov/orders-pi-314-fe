{"ast":null,"code":"// /* eslint-disable no-restricted-globals */\n\n// self.addEventListener(\"activate\", function (event) {\n//     event.waitUntil(\n//       // Get all cache names\n//       self.caches.keys().then(function (cacheNames) {\n//         // Use Promise.all to wait for all caches to be deleted\n//         return Promise.all(\n//           // Filter cache names (you can add conditions here)\n//           cacheNames\n//             .filter(function (cacheName) {\n//               return true; // You can add conditions to decide which caches to delete\n//             })\n//             // Delete each cache\n//             .map(function (cacheName) {\n//               return self.caches.delete(cacheName);\n//             })\n//         );\n//       })\n//     );\n//   });","map":{"version":3,"names":[],"sources":["/Users/milenmladenov/asset-management-fe/src/service-worker.js"],"sourcesContent":["// /* eslint-disable no-restricted-globals */\n\n// self.addEventListener(\"activate\", function (event) {\n//     event.waitUntil(\n//       // Get all cache names\n//       self.caches.keys().then(function (cacheNames) {\n//         // Use Promise.all to wait for all caches to be deleted\n//         return Promise.all(\n//           // Filter cache names (you can add conditions here)\n//           cacheNames\n//             .filter(function (cacheName) {\n//               return true; // You can add conditions to decide which caches to delete\n//             })\n//             // Delete each cache\n//             .map(function (cacheName) {\n//               return self.caches.delete(cacheName);\n//             })\n//         );\n//       })\n//     );\n//   });\n  "],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}