{"ast":null,"code":"import _slicedToArray from\"/Users/milenmladenov/asset-management-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{useState}from\"react\";import ChatUserCard from\"../components/ChatUserCard\";import SelectChatWaiter from\"../components/SelectChatWait/SelectChatWaiter\";import PageTitle from\"../components/Typography/PageTitle\";import SectionTitle from\"../components/Typography/SectionTitle\";import response from\"../utils/demo/usersData\";import{Avatar,Badge}from\"@windmill/react-ui\";import ChatSection from\"../components/ChatSection\";var Chats=function Chats(){var _useState=useState(undefined),_useState2=_slicedToArray(_useState,2),selectedChat=_useState2[0],setSelectedChat=_useState2[1];var handleSelect=function handleSelect(user){return setSelectedChat(user);};return/*#__PURE__*/React.createElement(\"div\",null,!selectedChat&&/*#__PURE__*/React.createElement(PageTitle,null,\"Connect with your customers\"),selectedChat&&/*#__PURE__*/React.createElement(\"div\",{className:\"flex items-center mt-6\"},/*#__PURE__*/React.createElement(Avatar,{className:\"hidden md:inline-flex\",src:selectedChat.avatar}),/*#__PURE__*/React.createElement(\"p\",{className:\"mx-3 inline-flex text-2xl font-semibold text-gray-700 dark:text-gray-200\"},selectedChat.first_name,\" \",selectedChat.last_name),/*#__PURE__*/React.createElement(Badge,{type:selectedChat.state===true?\"success\":\"danger\"},selectedChat.state===true?\"Online\":\"Away\")),/*#__PURE__*/React.createElement(\"div\",{className:\"grid grid-col md:grid-cols-4 gap-1\"},/*#__PURE__*/React.createElement(\"div\",{className:\"md:col-span-3 \"},!selectedChat?/*#__PURE__*/React.createElement(\"div\",{className:\"mt-32 flex flex-col justify-center items-center\"},/*#__PURE__*/React.createElement(SelectChatWaiter,null),/*#__PURE__*/React.createElement(\"p\",{className:\"text-gray-600 dark:text-gray-400\"},\"Select a chat\")):/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(ChatSection,{messages:selectedChat.messages}))),/*#__PURE__*/React.createElement(\"div\",{className:\"\"},/*#__PURE__*/React.createElement(SectionTitle,null,\"Contacts\"),response.map(function(user,id){if(user.messages!==null){return/*#__PURE__*/React.createElement(ChatUserCard,{key:id,avatar:user.avatar,first_name:user.first_name,last_name:user.last_name,state:user.state,handleClick:function handleClick(){return handleSelect(user);}});}}))));};export default Chats;","map":{"version":3,"sources":["/Users/milenmladenov/asset-management-fe/src/pages/Chats.js"],"names":["React","useState","ChatUserCard","SelectChatWaiter","PageTitle","SectionTitle","response","Avatar","Badge","ChatSection","Chats","undefined","selectedChat","setSelectedChat","handleSelect","user","avatar","first_name","last_name","state","messages","map","id"],"mappings":"+JAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,4BAAzB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,+CAA7B,CACA,MAAOC,CAAAA,SAAP,KAAsB,oCAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,uCAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CACA,OAASC,MAAT,CAAiBC,KAAjB,KAA8B,oBAA9B,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAClB,cAAwCT,QAAQ,CAACU,SAAD,CAAhD,wCAAOC,YAAP,eAAqBC,eAArB,eAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,IAAD,QAAUF,CAAAA,eAAe,CAACE,IAAD,CAAzB,EAArB,CAEA,mBACE,+BACG,CAACH,YAAD,eAAiB,oBAAC,SAAD,oCADpB,CAEGA,YAAY,eACX,2BAAK,SAAS,CAAC,wBAAf,eACE,oBAAC,MAAD,EAAQ,SAAS,CAAC,uBAAlB,CAA0C,GAAG,CAAEA,YAAY,CAACI,MAA5D,EADF,cAEE,yBAAG,SAAS,CAAC,0EAAb,EACGJ,YAAY,CAACK,UADhB,KAC6BL,YAAY,CAACM,SAD1C,CAFF,cAME,oBAAC,KAAD,EAAO,IAAI,CAAEN,YAAY,CAACO,KAAb,GAAuB,IAAvB,CAA8B,SAA9B,CAA0C,QAAvD,EACGP,YAAY,CAACO,KAAb,GAAuB,IAAvB,CAA8B,QAA9B,CAAyC,MAD5C,CANF,CAHJ,cAeE,2BAAK,SAAS,CAAC,oCAAf,eACE,2BAAK,SAAS,CAAC,gBAAf,EACG,CAACP,YAAD,cACC,2BAAK,SAAS,CAAC,iDAAf,eACE,oBAAC,gBAAD,MADF,cAEE,yBAAG,SAAS,CAAC,kCAAb,kBAFF,CADD,cAMC,4CACE,oBAAC,WAAD,EAAa,QAAQ,CAAEA,YAAY,CAACQ,QAApC,EADF,CAPJ,CADF,cAaE,2BAAK,SAAS,CAAC,EAAf,eACE,oBAAC,YAAD,iBADF,CAEGd,QAAQ,CAACe,GAAT,CAAa,SAACN,IAAD,CAAOO,EAAP,CAAc,CAC1B,GAAIP,IAAI,CAACK,QAAL,GAAkB,IAAtB,CAA4B,CAC1B,mBACE,oBAAC,YAAD,EACE,GAAG,CAAEE,EADP,CAEE,MAAM,CAAEP,IAAI,CAACC,MAFf,CAGE,UAAU,CAAED,IAAI,CAACE,UAHnB,CAIE,SAAS,CAAEF,IAAI,CAACG,SAJlB,CAKE,KAAK,CAAEH,IAAI,CAACI,KALd,CAME,WAAW,CAAE,6BAAML,CAAAA,YAAY,CAACC,IAAD,CAAlB,EANf,EADF,CAUD,CACF,CAbA,CAFH,CAbF,CAfF,CADF,CAiDD,CAtDD,CAwDA,cAAeL,CAAAA,KAAf","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport ChatUserCard from \"../components/ChatUserCard\";\nimport SelectChatWaiter from \"../components/SelectChatWait/SelectChatWaiter\";\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport SectionTitle from \"../components/Typography/SectionTitle\";\nimport response from \"../utils/demo/usersData\";\nimport { Avatar, Badge } from \"@windmill/react-ui\";\nimport ChatSection from \"../components/ChatSection\";\n\nconst Chats = () => {\n  const [selectedChat, setSelectedChat] = useState(undefined);\n\n  const handleSelect = (user) => setSelectedChat(user);\n\n  return (\n    <div>\n      {!selectedChat && <PageTitle>Connect with your customers</PageTitle>}\n      {selectedChat && (\n        <div className=\"flex items-center mt-6\">\n          <Avatar className=\"hidden md:inline-flex\" src={selectedChat.avatar} />\n          <p className=\"mx-3 inline-flex text-2xl font-semibold text-gray-700 dark:text-gray-200\">\n            {selectedChat.first_name} {selectedChat.last_name}\n          </p>\n\n          <Badge type={selectedChat.state === true ? \"success\" : \"danger\"}>\n            {selectedChat.state === true ? \"Online\" : \"Away\"}\n          </Badge>\n        </div>\n      )}\n\n      <div className=\"grid grid-col md:grid-cols-4 gap-1\">\n        <div className=\"md:col-span-3 \">\n          {!selectedChat ? (\n            <div className=\"mt-32 flex flex-col justify-center items-center\">\n              <SelectChatWaiter />\n              <p className=\"text-gray-600 dark:text-gray-400\">Select a chat</p>\n            </div>\n          ) : (\n            <div>\n              <ChatSection messages={selectedChat.messages} />\n            </div>\n          )}\n        </div>\n        <div className=\"\">\n          <SectionTitle>Contacts</SectionTitle>\n          {response.map((user, id) => {\n            if (user.messages !== null) {\n              return (\n                <ChatUserCard\n                  key={id}\n                  avatar={user.avatar}\n                  first_name={user.first_name}\n                  last_name={user.last_name}\n                  state={user.state}\n                  handleClick={() => handleSelect(user)}\n                />\n              );\n            }\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Chats;\n"]},"metadata":{},"sourceType":"module"}