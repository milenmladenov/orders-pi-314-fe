{"ast":null,"code":"import _slicedToArray from\"/Users/milenmladenov/asset-management-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{TableBody,TableContainer,Table,TableHeader,TableCell,TableRow,TableFooter,Avatar,Badge,Pagination}from\"@windmill/react-ui\";import response from\"../utils/demo/ordersData\";var OrdersTable=function OrdersTable(_ref){var resultsPerPage=_ref.resultsPerPage,filter=_ref.filter;var _useState=useState(1),_useState2=_slicedToArray(_useState,2),page=_useState2[0],setPage=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),data=_useState4[0],setData=_useState4[1];// pagination setup\nvar totalResults=response.length;// pagination change control\nfunction onPageChange(p){setPage(p);}// on page change, load new sliced data\n// here you would make another server request for new data\nuseEffect(function(){// If Filters Applied\nif(filter===\"paid\"){setData(response.filter(function(order){return order.status===\"Paid\";}).slice((page-1)*resultsPerPage,page*resultsPerPage));}if(filter===\"un-paid\"){setData(response.filter(function(order){return order.status===\"Un-paid\";}).slice((page-1)*resultsPerPage,page*resultsPerPage));}if(filter===\"completed\"){setData(response.filter(function(order){return order.status===\"Completed\";}).slice((page-1)*resultsPerPage,page*resultsPerPage));}// if filters dosent applied\nif(filter===\"all\"||!filter){setData(response.slice((page-1)*resultsPerPage,page*resultsPerPage));}},[page,resultsPerPage,filter]);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(TableContainer,{className:\"mb-8\"},/*#__PURE__*/React.createElement(Table,null,/*#__PURE__*/React.createElement(TableHeader,null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(TableCell,null,\"Client\"),/*#__PURE__*/React.createElement(TableCell,null,\"Order ID\"),/*#__PURE__*/React.createElement(TableCell,null,\"Amount\"),/*#__PURE__*/React.createElement(TableCell,null,\"Status\"),/*#__PURE__*/React.createElement(TableCell,null,\"Date\"))),/*#__PURE__*/React.createElement(TableBody,null,data.map(function(user,i){return/*#__PURE__*/React.createElement(TableRow,{key:i},/*#__PURE__*/React.createElement(TableCell,null,/*#__PURE__*/React.createElement(\"div\",{className:\"flex items-center text-sm\"},/*#__PURE__*/React.createElement(Avatar,{className:\"hidden mr-3 md:block\",src:user.avatar,alt:\"User image\"}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",{className:\"font-semibold\"},user.name)))),/*#__PURE__*/React.createElement(TableCell,null,/*#__PURE__*/React.createElement(\"span\",{className:\"text-sm\"},\"#000\",i)),/*#__PURE__*/React.createElement(TableCell,null,/*#__PURE__*/React.createElement(\"span\",{className:\"text-sm\"},\"$ \",user.amount)),/*#__PURE__*/React.createElement(TableCell,null,/*#__PURE__*/React.createElement(Badge,{type:user.status===\"Un-paid\"?\"danger\":user.status===\"Paid\"?\"success\":user.status===\"Completed\"?\"warning\":\"neutral\"},user.status)),/*#__PURE__*/React.createElement(TableCell,null,/*#__PURE__*/React.createElement(\"span\",{className:\"text-sm\"},new Date(user.date).toLocaleDateString())));}))),/*#__PURE__*/React.createElement(TableFooter,null,/*#__PURE__*/React.createElement(Pagination,{totalResults:totalResults,resultsPerPage:resultsPerPage,label:\"Table navigation\",onChange:onPageChange}))));};export default OrdersTable;","map":{"version":3,"names":["React","useState","useEffect","TableBody","TableContainer","Table","TableHeader","TableCell","TableRow","TableFooter","Avatar","Badge","Pagination","response","OrdersTable","_ref","resultsPerPage","filter","_useState","_useState2","_slicedToArray","page","setPage","_useState3","_useState4","data","setData","totalResults","length","onPageChange","p","order","status","slice","createElement","className","map","user","i","key","src","avatar","alt","name","amount","type","Date","date","toLocaleDateString","label","onChange"],"sources":["/Users/milenmladenov/asset-management-fe/src/components/OrdersTable.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport response from \"../utils/demo/ordersData\";\n\nconst OrdersTable = ({ resultsPerPage, filter }) => {\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n\n  // pagination setup\n  const totalResults = response.length;\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n\n  // on page change, load new sliced data\n  // here you would make another server request for new data\n  useEffect(() => {\n    // If Filters Applied\n    if (filter === \"paid\") {\n      setData(\n        response\n          .filter((order) => order.status === \"Paid\")\n          .slice((page - 1) * resultsPerPage, page * resultsPerPage)\n      );\n    }\n    if (filter === \"un-paid\") {\n      setData(\n        response\n          .filter((order) => order.status === \"Un-paid\")\n          .slice((page - 1) * resultsPerPage, page * resultsPerPage)\n      );\n    }\n    if (filter === \"completed\") {\n      setData(\n        response\n          .filter((order) => order.status === \"Completed\")\n          .slice((page - 1) * resultsPerPage, page * resultsPerPage)\n      );\n    }\n\n    // if filters dosent applied\n    if (filter === \"all\" || !filter) {\n      setData(\n        response.slice((page - 1) * resultsPerPage, page * resultsPerPage)\n      );\n    }\n  }, [page, resultsPerPage, filter]);\n\n  return (\n    <div>\n      {/* Table */}\n      <TableContainer className=\"mb-8\">\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Client</TableCell>\n              <TableCell>Order ID</TableCell>\n              <TableCell>Amount</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {data.map((user, i) => (\n              <TableRow key={i}>\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <Avatar\n                      className=\"hidden mr-3 md:block\"\n                      src={user.avatar}\n                      alt=\"User image\"\n                    />\n                    <div>\n                      <p className=\"font-semibold\">{user.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">#000{i}</span>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">$ {user.amount}</span>\n                </TableCell>\n                <TableCell>\n                  <Badge\n                    type={\n                      user.status === \"Un-paid\"\n                        ? \"danger\"\n                        : user.status === \"Paid\"\n                        ? \"success\"\n                        : user.status === \"Completed\"\n                        ? \"warning\"\n                        : \"neutral\"\n                    }\n                  >\n                    {user.status}\n                  </Badge>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">\n                    {new Date(user.date).toLocaleDateString()}\n                  </span>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter>\n          <Pagination\n            totalResults={totalResults}\n            resultsPerPage={resultsPerPage}\n            label=\"Table navigation\"\n            onChange={onPageChange}\n          />\n        </TableFooter>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default OrdersTable;\n"],"mappings":"+JAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OACEC,SAAS,CACTC,cAAc,CACdC,KAAK,CACLC,WAAW,CACXC,SAAS,CACTC,QAAQ,CACRC,WAAW,CACXC,MAAM,CACNC,KAAK,CACLC,UAAU,KACL,oBAAoB,CAC3B,MAAO,CAAAC,QAAQ,KAAM,0BAA0B,CAE/C,GAAM,CAAAC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAAC,IAAA,CAAmC,IAA7B,CAAAC,cAAc,CAAAD,IAAA,CAAdC,cAAc,CAAEC,MAAM,CAAAF,IAAA,CAANE,MAAM,CAC3C,IAAAC,SAAA,CAAwBjB,QAAQ,CAAC,CAAC,CAAC,CAAAkB,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA5BG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IACpB,IAAAI,UAAA,CAAwBtB,QAAQ,CAAC,EAAE,CAAC,CAAAuB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAA7BE,IAAI,CAAAD,UAAA,IAAEE,OAAO,CAAAF,UAAA,IAEpB;AACA,GAAM,CAAAG,YAAY,CAAGd,QAAQ,CAACe,MAAM,CAEpC;AACA,QAAS,CAAAC,YAAYA,CAACC,CAAC,CAAE,CACvBR,OAAO,CAACQ,CAAC,CAAC,CACZ,CAEA;AACA;AACA5B,SAAS,CAAC,UAAM,CACd;AACA,GAAIe,MAAM,GAAK,MAAM,CAAE,CACrBS,OAAO,CACLb,QAAQ,CACLI,MAAM,CAAC,SAACc,KAAK,QAAK,CAAAA,KAAK,CAACC,MAAM,GAAK,MAAM,GAAC,CAC1CC,KAAK,CAAC,CAACZ,IAAI,CAAG,CAAC,EAAIL,cAAc,CAAEK,IAAI,CAAGL,cAAc,CAC7D,CAAC,CACH,CACA,GAAIC,MAAM,GAAK,SAAS,CAAE,CACxBS,OAAO,CACLb,QAAQ,CACLI,MAAM,CAAC,SAACc,KAAK,QAAK,CAAAA,KAAK,CAACC,MAAM,GAAK,SAAS,GAAC,CAC7CC,KAAK,CAAC,CAACZ,IAAI,CAAG,CAAC,EAAIL,cAAc,CAAEK,IAAI,CAAGL,cAAc,CAC7D,CAAC,CACH,CACA,GAAIC,MAAM,GAAK,WAAW,CAAE,CAC1BS,OAAO,CACLb,QAAQ,CACLI,MAAM,CAAC,SAACc,KAAK,QAAK,CAAAA,KAAK,CAACC,MAAM,GAAK,WAAW,GAAC,CAC/CC,KAAK,CAAC,CAACZ,IAAI,CAAG,CAAC,EAAIL,cAAc,CAAEK,IAAI,CAAGL,cAAc,CAC7D,CAAC,CACH,CAEA;AACA,GAAIC,MAAM,GAAK,KAAK,EAAI,CAACA,MAAM,CAAE,CAC/BS,OAAO,CACLb,QAAQ,CAACoB,KAAK,CAAC,CAACZ,IAAI,CAAG,CAAC,EAAIL,cAAc,CAAEK,IAAI,CAAGL,cAAc,CACnE,CAAC,CACH,CACF,CAAC,CAAE,CAACK,IAAI,CAAEL,cAAc,CAAEC,MAAM,CAAC,CAAC,CAElC,mBACEjB,KAAA,CAAAkC,aAAA,yBAEElC,KAAA,CAAAkC,aAAA,CAAC9B,cAAc,EAAC+B,SAAS,CAAC,MAAM,eAC9BnC,KAAA,CAAAkC,aAAA,CAAC7B,KAAK,mBACJL,KAAA,CAAAkC,aAAA,CAAC5B,WAAW,mBACVN,KAAA,CAAAkC,aAAA,wBACElC,KAAA,CAAAkC,aAAA,CAAC3B,SAAS,MAAC,QAAiB,CAAC,cAC7BP,KAAA,CAAAkC,aAAA,CAAC3B,SAAS,MAAC,UAAmB,CAAC,cAC/BP,KAAA,CAAAkC,aAAA,CAAC3B,SAAS,MAAC,QAAiB,CAAC,cAC7BP,KAAA,CAAAkC,aAAA,CAAC3B,SAAS,MAAC,QAAiB,CAAC,cAC7BP,KAAA,CAAAkC,aAAA,CAAC3B,SAAS,MAAC,MAAe,CACxB,CACO,CAAC,cACdP,KAAA,CAAAkC,aAAA,CAAC/B,SAAS,MACPsB,IAAI,CAACW,GAAG,CAAC,SAACC,IAAI,CAAEC,CAAC,qBAChBtC,KAAA,CAAAkC,aAAA,CAAC1B,QAAQ,EAAC+B,GAAG,CAAED,CAAE,eACftC,KAAA,CAAAkC,aAAA,CAAC3B,SAAS,mBACRP,KAAA,CAAAkC,aAAA,QAAKC,SAAS,CAAC,2BAA2B,eACxCnC,KAAA,CAAAkC,aAAA,CAACxB,MAAM,EACLyB,SAAS,CAAC,sBAAsB,CAChCK,GAAG,CAAEH,IAAI,CAACI,MAAO,CACjBC,GAAG,CAAC,YAAY,CACjB,CAAC,cACF1C,KAAA,CAAAkC,aAAA,yBACElC,KAAA,CAAAkC,aAAA,MAAGC,SAAS,CAAC,eAAe,EAAEE,IAAI,CAACM,IAAQ,CACxC,CACF,CACI,CAAC,cACZ3C,KAAA,CAAAkC,aAAA,CAAC3B,SAAS,mBACRP,KAAA,CAAAkC,aAAA,SAAMC,SAAS,CAAC,SAAS,EAAC,MAAI,CAACG,CAAQ,CAC9B,CAAC,cACZtC,KAAA,CAAAkC,aAAA,CAAC3B,SAAS,mBACRP,KAAA,CAAAkC,aAAA,SAAMC,SAAS,CAAC,SAAS,EAAC,IAAE,CAACE,IAAI,CAACO,MAAa,CACtC,CAAC,cACZ5C,KAAA,CAAAkC,aAAA,CAAC3B,SAAS,mBACRP,KAAA,CAAAkC,aAAA,CAACvB,KAAK,EACJkC,IAAI,CACFR,IAAI,CAACL,MAAM,GAAK,SAAS,CACrB,QAAQ,CACRK,IAAI,CAACL,MAAM,GAAK,MAAM,CACtB,SAAS,CACTK,IAAI,CAACL,MAAM,GAAK,WAAW,CAC3B,SAAS,CACT,SACL,EAEAK,IAAI,CAACL,MACD,CACE,CAAC,cACZhC,KAAA,CAAAkC,aAAA,CAAC3B,SAAS,mBACRP,KAAA,CAAAkC,aAAA,SAAMC,SAAS,CAAC,SAAS,EACtB,GAAI,CAAAW,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC,CAACC,kBAAkB,CAAC,CACpC,CACG,CACH,CAAC,EACZ,CACQ,CACN,CAAC,cACRhD,KAAA,CAAAkC,aAAA,CAACzB,WAAW,mBACVT,KAAA,CAAAkC,aAAA,CAACtB,UAAU,EACTe,YAAY,CAAEA,YAAa,CAC3BX,cAAc,CAAEA,cAAe,CAC/BiC,KAAK,CAAC,kBAAkB,CACxBC,QAAQ,CAAErB,YAAa,CACxB,CACU,CACC,CACb,CAAC,CAEV,CAAC,CAED,cAAe,CAAAf,WAAW"},"metadata":{},"sourceType":"module"}