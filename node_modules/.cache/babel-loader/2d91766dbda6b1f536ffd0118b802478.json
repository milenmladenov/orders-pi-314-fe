{"ast":null,"code":"var _jsxFileName = \"/Users/milenmladenov/asset-management-fe/src/components/OrdersTable.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { TableBody, TableContainer, Table, TableHeader, TableCell, TableRow, TableFooter, Avatar, Badge, Pagination } from \"@windmill/react-ui\";\nimport { Link } from 'react-router-dom';\nimport json2xls from 'json2xls'; // Import json2xls\nimport { saveAs } from \"file-saver\"; // Import saveAs function\nimport * as XLSX from 'xlsx';\nconst OrdersTable = _ref => {\n  let {\n    resultsPerPage,\n    filter\n  } = _ref;\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  const [totalResults, setTotalResults] = useState(0);\n  const token = localStorage.getItem('accessToken');\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n  const fetchData = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      const response = await axios.get(\"http://localhost:8080/api/orders/all\", config);\n      const ordersData = response.data;\n\n      // Apply filters if necessary\n      let filteredData = ordersData;\n      if (filter === \"изпратена\") {\n        filteredData = ordersData.filter(order => order.status === \"Paid\");\n      } else if (filter === \"създадена\") {\n        filteredData = ordersData.filter(order => order.status === \"CREATED\");\n      } else if (filter === \"изпълнява се\") {\n        filteredData = ordersData.filter(order => order.status === \"WORKING_ON\");\n      } else if (filter === \"изпълнена\") {\n        filteredData = ordersData.filter(order => order.status === \"Paid\");\n      }\n\n      // Flatten the groups and update the totalResults and data state\n      const flattenedGroups = filteredData.flatMap(order => order);\n      setTotalResults(flattenedGroups.length);\n      setData(flattenedGroups.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const exportToExcel = () => {\n    const worksheet = XLSX.utils.json_to_sheet(data, {\n      header: [\n      // Define headers as per your requirements\n      'Order ID', 'Order Date', 'Status', 'User Email', 'Total Price', 'Order Type']\n    });\n    const userHeaders = [\n    // Add headers from the user object\n    'Потребител'];\n    data.forEach(order => {\n      order.groups.forEach(group => {\n        Object.entries(group).forEach(_ref2 => {\n          let [key, value] = _ref2;\n          if (key !== 'number' && key !== 'matPrice' && key !== 'groupTotalPrice') {\n            worksheet[XLSX.utils.encode_cell({\n              r: 1,\n              c: userHeaders.length\n            })] = {\n              t: 's',\n              v: Object.values(order.user.companyName).join('\\n')\n            };\n            const newRow = [order.id, order.createdAt, order.status, order.user.email, order.totalPrice, order.type];\n            newRow.push(value.name, value.price, group.height, group.width, group.number, group.detailType);\n            newRow.push(order.user.id, order.user.email, order.user.username, order.user.phone, order.user.companyName);\n            const newRowPos = worksheet['!rows'] ? worksheet['!rows'].length : 2;\n            XLSX.utils.sheet_add_aoa(worksheet, [newRow], {\n              origin: -1\n            });\n            worksheet[XLSX.utils.encode_cell({\n              r: newRowPos,\n              c: userHeaders.length\n            })] = {\n              t: 's',\n              v: userHeaders.join('\\n')\n            };\n            worksheet[XLSX.utils.encode_cell({\n              r: newRowPos + 1,\n              c: userHeaders.length\n            })] = {\n              t: 's',\n              v: Object.values(order.user).join('\\n')\n            };\n          }\n        });\n      });\n    });\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Orders');\n    const wbout = XLSX.write(workbook, {\n      bookType: 'xlsx',\n      type: 'array'\n    });\n    const blob = new Blob([wbout], {\n      type: 'application/octet-stream'\n    });\n    saveAs(blob, 'orders.xlsx');\n  };\n  useEffect(() => {\n    fetchData();\n  }, [page, resultsPerPage, filter]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: \"mb-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, \"id\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, \"O\\u0442 \\u0434\\u0430\\u0442\\u0430\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, \"\\u041F\\u043E\\u0442\\u0440\\u0435\\u0431\\u0438\\u0442\\u0435\\u043B\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, \"\\u041A\\u0440\\u0430\\u0439\\u043D\\u0430 \\u0441\\u0443\\u043C\\u0430\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, \"\\u0422\\u0438\\u043F \\u043F\\u043E\\u0440\\u044A\\u0447\\u043A\\u0430\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, \"\\u041E\\u0442\\u0441\\u0442\\u044A\\u043F\\u043A\\u0430\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, data.map((order, i) => /*#__PURE__*/React.createElement(TableRow, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font-semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 23\n    }\n  }, order.id)))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font-semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 23\n    }\n  }, order.createdAt)))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    type: order.status === \"CREATED\" ? \"success\" : order.status === \"Paid\" ? \"success\" : order.status === \"WORKING_ON\" ? \"warning\" : \"neutral\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 19\n    }\n  }, order.status === \"WORKING_ON\" ? \"Изпълнява се\" : order.status === \"CREATED\" ? \"Създадена  \" : order.status)), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font-semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 23\n    }\n  }, order.user.email)))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 23\n    }\n  }, order.totalPrice), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 82\n    }\n  }, \"\\u043B\\u0432.\")))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, order.type === \"BY_HAND\" ? \"Ръчно - от Администратор\" : \"От клиент\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 23\n    }\n  }, \"0\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 65\n    }\n  }, \"%\")))), /*#__PURE__*/React.createElement(TableCell, {\n    className: \"w-1/12 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `orders/${order.id}`,\n    className: \"text-indigo-600 hover:text-indigo-900\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 19\n    }\n  }, \"\\u0414\\u0435\\u0442\\u0430\\u0439\\u043B\\u0438\")))))), /*#__PURE__*/React.createElement(TableFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: exportToExcel,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }, \"Export to Excel\")), /*#__PURE__*/React.createElement(Pagination, {\n    totalResults: totalResults,\n    resultsPerPage: resultsPerPage,\n    label: \"Table navigation\",\n    onChange: onPageChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }))));\n};\nexport default OrdersTable;","map":{"version":3,"names":["React","useState","useEffect","axios","TableBody","TableContainer","Table","TableHeader","TableCell","TableRow","TableFooter","Avatar","Badge","Pagination","Link","json2xls","saveAs","XLSX","OrdersTable","_ref","resultsPerPage","filter","page","setPage","data","setData","totalResults","setTotalResults","token","localStorage","getItem","onPageChange","p","fetchData","config","headers","Authorization","response","get","ordersData","filteredData","order","status","flattenedGroups","flatMap","length","slice","error","console","exportToExcel","worksheet","utils","json_to_sheet","header","userHeaders","forEach","groups","group","Object","entries","_ref2","key","value","encode_cell","r","c","t","v","values","user","companyName","join","newRow","id","createdAt","email","totalPrice","type","push","name","price","height","width","number","detailType","username","phone","newRowPos","sheet_add_aoa","origin","workbook","book_new","book_append_sheet","wbout","write","bookType","blob","Blob","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","map","i","to","onClick","label","onChange"],"sources":["/Users/milenmladenov/asset-management-fe/src/components/OrdersTable.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport { Link } from 'react-router-dom'\nimport json2xls from 'json2xls'; // Import json2xls\nimport { saveAs } from \"file-saver\"; // Import saveAs function\nimport * as XLSX from 'xlsx';\n\n\n\n\nconst OrdersTable = ({ resultsPerPage, filter }) => {\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  const [totalResults, setTotalResults] = useState(0);\n  const token = localStorage.getItem('accessToken')\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n\n  const fetchData = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      };\n      const response = await axios.get(\"http://localhost:8080/api/orders/all\", config);\n      const ordersData = response.data;\n\n      // Apply filters if necessary\n      let filteredData = ordersData;\n      if (filter === \"изпратена\") {\n        filteredData = ordersData.filter(order => order.status === \"Paid\");\n      } else if (filter === \"създадена\") {\n        filteredData = ordersData.filter(order => order.status === \"CREATED\");\n      } else if (filter === \"изпълнява се\") {\n        filteredData = ordersData.filter(order => order.status === \"WORKING_ON\");\n      } else if (filter === \"изпълнена\") {\n        filteredData = ordersData.filter(order => order.status === \"Paid\");\n      }\n\n      // Flatten the groups and update the totalResults and data state\n      const flattenedGroups = filteredData.flatMap(order => order);\n      setTotalResults(flattenedGroups.length);\n      setData(flattenedGroups.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  \n  const exportToExcel = () => {\n    const worksheet = XLSX.utils.json_to_sheet(data, {\n      header: [\n        // Define headers as per your requirements\n        'Order ID', 'Order Date', 'Status', 'User Email', 'Total Price', 'Order Type'\n      ]\n    });\n\n    const userHeaders = [\n      // Add headers from the user object\n      'Потребител'\n    ];\n\n    data.forEach(order => {\n      order.groups.forEach(group => {\n        Object.entries(group).forEach(([key, value]) => {\n          if (key !== 'number' && key !== 'matPrice' && key !== 'groupTotalPrice') {\n            worksheet[XLSX.utils.encode_cell({ r: 1, c: userHeaders.length })] = { t: 's', v: Object.values(order.user.companyName).join('\\n') };\n\n            const newRow = [order.id, order.createdAt, order.status, order.user.email, order.totalPrice, order.type];\n            newRow.push(value.name, value.price, group.height, group.width, group.number, group.detailType);\n            newRow.push(order.user.id, order.user.email, order.user.username, order.user.phone, order.user.companyName);\n\n            const newRowPos = worksheet['!rows'] ? worksheet['!rows'].length : 2;\n            XLSX.utils.sheet_add_aoa(worksheet, [newRow], { origin: -1 });\n            worksheet[XLSX.utils.encode_cell({ r: newRowPos, c: userHeaders.length })] = { t: 's', v: userHeaders.join('\\n') };\n            worksheet[XLSX.utils.encode_cell({ r: newRowPos + 1, c: userHeaders.length })] = { t: 's', v: Object.values(order.user).join('\\n') };\n          }\n        });\n      });\n    });\n\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Orders');\n\n    const wbout = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\n    const blob = new Blob([wbout], { type: 'application/octet-stream' });\n\n    saveAs(blob, 'orders.xlsx');\n  };\n  \n\n  useEffect(() => {\n    fetchData();\n  }, [page, resultsPerPage, filter]);\n  return (\n    <div>\n      {/* Table */}\n      <TableContainer className=\"mb-8\">\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>id</TableCell>\n              <TableCell>Oт дата</TableCell>\n              <TableCell>Статус</TableCell>\n              <TableCell>Потребител</TableCell>\n              <TableCell>Крайна сума</TableCell>\n              <TableCell>Тип поръчка</TableCell>\n              <TableCell>Отстъпка</TableCell>\n\n\n\n\n\n            </tr>\n          </TableHeader>\n          <TableBody>\n\n            {data.map((order, i) => (\n              <TableRow key={i}>\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <div>\n                      <p className=\"font-semibold\">{order.id}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <div>\n                      <p className=\"font-semibold\">{order.createdAt}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <Badge\n                    type={\n                      order.status === \"CREATED\"\n                        ? \"success\"\n                        : order.status === \"Paid\"\n                          ? \"success\"\n                          : order.status === \"WORKING_ON\"\n                            ? \"warning\"\n                            : \"neutral\"\n                    }\n                  >\n                     \n                    {order.status === \"WORKING_ON\" ? \"Изпълнява се\"  : order.status === \"CREATED\" ? \"Създадена  \" : order.status  }\n                    \n\n                  </Badge>\n                </TableCell>\n                <TableCell>\n\n                  <div className=\"flex items-center text-sm\">\n                    <div>\n                      <p className=\"font-semibold\">{order.user.email}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                \n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <div>\n                      <span className=\"font-semibold\">{order.totalPrice}</span  ><span>лв.</span>\n                    </div>\n                  </div>\n                </TableCell>\n\n\n                <TableCell>\n                  {order.type === \"BY_HAND\" ? \"Ръчно - от Администратор\" : \"От клиент\"}\n                </TableCell>\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <div>\n                      <span className=\"font-semibold\">0</span  ><span>%</span>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell className=\"w-1/12 text-center\">\n                  <Link\n                    to={`orders/${order.id}`}\n                    className=\"text-indigo-600 hover:text-indigo-900\"\n                  >\n                    Детайли\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter>\n        <div className=\"mt-4\">\n        <button onClick={exportToExcel} className=\"btn btn-primary\">Export to Excel</button>\n      </div>\n          <Pagination\n            totalResults={totalResults}\n            resultsPerPage={resultsPerPage}\n            label=\"Table navigation\"\n            onChange={onPageChange}\n          />\n        </TableFooter>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default OrdersTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}