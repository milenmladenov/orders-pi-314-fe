{"ast":null,"code":"var _jsxFileName = \"/Users/milenmladenov/asset-management-fe/src/components/OrdersTable.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { TableBody, TableContainer, Table, TableHeader, TableCell, TableRow, TableFooter, Avatar, Badge, Pagination, Button } from \"@windmill/react-ui\";\nimport { Link } from 'react-router-dom';\nimport json2xls from 'json2xls'; // Import json2xls\nimport { saveAs } from \"file-saver\"; // Import saveAs function\nimport * as XLSX from 'xlsx';\nimport ExcelJS from 'exceljs';\nconst OrdersTable = _ref => {\n  let {\n    resultsPerPage,\n    filter\n  } = _ref;\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  const [totalResults, setTotalResults] = useState(0);\n  const token = localStorage.getItem('accessToken');\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n  const fetchData = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      const response = await axios.get(\"http://localhost:8080/api/orders/all\", config);\n      const ordersData = response.data;\n\n      // Apply filters if necessary\n      let filteredData = ordersData;\n      if (filter === \"изпратена\") {\n        filteredData = ordersData.filter(order => order.status === \"Paid\");\n      } else if (filter === \"създадена\") {\n        filteredData = ordersData.filter(order => order.status === \"CREATED\");\n      } else if (filter === \"изпълнява се\") {\n        filteredData = ordersData.filter(order => order.status === \"WORKING_ON\");\n      } else if (filter === \"изпълнена\") {\n        filteredData = ordersData.filter(order => order.status === \"Paid\");\n      }\n\n      // Flatten the groups and update the totalResults and data state\n      const flattenedGroups = filteredData.flatMap(order => order);\n      setTotalResults(flattenedGroups.length);\n      setData(flattenedGroups.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  // const exportToExcel = () => {\n  //   // Create an array to store the Excel rows\n  //   const excelRows = [];\n  //   excelRows.push([\n  //     \"ПОРЕДЕН НОМЕР\", \"Група\", \"ДАТА\", \"ПОРЪЧКА\", \"КЛИЕНТ\", \"ВИД\", \"ГРАД\",\n  //     \"ЕТИКЕТ\", \"МОДЕЛ\", \"ВИСОЧИНА\", \"ШИРИНА\", \"БРОЙ КОЛИЧЕСТВО\",\n  //     \"МЕРНА ЕДИНИЦА\", \"ДРЪЖКА\", \"ЕДИНИЧНА ЦЕНА\", \"ЦЕНА НА ДРЪЖКА\",\n  //     \"ДВУСТРАННО ФОЛИРАНЕ\", \"СТОЙНОСТ\", \"ФОЛИО\", \"ПРОФИЛ\",\n  //   ]);\n\n  //   data.forEach(order => {\n  //     order.groups.forEach(group => {\n  //       const row = [\n  //         order.createdAt + order.id, \"Група\", order.createdAt, order.id, order.user.companyName, order.type === \"BY_HAND\" ? \"Ръчно - от Администратор\" : \"От клиент\",\n  //         order.user.city, order.detailType, group.model.name, group.height, group.width, group.number,\n  //         \"квадратен метър\", group.handle.name, group.handle.price, \"Цена на Дръжка\",\n  //         group.bothSidesLaminated ? \"ДВУСТРАННО\" : \"\", order.totalPrice, group.folio.name, group.profil.name\n  //       ];\n  //       excelRows.push(row);\n  //     });\n  //   });\n\n  //   const worksheet = XLSX.utils.aoa_to_sheet(excelRows);\n  //   const workbook = XLSX.utils.book_new();\n  //   XLSX.utils.book_append_sheet(workbook, worksheet, 'Orders');\n\n  //   const wbout = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\n  //   const blob = new Blob([wbout], { type: 'application/octet-stream' });\n\n  //   saveAs(blob, 'orders.xlsx');\n  // };\n\n  const exportToExcel = async () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet('Orders');\n    const headerRow = [\"ПОРЕДЕН НОМЕР\", \"Група\", \"ДАТА\", \"ПОРЪЧКА\", \"КЛИЕНТ\", \"ВИД\", \"ГРАД\", \"ЕТИКЕТ\", \"МОДЕЛ\", \"ВИСОЧИНА\", \"ШИРИНА\", \"БРОЙ КОЛИЧЕСТВО\", \"МЕРНА ЕДИНИЦА\", \"ДРЪЖКА\", \"ЕДИНИЧНА ЦЕНА\", \"ЦЕНА НА ДРЪЖКА\", \"ДВУСТРАННО ФОЛИРАНЕ\", \"СТОЙНОСТ\", \"ФОЛИО\", \"ПРОФИЛ\"];\n    worksheet.addRow(headerRow);\n    data.forEach(order => {\n      order.groups.forEach(group => {\n        const rowData = [order.createdAt + order.id, \"Група\", order.createdAt, order.id, order.user.companyName, order.type === \"BY_HAND\" ? \"Ръчно - от Администратор\" : \"От клиент\", order.user.city, order.detailType, group.model.name, group.height, group.width, group.number, \"квадратен метър\", group.handle.name, group.handle.price, \"Цена на Дръжка\", group.bothSidesLaminated ? \"ДВУСТРАННО\" : \"\", order.totalPrice, group.folio.name, group.profil.name];\n        const newRow = worksheet.addRow(rowData);\n\n        // Check if order status is CREATED and set row color to red\n        if (order.status === \"CREATED\") {\n          newRow.fill = {\n            type: 'pattern',\n            pattern: 'solid',\n            fgColor: {\n              argb: 'FF00FF00'\n            } // Green colornpom \n          };\n        } else if (order.status === \"WORKING_ON\") {\n          newRow.fill = {\n            type: 'pattern',\n            pattern: 'solid',\n            fgColor: {\n              argb: 'FFFFFF00'\n            } // Yellow color\n          };\n        }\n      });\n    });\n\n    const buffer = await workbook.xlsx.writeBuffer();\n    const blob = new Blob([buffer], {\n      type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    });\n    saveAs(blob, 'orders.xlsx');\n  };\n  useEffect(() => {\n    fetchData();\n  }, [page, resultsPerPage, filter]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: exportToExcel,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, \"\\u0415\\u043A\\u0441\\u043F\\u043E\\u0440\\u0442 \\u043D\\u0430 \\u0441\\u043F\\u0440\\u0430\\u0432\\u043A\\u0430\")), /*#__PURE__*/React.createElement(TableContainer, {\n    className: \"mb-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, \"id\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, \"O\\u0442 \\u0434\\u0430\\u0442\\u0430\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  }, \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, \"\\u041F\\u043E\\u0442\\u0440\\u0435\\u0431\\u0438\\u0442\\u0435\\u043B\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }, \"\\u041A\\u0440\\u0430\\u0439\\u043D\\u0430 \\u0441\\u0443\\u043C\\u0430\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }, \"\\u0422\\u0438\\u043F \\u043F\\u043E\\u0440\\u044A\\u0447\\u043A\\u0430\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, \"\\u041E\\u0442\\u0441\\u0442\\u044A\\u043F\\u043A\\u0430\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, data.map((order, i) => /*#__PURE__*/React.createElement(TableRow, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font-semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 23\n    }\n  }, order.id)))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font-semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 23\n    }\n  }, order.createdAt)))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    type: order.status === \"CREATED\" ? \"success\" : order.status === \"Paid\" ? \"success\" : order.status === \"WORKING_ON\" ? \"warning\" : \"neutral\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 19\n    }\n  }, order.status === \"WORKING_ON\" ? \"Изпълнява се\" : order.status === \"CREATED\" ? \"Създадена  \" : order.status)), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font-semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 23\n    }\n  }, order.user.email)))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 23\n    }\n  }, order.totalPrice), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 82\n    }\n  }, \"\\u043B\\u0432.\")))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }, order.type === \"BY_HAND\" ? \"Ръчно - от Администратор\" : \"От клиент\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 23\n    }\n  }, \"0\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 65\n    }\n  }, \"%\")))), /*#__PURE__*/React.createElement(TableCell, {\n    className: \"w-1/12 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `orders/${order.id}`,\n    className: \"text-indigo-600 hover:text-indigo-900\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 19\n    }\n  }, \"\\u0414\\u0435\\u0442\\u0430\\u0439\\u043B\\u0438\")))))), /*#__PURE__*/React.createElement(TableFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    totalResults: totalResults,\n    resultsPerPage: resultsPerPage,\n    label: \"Table navigation\",\n    onChange: onPageChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 11\n    }\n  }))));\n};\nexport default OrdersTable;","map":{"version":3,"names":["React","useState","useEffect","axios","TableBody","TableContainer","Table","TableHeader","TableCell","TableRow","TableFooter","Avatar","Badge","Pagination","Button","Link","json2xls","saveAs","XLSX","ExcelJS","OrdersTable","_ref","resultsPerPage","filter","page","setPage","data","setData","totalResults","setTotalResults","token","localStorage","getItem","onPageChange","p","fetchData","config","headers","Authorization","response","get","ordersData","filteredData","order","status","flattenedGroups","flatMap","length","slice","error","console","exportToExcel","workbook","Workbook","worksheet","addWorksheet","headerRow","addRow","forEach","groups","group","rowData","createdAt","id","user","companyName","type","city","detailType","model","name","height","width","number","handle","price","bothSidesLaminated","totalPrice","folio","profil","newRow","fill","pattern","fgColor","argb","buffer","xlsx","writeBuffer","blob","Blob","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","map","i","key","email","to","label","onChange"],"sources":["/Users/milenmladenov/asset-management-fe/src/components/OrdersTable.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n  Button\n} from \"@windmill/react-ui\";\nimport { Link } from 'react-router-dom'\nimport json2xls from 'json2xls'; // Import json2xls\nimport { saveAs } from \"file-saver\"; // Import saveAs function\nimport * as XLSX from 'xlsx';\nimport ExcelJS from 'exceljs';\n\n\n\n\n\nconst OrdersTable = ({ resultsPerPage, filter }) => {\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  const [totalResults, setTotalResults] = useState(0);\n  const token = localStorage.getItem('accessToken')\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n\n  const fetchData = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      };\n      const response = await axios.get(\"http://localhost:8080/api/orders/all\", config);\n      const ordersData = response.data;\n\n      // Apply filters if necessary\n      let filteredData = ordersData;\n      if (filter === \"изпратена\") {\n        filteredData = ordersData.filter(order => order.status === \"Paid\");\n      } else if (filter === \"създадена\") {\n        filteredData = ordersData.filter(order => order.status === \"CREATED\");\n      } else if (filter === \"изпълнява се\") {\n        filteredData = ordersData.filter(order => order.status === \"WORKING_ON\");\n      } else if (filter === \"изпълнена\") {\n        filteredData = ordersData.filter(order => order.status === \"Paid\");\n      }\n\n      // Flatten the groups and update the totalResults and data state\n      const flattenedGroups = filteredData.flatMap(order => order);\n      setTotalResults(flattenedGroups.length);\n      setData(flattenedGroups.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n\n  // const exportToExcel = () => {\n  //   // Create an array to store the Excel rows\n  //   const excelRows = [];\n  //   excelRows.push([\n  //     \"ПОРЕДЕН НОМЕР\", \"Група\", \"ДАТА\", \"ПОРЪЧКА\", \"КЛИЕНТ\", \"ВИД\", \"ГРАД\",\n  //     \"ЕТИКЕТ\", \"МОДЕЛ\", \"ВИСОЧИНА\", \"ШИРИНА\", \"БРОЙ КОЛИЧЕСТВО\",\n  //     \"МЕРНА ЕДИНИЦА\", \"ДРЪЖКА\", \"ЕДИНИЧНА ЦЕНА\", \"ЦЕНА НА ДРЪЖКА\",\n  //     \"ДВУСТРАННО ФОЛИРАНЕ\", \"СТОЙНОСТ\", \"ФОЛИО\", \"ПРОФИЛ\",\n  //   ]);\n\n  //   data.forEach(order => {\n  //     order.groups.forEach(group => {\n  //       const row = [\n  //         order.createdAt + order.id, \"Група\", order.createdAt, order.id, order.user.companyName, order.type === \"BY_HAND\" ? \"Ръчно - от Администратор\" : \"От клиент\",\n  //         order.user.city, order.detailType, group.model.name, group.height, group.width, group.number,\n  //         \"квадратен метър\", group.handle.name, group.handle.price, \"Цена на Дръжка\",\n  //         group.bothSidesLaminated ? \"ДВУСТРАННО\" : \"\", order.totalPrice, group.folio.name, group.profil.name\n  //       ];\n  //       excelRows.push(row);\n  //     });\n  //   });\n\n  //   const worksheet = XLSX.utils.aoa_to_sheet(excelRows);\n  //   const workbook = XLSX.utils.book_new();\n  //   XLSX.utils.book_append_sheet(workbook, worksheet, 'Orders');\n\n  //   const wbout = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\n  //   const blob = new Blob([wbout], { type: 'application/octet-stream' });\n\n  //   saveAs(blob, 'orders.xlsx');\n  // };\n\n  const exportToExcel = async () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet('Orders');\n\n    const headerRow = [\n      \"ПОРЕДЕН НОМЕР\", \"Група\", \"ДАТА\", \"ПОРЪЧКА\", \"КЛИЕНТ\", \"ВИД\", \"ГРАД\",\n      \"ЕТИКЕТ\", \"МОДЕЛ\", \"ВИСОЧИНА\", \"ШИРИНА\", \"БРОЙ КОЛИЧЕСТВО\",\n      \"МЕРНА ЕДИНИЦА\", \"ДРЪЖКА\", \"ЕДИНИЧНА ЦЕНА\", \"ЦЕНА НА ДРЪЖКА\",\n      \"ДВУСТРАННО ФОЛИРАНЕ\", \"СТОЙНОСТ\", \"ФОЛИО\", \"ПРОФИЛ\",\n    ];\n\n    worksheet.addRow(headerRow);\n\n    data.forEach(order => {\n      order.groups.forEach(group => {\n        const rowData = [\n          order.createdAt + order.id, \"Група\", order.createdAt, order.id, order.user.companyName, order.type === \"BY_HAND\" ? \"Ръчно - от Администратор\" : \"От клиент\",\n          order.user.city, order.detailType, group.model.name, group.height, group.width, group.number,\n          \"квадратен метър\", group.handle.name, group.handle.price, \"Цена на Дръжка\",\n          group.bothSidesLaminated ? \"ДВУСТРАННО\" : \"\", order.totalPrice, group.folio.name, group.profil.name\n        ];\n        const newRow = worksheet.addRow(rowData);\n\n        // Check if order status is CREATED and set row color to red\n        if (order.status === \"CREATED\") {\n          newRow.fill = {\n            type: 'pattern',\n            pattern: 'solid',\n            fgColor: { argb: 'FF00FF00' }, // Green colornpom \n          };\n        } else if (order.status === \"WORKING_ON\") {\n          newRow.fill = {\n            type: 'pattern',\n            pattern: 'solid',\n            fgColor: { argb: 'FFFFFF00' }, // Yellow color\n          };\n        }\n      });\n    });\n\n    const buffer = await workbook.xlsx.writeBuffer();\n    const blob = new Blob([buffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n\n    saveAs(blob, 'orders.xlsx');\n  };\n\n\n  useEffect(() => {\n    fetchData();\n  }, [page, resultsPerPage, filter]);\n  return (\n    <div>\n      <div className=\"mt-4\">\n        <Button onClick={exportToExcel} className=\"btn btn-primary\">Експорт на справка</Button>\n      </div>\n      {/* Table */}\n      <TableContainer className=\"mb-8\">\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>id</TableCell>\n              <TableCell>Oт дата</TableCell>\n              <TableCell>Статус</TableCell>\n              <TableCell>Потребител</TableCell>\n              <TableCell>Крайна сума</TableCell>\n              <TableCell>Тип поръчка</TableCell>\n              <TableCell>Отстъпка</TableCell>\n\n\n\n\n\n            </tr>\n          </TableHeader>\n          <TableBody>\n\n            {data.map((order, i) => (\n              <TableRow key={i}>\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <div>\n                      <p className=\"font-semibold\">{order.id}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <div>\n                      <p className=\"font-semibold\">{order.createdAt}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <Badge\n                    type={\n                      order.status === \"CREATED\"\n                        ? \"success\"\n                        : order.status === \"Paid\"\n                          ? \"success\"\n                          : order.status === \"WORKING_ON\"\n                            ? \"warning\"\n                            : \"neutral\"\n                    }\n                  >\n\n                    {order.status === \"WORKING_ON\" ? \"Изпълнява се\" : order.status === \"CREATED\" ? \"Създадена  \" : order.status}\n\n\n                  </Badge>\n                </TableCell>\n                <TableCell>\n\n                  <div className=\"flex items-center text-sm\">\n                    <div>\n                      <p className=\"font-semibold\">{order.user.email}</p>\n                    </div>\n                  </div>\n                </TableCell>\n\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <div>\n                      <span className=\"font-semibold\">{order.totalPrice}</span  ><span>лв.</span>\n                    </div>\n                  </div>\n                </TableCell>\n\n\n                <TableCell>\n                  {order.type === \"BY_HAND\" ? \"Ръчно - от Администратор\" : \"От клиент\"}\n                </TableCell>\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <div>\n                      <span className=\"font-semibold\">0</span  ><span>%</span>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell className=\"w-1/12 text-center\">\n                  <Link\n                    to={`orders/${order.id}`}\n                    className=\"text-indigo-600 hover:text-indigo-900\"\n                  >\n                    Детайли\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter>\n\n          <Pagination\n            totalResults={totalResults}\n            resultsPerPage={resultsPerPage}\n            label=\"Table navigation\"\n            onChange={onPageChange}\n          />\n        </TableFooter>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default OrdersTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}