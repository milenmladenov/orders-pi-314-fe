{"version":3,"sources":["../node_modules/classnames/index.js","components/Cards/InfoCard.js","components/RoundIcon.js","pages/Dashboard.js","components/Typography/PageTitle.js","components/Chart/ChartCard.js","components/Chart/ChartLegend.js","utils/demo/chartsData.js","utils/demo/ordersData.js","components/OrdersTable.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","InfoCard","_ref","title","value","icon","children","React","createElement","Card","CardBody","className","RoundIcon","Icon","_ref$iconColorClass","iconColorClass","_ref$bgColorClass","bgColorClass","cls","Dashboard","Fragment","PageTitle","PeopleIcon","MoneyIcon","CartIcon","ChatIcon","ChartCard","Line","lineOptions","ChartLegend","legends","lineLegends","Doughnut","doughnutOptions","doughnutLegends","OrdersTable","resultsPerPage","Chart","map","legend","concat","color","realTimeUsersBarLegends","data","datasets","backgroundColor","label","labels","options","responsive","cutoutPercentage","display","borderColor","fill","tooltips","mode","intersect","hover","scales","x","scaleLabel","labelString","y","realTimeUsersBarOptions","borderWidth","avatar","name","amount","status","date","filter","_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","_useState4","setData","totalResults","response","useEffect","order","slice","TableContainer","Table","TableHeader","TableCell","TableBody","user","TableRow","Avatar","src","alt","Badge","type","Date","toLocaleDateString","TableFooter","Pagination","onChange","p"],"mappings":"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","file":"static/js/6.b8a2c52f.chunk.js","sourcesContent":["/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from 'react'\nimport { Card, CardBody } from '@windmill/react-ui'\n\nfunction InfoCard({ title, value, children: icon }) {\n  return (\n    <Card>\n      <CardBody className=\"flex items-center\">\n        {icon}\n        <div>\n          <p className=\"mb-2 text-sm font-medium text-gray-600 dark:text-gray-400\">{title}</p>\n          <p className=\"text-lg font-semibold text-gray-700 dark:text-gray-200\">{value}</p>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default InfoCard\n","import React from 'react'\nimport classNames from 'classnames'\n\nfunction RoundIcon({\n  icon: Icon,\n  iconColorClass = 'text-purple-600 dark:text-purple-100',\n  bgColorClass = 'bg-purple-100 dark:bg-purple-600',\n  className,\n}) {\n  const baseStyle = 'p-3 rounded-full'\n\n  const cls = classNames(baseStyle, iconColorClass, bgColorClass, className)\n  return (\n    <div className={cls}>\n      <Icon className=\"w-5 h-5\" />\n    </div>\n  )\n}\n\nexport default RoundIcon\n","import React from \"react\";\n\nimport InfoCard from \"../components/Cards/InfoCard\";\nimport ChartCard from \"../components/Chart/ChartCard\";\nimport { Doughnut, Line } from \"react-chartjs-2\";\nimport ChartLegend from \"../components/Chart/ChartLegend\";\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport { ChatIcon, CartIcon, MoneyIcon, PeopleIcon } from \"../icons\";\nimport RoundIcon from \"../components/RoundIcon\";\n\nimport {\n  doughnutOptions,\n  lineOptions,\n  doughnutLegends,\n  lineLegends,\n} from \"../utils/demo/chartsData\";\nimport OrdersTable from \"../components/OrdersTable\";\n\nfunction Dashboard() {\n  return (\n    <>\n      <PageTitle>Dashboard</PageTitle>\n\n      {/* <CTA /> */}\n\n      {/* <!-- Cards --> */}\n      <div className=\"grid gap-6 mb-8 md:grid-cols-2 xl:grid-cols-4\">\n        <InfoCard title=\"Total customers\" value=\"765\">\n          <RoundIcon\n            icon={PeopleIcon}\n            iconColorClass=\"text-orange-500 dark:text-orange-100\"\n            bgColorClass=\"bg-orange-100 dark:bg-orange-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n\n        <InfoCard title=\"Total income\" value=\"$ 6,760.89\">\n          <RoundIcon\n            icon={MoneyIcon}\n            iconColorClass=\"text-green-500 dark:text-green-100\"\n            bgColorClass=\"bg-green-100 dark:bg-green-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n\n        <InfoCard title=\"New Orders\" value=\"150\">\n          <RoundIcon\n            icon={CartIcon}\n            iconColorClass=\"text-blue-500 dark:text-blue-100\"\n            bgColorClass=\"bg-blue-100 dark:bg-blue-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n\n        <InfoCard title=\"Unread Chats\" value=\"15\">\n          <RoundIcon\n            icon={ChatIcon}\n            iconColorClass=\"text-teal-500 dark:text-teal-100\"\n            bgColorClass=\"bg-teal-100 dark:bg-teal-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n      </div>\n\n      <div className=\"grid gap-6 mb-8 md:grid-cols-2\">\n        <ChartCard title=\"User Analytics\">\n          <Line {...lineOptions} />\n          <ChartLegend legends={lineLegends} />\n        </ChartCard>\n\n        <ChartCard title=\"Revenue\">\n          <Doughnut {...doughnutOptions} />\n          <ChartLegend legends={doughnutLegends} />\n        </ChartCard>\n      </div>\n\n      <PageTitle>Orders</PageTitle>\n      <OrdersTable resultsPerPage={10} />\n    </>\n  );\n}\n\nexport default Dashboard;\n","import React from 'react'\n\nfunction PageTitle({ children }) {\n  return (\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\n  )\n}\n\nexport default PageTitle\n","import React from 'react'\n\nfunction Chart({ children, title }) {\n  return (\n    <div className=\"min-w-0 p-4 bg-white rounded-lg shadow-xs dark:bg-gray-800\">\n      <p className=\"mb-4 font-semibold text-gray-800 dark:text-gray-300\">{title}</p>\n      {children}\n    </div>\n  )\n}\n\nexport default Chart\n","import React from 'react'\n\nfunction ChartLegend({ legends }) {\n  return (\n    <div className=\"flex justify-center mt-4 space-x-3 text-sm text-gray-600 dark:text-gray-400\">\n      {legends.map((legend) => (\n        <div className=\"flex items-center\" key={legend.title}>\n          <span className={`inline-block w-3 h-3 mr-1 ${legend.color} rounded-full`}></span>\n          <span>{legend.title}</span>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default ChartLegend\n","export const doughnutLegends = [\n  { title: \"Shirts\", color: \"bg-blue-500\" },\n  { title: \"Shoes\", color: \"bg-teal-600\" },\n  { title: \"Bags\", color: \"bg-purple-600\" },\n];\n\nexport const lineLegends = [\n  { title: \"Organic\", color: \"bg-teal-600\" },\n  { title: \"Paid\", color: \"bg-purple-600\" },\n];\n\nexport const barLegends = [\n  { title: \"Shoes\", color: \"bg-teal-600\" },\n  { title: \"Bags\", color: \"bg-purple-600\" },\n];\nexport const realTimeUsersBarLegends = [\n  { title: \"Active Users\", color: \"bg-teal-600\" },\n];\n\nexport const doughnutOptions = {\n  data: {\n    datasets: [\n      {\n        data: [33, 33, 33],\n        /**\n         * These colors come from Tailwind CSS palette\n         * https://tailwindcss.com/docs/customizing-colors/#default-color-palette\n         */\n        backgroundColor: [\"#0694a2\", \"#1c64f2\", \"#7e3af2\"],\n        label: \"Dataset 1\",\n      },\n    ],\n    labels: [\"Shoes\", \"Shirts\", \"Bags\"],\n  },\n  options: {\n    responsive: true,\n    cutoutPercentage: 80,\n  },\n  legend: {\n    display: false,\n  },\n};\n\nexport const lineOptions = {\n  data: {\n    labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n    datasets: [\n      {\n        label: \"Organic\",\n        /**\n         * These colors come from Tailwind CSS palette\n         * https://tailwindcss.com/docs/customizing-colors/#default-color-palette\n         */\n        backgroundColor: \"#0694a2\",\n        borderColor: \"#0694a2\",\n        data: [43, 48, 40, 54, 67, 73, 70],\n        fill: false,\n      },\n      {\n        label: \"Paid\",\n        fill: false,\n        /**\n         * These colors come from Tailwind CSS palette\n         * https://tailwindcss.com/docs/customizing-colors/#default-color-palette\n         */\n        backgroundColor: \"#7e3af2\",\n        borderColor: \"#7e3af2\",\n        data: [24, 50, 64, 74, 52, 51, 65],\n      },\n    ],\n  },\n  options: {\n    responsive: true,\n    tooltips: {\n      mode: \"index\",\n      intersect: false,\n    },\n    hover: {\n      mode: \"nearest\",\n      intersect: true,\n    },\n    scales: {\n      x: {\n        display: true,\n        scaleLabel: {\n          display: true,\n          labelString: \"Month\",\n        },\n      },\n      y: {\n        display: true,\n        scaleLabel: {\n          display: true,\n          labelString: \"Value\",\n        },\n      },\n    },\n  },\n  legend: {\n    display: false,\n  },\n};\n\nexport const barOptions = {\n  data: {\n    labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n    datasets: [\n      {\n        label: \"Shoes\",\n        backgroundColor: \"#0694a2\",\n        // borderColor: window.chartColors.red,\n        borderWidth: 1,\n        data: [-3, 14, 52, 74, 33, 90, 70],\n      },\n      {\n        label: \"Bags\",\n        backgroundColor: \"#7e3af2\",\n        // borderColor: window.chartColors.blue,\n        borderWidth: 1,\n        data: [66, 33, 43, 12, 54, 62, 84],\n      },\n    ],\n  },\n  options: {\n    responsive: true,\n  },\n  legend: {\n    display: false,\n  },\n};\n\nexport const realTimeUsersBarOptions = {\n  data: {\n    labels: [\n      \"6.00\",\n      \"6.10\",\n      \"6.20\",\n      \"6.30\",\n      \"6.40\",\n      \"6.50\",\n      \"7.00\",\n      \"7.10\",\n      \"7.20\",\n      \"7.30\",\n      \"7.40\",\n      \"7.50\",\n      \"Now\",\n    ],\n    datasets: [\n      {\n        label: \"Active Users\",\n        backgroundColor: \"#0694a2\",\n        // borderColor: window.chartColors.red,\n        borderWidth: 1,\n        data: [2, 14, 52, 74, 33, 90, 70, 34, 56, 62, 11, 23, 55],\n      },\n    ],\n  },\n  options: {\n    responsive: true,\n  },\n  legend: {\n    display: false,\n  },\n};\n","export default [\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Chandler Jacobi\",\n    amount: 989.4,\n    status: \"Completed\",\n    date: \"Mon Feb 03 2020 04:13:15 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Monserrat Marquardt\",\n    amount: 471.44,\n    status: \"Un-paid\",\n    date: \"Fri Nov 29 2019 10:43:17 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Lonie Wyman\",\n    amount: 934.24,\n    status: \"Paid\",\n    date: \"Fri Apr 03 2020 03:07:53 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Corine Abernathy\",\n    amount: 351.28,\n    status: \"Paid\",\n    date: \"Fri Jun 21 2019 20:21:55 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Lorenz Botsford\",\n    amount: 355.3,\n    status: \"Completed\",\n    date: \"Wed Aug 28 2019 15:31:43 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Everette Botsford\",\n    amount: 525.42,\n    status: \"Paid\",\n    date: \"Thu Jan 16 2020 09:53:33 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Marilou Beahan\",\n    amount: 414.99,\n    status: \"Paid\",\n    date: \"Mon Oct 28 2019 14:44:31 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Ceasar Sauer\",\n    amount: 488.0,\n    status: \"Completed\",\n    date: \"Tue Jul 23 2019 00:24:44 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Rae McDermott\",\n    amount: 502.69,\n    status: \"Un-paid\",\n    date: \"Sat Feb 01 2020 12:57:03 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Mable Steuber\",\n    amount: 911.09,\n    status: \"Un-paid\",\n    date: \"Mon Sep 09 2019 12:03:25 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Julian Glover\",\n    amount: 656.94,\n    status: \"Un-paid\",\n    date: \"Fri May 22 2020 17:46:12 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Duncan Toy\",\n    amount: 120.78,\n    status: \"Un-paid\",\n    date: \"Sun Nov 17 2019 11:59:50 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Blanche Friesen\",\n    amount: 676.95,\n    status: \"Un-paid\",\n    date: \"Sun Jun 21 2020 16:46:39 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Orion Koepp\",\n    amount: 447.56,\n    status: \"Un-paid\",\n    date: \"Thu Jun 04 2020 18:29:41 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Dakota Vandervort\",\n    amount: 765.22,\n    status: \"Un-paid\",\n    date: \"Fri Jan 31 2020 13:02:55 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Lily Collier\",\n    amount: 449.11,\n    status: \"Un-paid\",\n    date: \"Sun Aug 18 2019 14:52:01 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Kayleigh Schumm\",\n    amount: 65.54,\n    status: \"Un-paid\",\n    date: \"Wed May 06 2020 17:49:09 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"General McGlynn\",\n    amount: 30.51,\n    status: \"Un-paid\",\n    date: \"Mon Mar 30 2020 01:24:54 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Shayna Schumm\",\n    amount: 313.73,\n    status: \"Un-paid\",\n    date: \"Wed Jul 03 2019 10:01:06 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Giovanna Sanford\",\n    amount: 398.3,\n    status: \"Un-paid\",\n    date: \"Tue Oct 08 2019 17:08:43 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Emie Mante\",\n    amount: 142.51,\n    status: \"Un-paid\",\n    date: \"Wed Jul 24 2019 19:17:16 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Chance Muller\",\n    amount: 963.26,\n    status: \"Un-paid\",\n    date: \"Sun Dec 01 2019 14:04:10 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Armani Torphy\",\n    amount: 445.23,\n    status: \"Un-paid\",\n    date: \"Tue Dec 24 2019 13:28:36 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Braeden Ward\",\n    amount: 588.53,\n    status: \"Un-paid\",\n    date: \"Wed Apr 15 2020 21:40:11 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Malcolm Price\",\n    amount: 181.93,\n    status: \"Un-paid\",\n    date: \"Thu Oct 24 2019 07:09:03 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Susan Jast\",\n    amount: 928.41,\n    status: \"Un-paid\",\n    date: \"Sun Feb 09 2020 23:22:23 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Torrey Reynolds\",\n    amount: 447.37,\n    status: \"Un-paid\",\n    date: \"Mon Oct 28 2019 04:10:39 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Travon Harber\",\n    amount: 422.48,\n    status: \"Un-paid\",\n    date: \"Sat Nov 09 2019 05:04:09 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Hattie Gutkowski\",\n    amount: 714.34,\n    status: \"Un-paid\",\n    date: \"Tue Oct 22 2019 22:36:23 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Demarco Lang\",\n    amount: 536.92,\n    status: \"Un-paid\",\n    date: \"Wed Apr 08 2020 03:05:59 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Glennie Ziemann\",\n    amount: 597.25,\n    status: \"Un-paid\",\n    date: \"Mon Jun 22 2020 21:27:06 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Alta Howe\",\n    amount: 42.28,\n    status: \"Un-paid\",\n    date: \"Sat Oct 12 2019 22:57:22 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Sydnee Gottlieb\",\n    amount: 868.92,\n    status: \"Un-paid\",\n    date: \"Wed Feb 05 2020 05:17:34 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Arlene Schmitt\",\n    amount: 364.68,\n    status: \"Un-paid\",\n    date: \"Thu Oct 03 2019 08:47:32 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Hilda Schoen\",\n    amount: 260.91,\n    status: \"Un-paid\",\n    date: \"Wed Dec 04 2019 06:28:30 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Chase Bahringer\",\n    amount: 454.61,\n    status: \"Un-paid\",\n    date: \"Mon Nov 25 2019 16:59:38 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Lucile Hansen\",\n    amount: 982.22,\n    status: \"Un-paid\",\n    date: \"Sun Aug 25 2019 17:15:59 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Mollie Heaney\",\n    amount: 390.33,\n    status: \"Un-paid\",\n    date: \"Mon Jul 22 2019 01:45:19 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Bennie Kuvalis\",\n    amount: 456.64,\n    status: \"Un-paid\",\n    date: \"Sat Feb 08 2020 07:55:08 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Jodie Luettgen\",\n    amount: 398.37,\n    status: \"Un-paid\",\n    date: \"Tue Jun 09 2020 11:19:53 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Bethel Quitzon\",\n    amount: 183.58,\n    status: \"Un-paid\",\n    date: \"Sun Dec 29 2019 18:56:54 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Jon Dietrich\",\n    amount: 439.01,\n    status: \"Un-paid\",\n    date: \"Sun Dec 29 2019 11:11:34 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Nakia Kihn\",\n    amount: 824.12,\n    status: \"Un-paid\",\n    date: \"Sun Sep 15 2019 06:43:56 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Assunta Grady\",\n    amount: 172.97,\n    status: \"Un-paid\",\n    date: \"Tue Dec 17 2019 01:46:37 GMT-0300 (Brasilia Standard Time)\",\n  },\n  {\n    avatar: \"https://i.pravatar.cc/300\",\n    name: \"Lukas Klocko\",\n    amount: 515.74,\n    status: \"Un-paid\",\n    date: \"Mon Jun 15 2020 04:04:32 GMT-0300 (Brasilia Standard Time)\",\n  },\n];\n","import React, { useState, useEffect } from \"react\";\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport response from \"../utils/demo/ordersData\";\n\nconst OrdersTable = ({ resultsPerPage, filter }) => {\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n\n  // pagination setup\n  const totalResults = response.length;\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n\n  // on page change, load new sliced data\n  // here you would make another server request for new data\n  useEffect(() => {\n    // If Filters Applied\n    if (filter === \"paid\") {\n      setData(\n        response\n          .filter((order) => order.status === \"Paid\")\n          .slice((page - 1) * resultsPerPage, page * resultsPerPage)\n      );\n    }\n    if (filter === \"un-paid\") {\n      setData(\n        response\n          .filter((order) => order.status === \"Un-paid\")\n          .slice((page - 1) * resultsPerPage, page * resultsPerPage)\n      );\n    }\n    if (filter === \"completed\") {\n      setData(\n        response\n          .filter((order) => order.status === \"Completed\")\n          .slice((page - 1) * resultsPerPage, page * resultsPerPage)\n      );\n    }\n\n    // if filters dosent applied\n    if (filter === \"all\" || !filter) {\n      setData(\n        response.slice((page - 1) * resultsPerPage, page * resultsPerPage)\n      );\n    }\n  }, [page, resultsPerPage, filter]);\n\n  return (\n    <div>\n      {/* Table */}\n      <TableContainer className=\"mb-8\">\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Client</TableCell>\n              <TableCell>Order ID</TableCell>\n              <TableCell>Amount</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {data.map((user, i) => (\n              <TableRow key={i}>\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <Avatar\n                      className=\"hidden mr-3 md:block\"\n                      src={user.avatar}\n                      alt=\"User image\"\n                    />\n                    <div>\n                      <p className=\"font-semibold\">{user.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">#000{i}</span>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">$ {user.amount}</span>\n                </TableCell>\n                <TableCell>\n                  <Badge\n                    type={\n                      user.status === \"Un-paid\"\n                        ? \"danger\"\n                        : user.status === \"Paid\"\n                        ? \"success\"\n                        : user.status === \"Completed\"\n                        ? \"warning\"\n                        : \"neutral\"\n                    }\n                  >\n                    {user.status}\n                  </Badge>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">\n                    {new Date(user.date).toLocaleDateString()}\n                  </span>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter>\n          <Pagination\n            totalResults={totalResults}\n            resultsPerPage={resultsPerPage}\n            label=\"Table navigation\"\n            onChange={onPageChange}\n          />\n        </TableFooter>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default OrdersTable;\n"],"sourceRoot":""}