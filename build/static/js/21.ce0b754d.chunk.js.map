{"version":3,"sources":["pages/CreateAccount.js","Constants.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","components/misc/Helpers.js","components/misc/OrderApi.js","assets/img/logo-white-frame.png"],"names":["SignUp","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","username","password","email","companyAddress","communicationName","phone","companyName","bulstat","city","isDdsRegistered","mol","postCode","orderAddressList","isLoggedIn","isError","errorMessage","handleInputChange","e","_e$target","target","name","value","setState","_defineProperty","validatePasswords","_this$state","passwordErrorMessage","handleSubmit","preventDefault","_this$state2","console","log","user","orderApi","signup","then","response","accessToken","data","parseJwt","context","userLogin","catch","error","handleLogError","errorData","status","message","errors","defaultMessage","_createClass","key","this","userIsAuthenticated","_this$state3","React","createElement","Redirect","to","className","aria-hidden","src","Logo","alt","HelperText","style","color","Label","Input","placeholder","onChange","valid","type","Textarea","Button","block","as","Link","onClick","Component","contextType","AuthContext","config","url","API_BASE_URL","obj","Object","defineProperty","enumerable","configurable","writable","token","base64","split","replace","JSON","parse","window","atob","request","authenticate","instance","post","headers","numberOfUsers","get","numberOfOrders","getUsers","bearerAuth","deleteUser","delete","getOrders","text","deleteOrder","orderId","createOrder","order","getUserMe","newOrder","axios","create","baseURL","interceptors","use","Authorization","Date","now","exp","location","href","Promise","reject","module","exports"],"mappings":"kSAeMA,G,MAAM,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAAA,SAAAA,IAAA,IAAAK,EAAAC,YAAA,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GA6JT,OA7JSP,EAAAF,EAAAU,KAAAC,MAAAX,EAAA,OAAAY,OAAAL,KAIVM,MAAQ,CACNC,SAAU,GACVC,SAAU,GACVC,MAAO,GACPC,eAAgB,GAChBC,kBAAmB,GACnBC,MAAO,GACPC,YAAa,GACbC,QAAS,GACTC,KAAM,GACNC,iBAAiB,EACjBC,IAAK,GACLC,SAAU,KACVC,iBAAkB,GAClBC,YAAY,EACZC,SAAS,EACTC,aAAc,IACf3B,EAQD4B,kBAAoB,SAACC,GACnB,IAAAC,EAAwBD,EAAEE,OAAlBC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MACdjC,EAAKkC,SAAQC,YAAC,GAAGH,EAAOC,KAEzBjC,EAEHoC,kBAAoB,WAClB,IAAAC,EAA0DrC,EAAKW,MAA/C0B,EAARxB,WAA6CwB,EAAnC,oBAEhBrC,EAAKkC,SAAS,CACZR,SAAS,EACTY,qBAAsB,oHAGxBtC,EAAKkC,SAAS,CACZR,SAAS,EACTY,qBAAsB,MAG3BtC,EAECuC,aAAe,SAACV,GACdA,EAAEW,iBAGF,IAAAC,EAaIzC,EAAKW,MAZPC,EAAQ6B,EAAR7B,SACAC,EAAQ4B,EAAR5B,SACAC,EAAK2B,EAAL3B,MACAC,EAAc0B,EAAd1B,eACAC,EAAiByB,EAAjBzB,kBACAC,EAAKwB,EAALxB,MACAC,EAAWuB,EAAXvB,YACAC,EAAOsB,EAAPtB,QACAC,EAAIqB,EAAJrB,KACAC,EAAeoB,EAAfpB,gBACAC,EAAGmB,EAAHnB,IACAC,EAAQkB,EAARlB,SAeF,GAbAmB,QAAQC,IAAI/B,EACVC,EAEAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAGEX,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAE,GACAC,EASJ,GAAIV,IAAab,EAAKW,MAAM,oBAA5B,CAOA,IAAMiC,EAAO,CACXhC,WACAC,WACAC,QACAC,iBACAC,oBACAC,QACAC,cACAC,UACAC,OACAE,MACAC,YAEFmB,QAAQC,IAAIC,GAEZC,IAASC,OAAOF,GACbG,MAAK,SAAAC,GACJ,IAAQC,EAAgBD,EAASE,KAAzBD,YAEFL,EAAO,CAAEM,KADFC,YAASF,GACDA,eAERjD,EAAKoD,QACbC,UAAUT,GAEf5C,EAAKkC,SAAS,CACZtB,SAAU,GACVC,SAAU,GACVY,YAAY,EACZC,SAAS,EACTC,aAAc,QAGjB2B,OAAM,SAAAC,GAEL,GADAC,YAAeD,GACXA,EAAMP,UAAYO,EAAMP,SAASE,KAAM,CACzC,IAAMO,EAAYF,EAAMP,SAASE,KAC7BvB,EAAe,iBACM,MAArB8B,EAAUC,OACZ/B,EAAe8B,EAAUE,QACK,MAArBF,EAAUC,SACnB/B,EAAe8B,EAAUG,OAAO,GAAGC,gBAErC7D,EAAKkC,SAAS,CACZR,SAAS,EACTC,0BAlDN3B,EAAKkC,SAAS,CACZR,SAAS,EACTY,qBAAsB,yHATxBtC,EAAKkC,SAAS,CACZR,SAAS,EACTC,aAAc,0OA2DnB3B,EA6MA,OA7MA8D,YAAAnE,EAAA,EAAAoE,IAAA,oBAAA9B,MAtID,WACE,IACMR,EADOuC,KAAKZ,QACMa,sBACxBD,KAAK9B,SAAS,CAAET,iBACjB,CAAAsC,IAAA,SAAA9B,MAoID,WACE,IAAAiC,EAAmEF,KAAKrD,MAAhEc,EAAUyC,EAAVzC,WAAqBE,GAAFuC,EAAPxC,QAAqBwC,EAAZvC,cAAaW,EAAoB4B,EAApB5B,qBAE1C,OAAIb,EACK0C,IAAAC,cAACC,WAAQ,CAACC,GAAG,SAGlBH,IAAAC,cAAA,OAAKG,UAAU,qDACbJ,IAAAC,cAAA,OAAKG,UAAU,kFACbJ,IAAAC,cAAA,OAAKG,UAAU,6BACbJ,IAAAC,cAAA,OAAKG,UAAU,sCACbJ,IAAAC,cAAA,OACEI,cAAY,OACZD,UAAU,4CACVE,IAAKC,IACLC,IAAI,UAGRR,IAAAC,cAAA,QAAMG,UAAU,yDACdJ,IAAAC,cAAA,OAAKG,UAAU,iBAEbJ,IAAAC,cAACQ,aAAU,KAAE,oIAAwBT,IAAAC,cAAA,QAAMS,MAAO,CAAEC,MAAO,QAAS,KAAQ,2FAE5EX,IAAAC,cAAA,MAAIG,UAAU,SAEdJ,IAAAC,cAAA,OAAKG,UAAU,0BACbJ,IAAAC,cAAA,OAAKG,UAAU,0BACbJ,IAAAC,cAAA,MAAIG,UAAU,+DAA8D,iHAG5EJ,IAAAC,cAACW,QAAK,KACJZ,IAAAC,cAAA,YAAM,sBACND,IAAAC,cAACY,QAAK,CACJT,UAAU,OACVvC,KAAK,oBACLiD,YAAY,kPACZC,SAAUlB,KAAKpC,qBAGnBuC,IAAAC,cAACW,QAAK,KACJZ,IAAAC,cAAA,YAAM,qGACND,IAAAC,cAACQ,aAAU,CAACO,OAAO,GAAO,MAE1BhB,IAAAC,cAACY,QAAK,CACJT,UAAU,OACVvC,KAAK,WACLiD,YAAY,oGACZC,SAAUlB,KAAKpC,qBAGnBuC,IAAAC,cAACW,QAAK,KACJZ,IAAAC,cAAA,YAAM,SACND,IAAAC,cAACY,QAAK,CACJT,UAAU,OACVa,KAAK,QACLH,YAAY,oBACZjD,KAAK,QACLkD,SAAUlB,KAAKpC,qBAGnBuC,IAAAC,cAACW,QAAK,KACJZ,IAAAC,cAAA,YAAM,6EACND,IAAAC,cAACY,QAAK,CACJT,UAAU,OACVU,YAAY,kBACZG,KAAK,WACLpD,KAAK,WACLkD,SAAUlB,KAAKpC,qBAGnBuC,IAAAC,cAACW,QAAK,KACJZ,IAAAC,cAAA,YAAM,iHACND,IAAAC,cAACY,QAAK,CACJT,UAAU,OACVU,YAAY,kBACZG,KAAK,WACLpD,KAAK,mBACLkD,SAAUlB,KAAKpC,qBAGlBU,EACD6B,IAAAC,cAAA,MAAIG,UAAU,SACdJ,IAAAC,cAAA,MAAIG,UAAU,+DAA8D,4GAG5EJ,IAAAC,cAACW,QAAK,KACJZ,IAAAC,cAAA,YAAM,qDACND,IAAAC,cAACY,QAAK,CACJT,UAAU,OACVvC,KAAK,cACLiD,YAAY,GACZC,SAAUlB,KAAKpC,qBAGnBuC,IAAAC,cAACW,QAAK,KACJZ,IAAAC,cAAA,YAAM,iEACND,IAAAC,cAACY,QAAK,CACJT,UAAU,OACVvC,KAAK,UACLiD,YAAY,gEACZC,SAAUlB,KAAKpC,qBAInBuC,IAAAC,cAACW,QAAK,KACJZ,IAAAC,cAAA,YAAM,4BACND,IAAAC,cAACY,QAAK,CACJT,UAAU,OACVvC,KAAK,OACLiD,YAAY,2BACZC,SAAUlB,KAAKpC,qBAGnBuC,IAAAC,cAACW,QAAK,KACJZ,IAAAC,cAAA,YAAM,sBACND,IAAAC,cAACY,QAAK,CACJT,UAAU,OACVvC,KAAK,MACLiD,YAAY,qBACZC,SAAUlB,KAAKpC,qBAInBuC,IAAAC,cAACW,QAAK,KACJZ,IAAAC,cAAA,YAAM,uEACND,IAAAC,cAACY,QAAK,CACJT,UAAU,OACVvC,KAAK,WACLiD,YAAY,sEACZC,SAAUlB,KAAKpC,qBAGnBuC,IAAAC,cAACW,QAAK,KACJZ,IAAAC,cAAA,YAAM,kCACND,IAAAC,cAACiB,WAAQ,CACPd,UAAU,OACVvC,KAAK,iBACLiD,YAAY,iCACZC,SAAUlB,KAAKpC,qBAInBuC,IAAAC,cAACW,QAAK,KACJZ,IAAAC,cAAA,YAAM,8CACND,IAAAC,cAACY,QAAK,CACJT,UAAU,OACVvC,KAAK,QACLiD,YAAY,6CACZC,SAAUlB,KAAKpC,qBAMnBuC,IAAAC,cAACW,QAAK,KACJZ,IAAAC,cAACY,QAAK,CAACI,KAAK,WACVpD,KAAK,kBACLkD,SAAUlB,KAAKpC,oBAEjBuC,IAAAC,cAAA,QAAMG,UAAU,QAAO,uGAKzBJ,IAAAC,cAACW,QAAK,KACJZ,IAAAC,cAAA,MAAIG,UAAU,SAEdJ,IAAAC,cAAA,YAAM,gGACND,IAAAC,cAACY,QAAK,CACJT,UAAU,OACVvC,KAAK,eACLiD,YAAY,+FACZC,SAAUlB,KAAKpC,sBAKrBuC,IAAAC,cAAA,MAAIG,UAAU,SACdJ,IAAAC,cAAA,KAAGS,MAAO,CAACC,MAAQ,QAASnD,GAG5BwC,IAAAC,cAACkB,SAAM,CACLf,UAAU,OACVgB,OAAK,EACLC,GAAIC,IACJnB,GAAG,IACHoB,QAAS1B,KAAKzB,cACf,sEAGD4B,IAAAC,cAACqB,IAAI,CACHlB,UAAU,2EACVD,GAAG,KACJ,iNAEM,6BAQxB3E,EA1WS,CAASgG,cAAfhG,EACGiG,YAAcC,IA4WRlG,a,gCC5Xf,sCAYemG,EAZF,CACTC,IAAK,CACHC,aAAc,kD,gCCFL,SAAS7D,EAAgB8D,EAAKlC,EAAK9B,GAYhD,OAXI8B,KAAOkC,EACTC,OAAOC,eAAeF,EAAKlC,EAAK,CAC9B9B,MAAOA,EACPmE,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZL,EAAIlC,GAAO9B,EAGNgE,EAZT,mC,gCCAO,SAAS9C,EAASoD,GACrB,GAAKA,EAAL,CACA,IACMC,EADYD,EAAME,MAAM,KAAK,GACVC,QAAQ,IAAK,KAAKA,QAAQ,IAAK,KACxD,OAAOC,KAAKC,MAAMC,OAAOC,KAAKN,KAJlC,oEAOS,IAAMhD,EAAiB,SAACD,GACzBA,EAAMP,SACRN,QAAQC,IAAIY,EAAMP,SAASE,MAClBK,EAAMwD,QACfrE,QAAQC,IAAIY,EAAMwD,SAElBrE,QAAQC,IAAIY,EAAMI,W,gCCbxB,+DAIad,EAAW,CACpBmE,aAaJ,SAAsBpG,EAAUC,GAC5B,OAAOoG,EAASC,KAAK,qBAAsB,CAAEtG,WAAUC,YAAY,CAC/DsG,QAAS,CAAE,eAAgB,uBAd/BrE,OAkBJ,SAAgBF,GACZ,OAAOqE,EAASC,KAAK,eAAgBtE,EAAM,CACvCuE,QAAS,CAAE,eAAgB,uBAnB/BC,cAuBJ,WACI,OAAOH,EAASI,IAAI,0BAvBpBC,eA0BJ,WACI,OAAOL,EAASI,IAAI,2BA1BpBE,SA6BJ,SAAkB3E,EAAMhC,GACpB,IAAMmF,EAAMnF,EAAQ,cAAAF,OAAiBE,GAAa,aAClD,OAAOqG,EAASI,IAAItB,EAAK,CACrBoB,QAAS,CAAE,cAAiBK,EAAW5E,OA/B3C6E,WAmCJ,SAAoB7E,EAAMhC,GACtB,OAAOqG,EAASS,OAAO,cAADhH,OAAeE,GAAY,CAC7CuG,QAAS,CAAE,cAAiBK,EAAW5E,OApC3C+E,UA+CJ,SAAmB/E,EAAMgF,GACrB,IAAM7B,EAAM6B,EAAI,oBAAAlH,OAAuBkH,GAAS,cAChD,OAAOX,EAASI,IAAItB,EAAK,CACrBoB,QAAS,CAAE,cAAiBK,EAAW5E,OAjD3CiF,YAqDJ,SAAqBjF,EAAMkF,GACvB,OAAOb,EAASS,OAAO,eAADhH,OAAgBoH,GAAW,CAC7CX,QAAS,CAAE,cAAiBK,EAAW5E,OAtD3CmF,YA0DJ,SAAqBnF,EAAMoF,GACvB,OAAOf,EAASC,KAAK,cAAec,EAAO,CACvCb,QAAS,CACL,eAAgB,mBAChB,cAAiBK,EAAW5E,OA7DpCqF,UAkEJ,SAAmBrF,GACf,OAAOqE,EAASI,IAAI,gBAAiB,CACjCF,QAAS,CAAE,cAAiBK,EAAW5E,OAnE3CsF,SAmCJ,SAAkBtF,GAEd,OADAF,QAAQC,IAAIC,EAAKK,aACVgE,EAASC,KAAK,uBAAwB,CAEzCC,QAAS,CAAE,eAAgB,mBAAoB,cAAiBK,EAAW5E,QAkCnF,IAAMqE,EAAWkB,IAAMC,OAAO,CAC1BC,QAASvC,IAAOC,IAAIC,eAmBxB,SAASwB,EAAW5E,GAChB,MAAM,UAANlC,OAAiBkC,EAAKK,aAjB1BgE,EAASqB,aAAavB,QAAQwB,KAAI,SAAUzC,GAExC,GAAIA,EAAOqB,QAAQqB,cAAe,CAC9B,IAAMjC,EAAQT,EAAOqB,QAAQqB,cAAc/B,MAAM,KAAK,GAChDvD,EAAOC,YAASoD,GAClBkC,KAAKC,MAAmB,IAAXxF,EAAKyF,MAClB9B,OAAO+B,SAASC,KAAO,UAG/B,OAAO/C,KACR,SAAUvC,GACT,OAAOuF,QAAQC,OAAOxF,O,mBCvG1ByF,EAAOC,QAAU,IAA0B","file":"static/js/21.ce0b754d.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { NavLink, Redirect } from 'react-router-dom';\nimport AuthContext from '../components/context/AuthContext'\nimport { orderApi } from '../components/misc/OrderApi'\nimport { parseJwt, handleLogError } from '../components/misc/Helpers'\nimport { Button, Label, Input, Textarea, HelperText } from '@windmill/react-ui';\nimport Logo from '../assets/img/logo-white-frame.png'\nimport \"../assets/css/input-fields-container.css\"\nimport { Link } from 'react-router-dom'\nimport { config } from '../Constants';\n\n\n\n\n\nclass SignUp extends Component {\n  static contextType = AuthContext;\n  \n\n  state = {\n    username: '',\n    password: '',\n    email: '',\n    companyAddress: '',\n    communicationName: '',\n    phone: '',\n    companyName: '',\n    bulstat: '',\n    city: '',\n    isDdsRegistered: false,\n    mol: '',\n    postCode: null,\n    orderAddressList: [],\n    isLoggedIn: false,\n    isError: false,\n    errorMessage: ''\n  };\n\n  componentDidMount() {\n    const Auth = this.context;\n    const isLoggedIn = Auth.userIsAuthenticated();\n    this.setState({ isLoggedIn });\n  }\n\n  handleInputChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n   \n  }\n\nvalidatePasswords = () => {\n  const { password, 'confirm-password': confirmPassword } = this.state;\n  if (password !== confirmPassword) {\n    this.setState({\n      isError: true,\n      passwordErrorMessage: 'Паролите не съвпадат!',\n    });\n  } else {\n    this.setState({\n      isError: false,\n      passwordErrorMessage: '',\n    });\n  }\n};\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n\n    \n    const  {\n      username,\n      password,\n      email,\n      companyAddress,\n      communicationName,\n      phone,\n      companyName,\n      bulstat,\n      city,\n      isDdsRegistered,\n      mol,\n      postCode,\n    } = this.state;\n    console.log(username,\n      password,\n\n      email,\n      companyAddress,\n      communicationName,\n      phone,\n      companyName,\n      bulstat,\n      city,\n      isDdsRegistered,\n      mol,\n      postCode)\n    if (\n      !(\n        username &&\n        password &&\n        email &&\n        companyAddress &&\n        communicationName &&\n        phone &&\n        companyName &&\n        bulstat &&\n        city &&\n        mol &&\n        postCode\n      )\n    ) {\n      this.setState({\n        isError: true,\n        errorMessage: 'Моля попълнете всички задължителни полета !',\n      });\n      return;\n    }\n    if (password !== this.state['confirm-password']) {\n      this.setState({\n        isError: true,\n        passwordErrorMessage: 'Паролите не съвпадат!',\n      });\n      return;\n    }\n    const user = {\n      username,\n      password,\n      email,\n      companyAddress,\n      communicationName,\n      phone,\n      companyName,\n      bulstat,\n      city,\n      mol,\n      postCode,\n    };\n    console.log(user)\n\n    orderApi.signup(user)\n      .then(response => {\n        const { accessToken } = response.data\n        const data = parseJwt(accessToken)\n        const user = { data, accessToken }\n\n        const Auth = this.context\n        Auth.userLogin(user)\n\n        this.setState({\n          username: '',\n          password: '',\n          isLoggedIn: true,\n          isError: false,\n          errorMessage: ''\n        })\n      })\n      .catch(error => {\n        handleLogError(error)\n        if (error.response && error.response.data) {\n          const errorData = error.response.data\n          let errorMessage = 'Invalid fields'\n          if (errorData.status === 409) {\n            errorMessage = errorData.message\n          } else if (errorData.status === 400) {\n            errorMessage = errorData.errors[0].defaultMessage\n          }\n          this.setState({\n            isError: true,\n            errorMessage\n          })\n        }\n      })\n  }\n\n  render() {\n    const { isLoggedIn, isError, errorMessage,passwordErrorMessage } = this.state\n\n    if (isLoggedIn) {\n      return <Redirect to='/app' />\n    } else {\n      return (\n        <div className=\"flex items-center p-6 bg-gray-50 dark:bg-gray-900\">\n          <div className=\"flex-1 h-full max-w-6xl mx-auto bg-white rounded-lg shadow-xl dark:bg-gray-800\">\n            <div className=\"flex flex-col md:flex-row\">\n              <div className=\"h-1 w-auto md:h-auto md:w-1/2 ml-4\">\n                <img\n                  aria-hidden=\"true\"\n                  className=\"object-contain h-full  w-full dark:hidden\"\n                  src={Logo}\n                  alt=\"Logo\"\n                />\n              </div>\n              <main className=\"flex items-center justify-center p-6 sm:p-12 md:w-1/2\">\n                <div className=\"h-full w-full\">\n\n                  <HelperText >Полетата отбелязани със <span style={{ color: 'red' }}>*</span> са задължителни </HelperText>\n\n                  <hr className=\"my-8\" />\n\n                  <div className='input-fields-container'>\n                    <div className=\"grid grid-cols-1 gap-1\">\n                      <h1 className=\"mb-4 text-xl font-semibold text-gray-700 dark:text-gray-200\">\n                        Потребителски данни\n                      </h1>\n                      <Label>\n                        <span>Име</span>\n                        <Input\n                          className=\"mt-1\"\n                          name=\"communicationName\"\n                          placeholder=\"Ще бъде използвано за персонална комуникация\"\n                          onChange={this.handleInputChange}\n                        />\n                      </Label>\n                      <Label>\n                        <span>Потребителско име</span>\n                        <HelperText valid={false}> *</HelperText>\n\n                        <Input\n                          className=\"mt-1\"\n                          name=\"username\"\n                          placeholder=\"Потребителско име\"\n                          onChange={this.handleInputChange}\n                        />\n                      </Label>\n                      <Label>\n                        <span>Email</span>\n                        <Input\n                          className=\"mt-1\"\n                          type=\"email\"\n                          placeholder=\"example@email.com\"\n                          name=\"email\"\n                          onChange={this.handleInputChange}\n                        />\n                      </Label>\n                      <Label>\n                        <span>Вашата парола</span>\n                        <Input\n                          className=\"mt-1\"\n                          placeholder=\"***************\"\n                          type=\"password\"\n                          name=\"password\"\n                          onChange={this.handleInputChange}\n                        />\n                      </Label>\n                      <Label>\n                        <span>Потвърдете паролата</span>\n                        <Input\n                          className=\"mt-1\"\n                          placeholder=\"***************\"\n                          type=\"password\"\n                          name=\"confirm-password\"\n                          onChange={this.handleInputChange}\n                        />\n                      </Label>\n                      {passwordErrorMessage}\n                      <hr className=\"my-8\" />\n                      <h1 className=\"mb-4 text-xl font-semibold text-gray-700 dark:text-gray-200\">\n                        Фирмени/Лични данни\n                      </h1>\n                      <Label>\n                        <span>Фирма/Име</span>\n                        <Input\n                          className=\"mt-1\"\n                          name=\"companyName\"\n                          placeholder=\"\"\n                          onChange={this.handleInputChange}\n                        />\n                      </Label>\n                      <Label>\n                        <span>Булстат/ЕГН</span>\n                        <Input\n                          className=\"mt-1\"\n                          name=\"bulstat\"\n                          placeholder=\"Булстат/ЕГН\"\n                          onChange={this.handleInputChange}\n                        />\n                      </Label>\n\n                      <Label>\n                        <span>Град</span>\n                        <Input\n                          className=\"mt-1\"\n                          name=\"city\"\n                          placeholder=\"Град\"\n                          onChange={this.handleInputChange}\n                        />\n                      </Label>\n                      <Label>\n                        <span>МОЛ</span>\n                        <Input\n                          className=\"mt-1\"\n                          name=\"mol\"\n                          placeholder=\"МОЛ\"\n                          onChange={this.handleInputChange}\n                        />\n                      </Label>\n\n                      <Label>\n                        <span>Пощенски код</span>\n                        <Input\n                          className=\"mt-1\"\n                          name=\"postCode\"\n                          placeholder=\"Пощенски код\"\n                          onChange={this.handleInputChange}\n                        />\n                      </Label>\n                      <Label>\n                        <span>Адрес</span>\n                        <Textarea\n                          className=\"mt-1\"\n                          name=\"companyAddress\"\n                          placeholder=\"Адрес\"\n                          onChange={this.handleInputChange}\n                        />\n                      </Label>\n\n                      <Label>\n                        <span>Телефон</span>\n                        <Input\n                          className=\"mt-1\"\n                          name=\"phone\"\n                          placeholder=\"Телефон\"\n                          onChange={this.handleInputChange}\n                        />\n                      </Label>\n\n\n\n                      <Label>\n                        <Input type=\"checkbox\"\n                          name=\"isDdsRegistered\"\n                          onChange={this.handleInputChange}\n                        />\n                        <span className=\"ml-2\">Регистрация по ДДС</span>\n\n                      </Label>\n\n\n                      <Label>\n                        <hr className=\"my-8\" />\n\n                        <span>Адрес за доставка</span>\n                        <Input\n                          className=\"mt-1\"\n                          name=\"orderAddress\"\n                          placeholder=\"Адрес за доставка\"\n                          onChange={this.handleInputChange}\n                        />\n                      </Label>\n                      {/* Add other fields here */}\n                    </div>\n                    <hr className=\"my-8\" />\n                    <p style={{color : 'red'}}>{errorMessage}</p>\n\n\n                    <Button\n                      className=\"mt-4\"\n                      block\n                      as={Link}  // Use the Link component\n                      to=\"/\"\n                      onClick={this.handleSubmit}\n                    >\n                      Регистрация\n                    </Button>\n                    <Link\n                      className=\"text-sm font-medium text-purple-600 dark:text-purple-400 hover:underline\"\n                      to=\"/\"\n                    >\n                      Имате потребител? Влезнете в профила си!\n                    </Link>                </div>\n                </div>\n              </main>\n            </div>\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\nexport default SignUp;\n","const prod = {\n    url: {\n      API_BASE_URL: 'https://orders-pi314-396621.uc.r.appspot.com' ,\n    }\n  }\n  \n  const dev = {\n    url: {\n      API_BASE_URL: 'http://localhost:8080'\n    }\n  }\n  \n  export const config = process.env.NODE_ENV === 'development' ? dev : prod","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export function parseJwt(token) {\n    if (!token) { return }\n    const base64Url = token.split('.')[1]\n    const base64 = base64Url.replace('-', '+').replace('_', '/')\n    return JSON.parse(window.atob(base64))\n  }\n  \n  export const handleLogError = (error) => {\n    if (error.response) {\n      console.log(error.response.data);\n    } else if (error.request) {\n      console.log(error.request);\n    } else {\n      console.log(error.message);\n    }\n  }","import axios from 'axios'\nimport { config } from '../../Constants'\nimport { parseJwt } from './Helpers'\n\nexport const orderApi = {\n    authenticate,\n    signup,\n    numberOfUsers,\n    numberOfOrders,\n    getUsers,\n    deleteUser,\n    getOrders,\n    deleteOrder,\n    createOrder,\n    getUserMe,\n    newOrder\n}\n\nfunction authenticate(username, password) {\n    return instance.post('/auth/authenticate', { username, password }, {\n        headers: { 'Content-type': 'application/json' }\n    })\n}\n\nfunction signup(user) {\n    return instance.post('/auth/signup', user, {\n        headers: { 'Content-type': 'application/json' }\n    })\n}\n\nfunction numberOfUsers() {\n    return instance.get('/public/numberOfUsers')\n}\n\nfunction numberOfOrders() {\n    return instance.get('/public/numberOfOrders')\n}\n\nfunction getUsers(user, username) {\n    const url = username ? `/api/users/${username}` : '/api/users'\n    return instance.get(url, {\n        headers: { 'Authorization': bearerAuth(user) }\n    })\n}\n\nfunction deleteUser(user, username) {\n    return instance.delete(`/api/users/${username}`, {\n        headers: { 'Authorization': bearerAuth(user) }\n    })\n}\nfunction newOrder(user) {\n    console.log(user.accessToken)\n    return instance.post(`api/orders/new-order`, {\n\n        headers: { 'Content-type': 'application/json', 'Authorization': bearerAuth(user) }\n    })\n}\n\nfunction getOrders(user, text) {\n    const url = text ? `/api/orders?text=${text}` : '/api/orders'\n    return instance.get(url, {\n        headers: { 'Authorization': bearerAuth(user) }\n    })\n}\n\nfunction deleteOrder(user, orderId) {\n    return instance.delete(`/api/orders/${orderId}`, {\n        headers: { 'Authorization': bearerAuth(user) }\n    })\n}\n\nfunction createOrder(user, order) {\n    return instance.post('/api/orders', order, {\n        headers: {\n            'Content-type': 'application/json',\n            'Authorization': bearerAuth(user)\n        }\n    })\n}\n\nfunction getUserMe(user) {\n    return instance.get('/api/users/me', {\n        headers: { 'Authorization': bearerAuth(user) }\n    })\n}\n\n// -- Axios\n\nconst instance = axios.create({\n    baseURL: config.url.API_BASE_URL\n})\n\ninstance.interceptors.request.use(function (config) {\n    // If token is expired, redirect user to login\n    if (config.headers.Authorization) {\n        const token = config.headers.Authorization.split(' ')[1]\n        const data = parseJwt(token)\n        if (Date.now() > data.exp * 1000) {\n            window.location.href = \"/login\"\n        }\n    }\n    return config\n}, function (error) {\n    return Promise.reject(error)\n})\n\n// -- Helper functions\n\nfunction bearerAuth(user) {\n    return `Bearer ${user.accessToken}`\n}","module.exports = __webpack_public_path__ + \"static/media/logo-white-frame.462e304b.png\";"],"sourceRoot":""}