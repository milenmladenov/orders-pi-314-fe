{"version":3,"sources":["Constants.js","components/misc/Helpers.js","components/misc/OrderApi.js","pages/CreateAccount.js"],"names":["config","url","API_BASE_URL","parseJwt","token","base64","split","replace","JSON","parse","window","atob","handleLogError","error","response","console","log","data","request","message","orderApi","authenticate","username","password","instance","post","headers","signup","user","numberOfUsers","get","numberOfOrders","getUsers","concat","bearerAuth","deleteUser","delete","getOrders","text","deleteOrder","orderId","createOrder","order","getUserMe","axios","create","baseURL","accessToken","interceptors","use","Authorization","Date","now","exp","location","href","Promise","reject","CreateAccount","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","state","name","email","isLoggedIn","isError","errorMessage","handleInputChange","e","_ref","value","setState","_defineProperty","handleSubmit","preventDefault","_this$state","then","context","userLogin","catch","errorData","status","errors","defaultMessage","_createClass","key","this","userIsAuthenticated","_this$state2","React","createElement","Redirect","to","Grid","textAlign","Column","style","maxWidth","Form","size","onSubmit","Segment","Input","fluid","autoFocus","icon","iconPosition","placeholder","onChange","type","Button","color","Message","as","NavLink","negative","Component","contextType","AuthContext"],"mappings":"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","file":"static/js/23.7efc7882.chunk.js","sourcesContent":["const prod = {\n    url: {\n      API_BASE_URL: 'https://myapp.herokuapp.com',\n    }\n  }\n  \n  const dev = {\n    url: {\n      API_BASE_URL: 'http://localhost:8080'\n    }\n  }\n  \n  export const config = process.env.NODE_ENV === 'development' ? dev : prod","export function parseJwt(token) {\n    if (!token) { return }\n    const base64Url = token.split('.')[1]\n    const base64 = base64Url.replace('-', '+').replace('_', '/')\n    return JSON.parse(window.atob(base64))\n  }\n  \n  export const handleLogError = (error) => {\n    if (error.response) {\n      console.log(error.response.data);\n    } else if (error.request) {\n      console.log(error.request);\n    } else {\n      console.log(error.message);\n    }\n  }","import axios from 'axios'\nimport { config } from '../../Constants'\nimport { parseJwt } from './Helpers'\n\nexport const orderApi = {\n  authenticate,\n  signup,\n  numberOfUsers,\n  numberOfOrders,\n  getUsers,\n  deleteUser,\n  getOrders,\n  deleteOrder,\n  createOrder,\n  getUserMe\n}\n\nfunction authenticate(username, password) {\n  return instance.post('/auth/authenticate', { username, password }, {\n    headers: { 'Content-type': 'application/json' }\n  })\n}\n\nfunction signup(user) {\n  return instance.post('/auth/signup', user, {\n    headers: { 'Content-type': 'application/json' }\n  })\n}\n\nfunction numberOfUsers() {\n  return instance.get('/public/numberOfUsers')\n}\n\nfunction numberOfOrders() {\n  return instance.get('/public/numberOfOrders')\n}\n\nfunction getUsers(user, username) {\n  const url = username ? `/api/users/${username}` : '/api/users'\n  return instance.get(url, {\n    headers: { 'Authorization': bearerAuth(user) }\n  })\n}\n\nfunction deleteUser(user, username) {\n  return instance.delete(`/api/users/${username}`, {\n    headers: { 'Authorization': bearerAuth(user) }\n  })\n}\n\nfunction getOrders(user, text) {\n  const url = text ? `/api/orders?text=${text}` : '/api/orders'\n  return instance.get(url, {\n    headers: { 'Authorization': bearerAuth(user) }\n  })\n}\n\nfunction deleteOrder(user, orderId) {\n  return instance.delete(`/api/orders/${orderId}`, {\n    headers: { 'Authorization': bearerAuth(user) }\n  })\n}\n\nfunction createOrder(user, order) {\n  return instance.post('/api/orders', order, {\n    headers: {\n      'Content-type': 'application/json',\n      'Authorization': bearerAuth(user)\n    }\n  })\n}\n\nfunction getUserMe(user) {\n  return instance.get('/api/users/me', {\n    headers: { 'Authorization': bearerAuth(user) }\n  })\n}\n\n// -- Axios\n\nconst instance = axios.create({\n  baseURL: config.url.API_BASE_URL\n})\n\ninstance.interceptors.request.use(function (config) {\n  // If token is expired, redirect user to login\n  if (config.headers.Authorization) {\n    const token = config.headers.Authorization.split(' ')[1]\n    const data = parseJwt(token)\n    if (Date.now() > data.exp * 1000) {\n      window.location.href = \"/login\"\n    }\n  }\n  return config\n}, function (error) {\n  return Promise.reject(error)\n})\n\n// -- Helper functions\n\nfunction bearerAuth(user) {\n  return `Bearer ${user.accessToken}`\n}","import React, { Component } from 'react'\nimport { NavLink, Redirect } from 'react-router-dom'; \nimport { Button, Form, Grid, Segment, Message } from 'semantic-ui-react'\nimport AuthContext from '../components/context/AuthContext'\nimport { orderApi } from '../components/misc/OrderApi'\nimport { parseJwt, handleLogError } from '../components/misc/Helpers'\nclass CreateAccount extends Component {\n  static contextType = AuthContext\n\n  state = {\n    username: '',\n    password: '',\n    name: '',\n    email: '',\n    isLoggedIn: false,\n    isError: false,\n    errorMessage: ''\n  }\n\n  componentDidMount() {\n    const Auth = this.context\n    const isLoggedIn = Auth.userIsAuthenticated()\n    this.setState({ isLoggedIn })\n  }\n\n  handleInputChange = (e, {name, value}) => {\n    this.setState({ [name]: value })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n\n    const { username, password, name, email } = this.state\n    if (!(username && password && name && email)) {\n      this.setState({\n        isError: true,\n        errorMessage: 'Please, inform all fields!'\n      })\n      return\n    }\n\n    const user = { username, password, name, email }\n    orderApi.signup(user)\n      .then(response => {\n        const { accessToken } = response.data\n        const data = parseJwt(accessToken)\n        const user = { data, accessToken }\n\n        const Auth = this.context\n        Auth.userLogin(user)\n\n        this.setState({\n          username: '',\n          password: '',\n          isLoggedIn: true,\n          isError: false,\n          errorMessage: ''\n        })\n      })\n      .catch(error => {\n        handleLogError(error)\n        if (error.response && error.response.data) {\n          const errorData = error.response.data\n          let errorMessage = 'Invalid fields'\n          if (errorData.status === 409) {\n            errorMessage = errorData.message\n          } else if (errorData.status === 400) {\n            errorMessage = errorData.errors[0].defaultMessage\n          }\n          this.setState({\n            isError: true,\n            errorMessage\n          })\n        }\n      })\n  }\n\n  render() {\n    const { isLoggedIn, isError, errorMessage } = this.state\n\n    if (isLoggedIn) {\n      return <Redirect to='/app' />\n    } else {\n      return (\n        <Grid textAlign='center'>\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Form size='large' onSubmit={this.handleSubmit}>\n              <Segment>\n                <Form.Input\n                  fluid\n                  autoFocus\n                  name='username'\n                  icon='user'\n                  iconPosition='left'\n                  placeholder='Username'\n                  onChange={this.handleInputChange}\n                />\n                <Form.Input\n                  fluid\n                  name='password'\n                  icon='lock'\n                  iconPosition='left'\n                  placeholder='Password'\n                  type='password'\n                  onChange={this.handleInputChange}\n                />\n                <Form.Input\n                  fluid\n                  name='name'\n                  icon='address card'\n                  iconPosition='left'\n                  placeholder='Name'\n                  onChange={this.handleInputChange}\n                />\n                <Form.Input\n                  fluid\n                  name='email'\n                  icon='at'\n                  iconPosition='left'\n                  placeholder='Email'\n                  onChange={this.handleInputChange}\n                />\n                <Button color='violet' fluid size='large'>Signup</Button>\n              </Segment>\n            </Form>\n            <Message>{`Already have an account? `}\n              <a href='/login' color='violet' as={NavLink} to=\"/login\">Login</a>\n            </Message>\n            {isError && <Message negative>{errorMessage}</Message>}\n          </Grid.Column>\n        </Grid>\n      )\n    }\n  }\n}\n\nexport default CreateAccount"],"sourceRoot":""}