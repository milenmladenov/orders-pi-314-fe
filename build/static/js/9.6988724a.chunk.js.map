{"version":3,"sources":["components/Cards/InfoCard.js","components/Chart/ChartCard.js","components/Chart/ChartLegend.js","components/RoundIcon.js","utils/demo/chartsData.js","pages/Dashboard.js","components/Typography/PageTitle.js","Constants.js","components/Icon.js","components/OrdersTable.js"],"names":["InfoCard","_ref","title","value","icon","children","React","createElement","Card","CardBody","className","Chart","ChartLegend","legends","map","legend","key","concat","color","RoundIcon","Icon","_ref$iconColorClass","iconColorClass","_ref$bgColorClass","bgColorClass","cls","classNames","doughnutLegends","lineLegends","doughnutOptions","data","datasets","backgroundColor","label","labels","options","responsive","cutoutPercentage","display","lineOptions","borderColor","fill","tooltips","mode","intersect","hover","scales","x","scaleLabel","labelString","y","Dashboard","loggedUser","JSON","parse","localStorage","getItem","Fragment","PageTitle","role","PeopleIcon","MoneyIcon","CartIcon","ChartCard","Line","Doughnut","OrdersTable","resultsPerPage","config","url","API_BASE_URL","props","_objectWithoutProperties","_excluded","filter","_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","_useState4","setData","_useState5","_useState6","totalResults","setTotalResults","token","_useState7","_useState8","selectedStatus","setSelectedStatus","_useState9","_useState10","isModalOpen","setIsModalOpen","_useState11","_useState12","selectedOrderId","setSelectedOrderId","apiBaseUrl","_useState13","_useState14","isEditing","setIsEditing","getStatusColor","status","useEffect","editingState","forEach","order","id","fetchData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_config","response","ordersData","filteredData","flattenedGroups","wrap","_context","prev","next","headers","Authorization","axios","get","sent","flatMap","length","slice","t0","console","error","stop","apply","arguments","closeModal","formatDateWithoutDashes","dateString","Date","toLocaleDateString","year","month","day","replace","exportToExcel","_ref3","_callee2","workbook","worksheet","headerRow","buffer","blob","_context2","ExcelJS","Workbook","addWorksheet","addRow","groups","group","rowData","createdAt","user","companyName","type","city","detailType","model","name","height","width","number","handle","price","bothSidesLaminated","totalPrice","folio","profil","newRow","pattern","fgColor","argb","xlsx","writeBuffer","Blob","saveAs","Button","layout","onClick","TableContainer","Table","TableHeader","TableCell","TableBody","index","TableRow","Modal","isOpen","onClose","ModalHeader","EditIcon","ModalBody","ModalFooter","log","find","post","then","window","location","reload","catch","handleConfirmChange","prevState","_objectSpread","_defineProperty","style","cursor","Select","onChange","event","newStatus","target","handleChange","onBlur","Link","to","TableFooter","Pagination","p"],"mappings":"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","file":"static/js/9.6988724a.chunk.js","sourcesContent":["import React from 'react'\nimport { Card, CardBody } from '@windmill/react-ui'\n\nfunction InfoCard({ title, value, children: icon }) {\n  return (\n    <Card>\n      <CardBody className=\"flex items-center\">\n        {icon}\n        <div>\n          <p className=\"mb-2 text-sm font-medium text-gray-600 dark:text-gray-400\">{title}</p>\n          <p className=\"text-lg font-semibold text-gray-700 dark:text-gray-200\">{value}</p>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default InfoCard\n","import React from 'react'\n\nfunction Chart({ children, title }) {\n  return (\n    <div className=\"min-w-0 p-4 bg-white rounded-lg shadow-xs dark:bg-gray-800\">\n      <p className=\"mb-4 font-semibold text-gray-800 dark:text-gray-300\">{title}</p>\n      {children}\n    </div>\n  )\n}\n\nexport default Chart\n","import React from 'react'\n\nfunction ChartLegend({ legends }) {\n  return (\n    <div className=\"flex justify-center mt-4 space-x-3 text-sm text-gray-600 dark:text-gray-400\">\n      {legends.map((legend) => (\n        <div className=\"flex items-center\" key={legend.title}>\n          <span className={`inline-block w-3 h-3 mr-1 ${legend.color} rounded-full`}></span>\n          <span>{legend.title}</span>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default ChartLegend\n","import React from 'react'\nimport classNames from 'classnames'\n\nfunction RoundIcon({\n  icon: Icon,\n  iconColorClass = 'text-purple-600 dark:text-purple-100',\n  bgColorClass = 'bg-purple-100 dark:bg-purple-600',\n  className,\n}) {\n  const baseStyle = 'p-3 rounded-full'\n\n  const cls = classNames(baseStyle, iconColorClass, bgColorClass, className)\n  return (\n    <div className={cls}>\n      <Icon className=\"w-5 h-5\" />\n    </div>\n  )\n}\n\nexport default RoundIcon\n","export const doughnutLegends = [\n  { title: \"Мембранна Вратичка\", color: \"bg-blue-500\" },\n  { title: \"Двустранно Грундиран МДФ\", color: \"bg-teal-600\" },\n  { title: \"Фурнирован МДФ\", color: \"bg-purple-600\" },\n];\n\nexport const lineLegends = [\n  { title: \"От Админ\", color: \"bg-teal-600\" },\n  { title: \"От Клиент\", color: \"bg-purple-600\" },\n];\n\nexport const barLegends = [\n  { title: \"Shoes\", color: \"bg-teal-600\" },\n  { title: \"Bags\", color: \"bg-purple-600\" },\n];\nexport const realTimeUsersBarLegends = [\n  { title: \"Active Users\", color: \"bg-teal-600\" },\n];\n\nexport const doughnutOptions = {\n  data: {\n    datasets: [\n      {\n        data: [33, 33, 33],\n        /**\n         * These colors come from Tailwind CSS palette\n         * https://tailwindcss.com/docs/customizing-colors/#default-color-palette\n         */\n        backgroundColor: [\"#0694a2\", \"#1c64f2\", \"#7e3af2\"],\n        label: \"Dataset 1\",\n      },\n    ],\n    labels: [\"Мембранна Вратичка\", \"Двустранно Грундиран МДФ\", \"Фурнирован МДФ\"],\n  },\n  options: {\n    responsive: true,\n    cutoutPercentage: 80,\n  },\n  legend: {\n    display: false,\n  },\n};\n\nexport const lineOptions = {\n  data: {\n    labels: [\"Януари\", \"Фебруари\", \"Март\", \"Април\", \"Май\", \"Юни\", \"Юли\"],\n    datasets: [\n      {\n        label: \"от Админ\",\n        /**\n         * These colors come from Tailwind CSS palette\n         * https://tailwindcss.com/docs/customizing-colors/#default-color-palette\n         */\n        backgroundColor: \"#0694a2\",\n        borderColor: \"#0694a2\",\n        data: [43, 48, 40, 54, 67, 73, 70],\n        fill: false,\n      },\n      {\n        label: \"От Клиент\",\n        fill: false,\n        /**\n         * These colors come from Tailwind CSS palette\n         * https://tailwindcss.com/docs/customizing-colors/#default-color-palette\n         */\n        backgroundColor: \"#7e3af2\",\n        borderColor: \"#7e3af2\",\n        data: [24, 50, 64, 74, 52, 51, 65],\n      },\n    ],\n  },\n  options: {\n    responsive: true,\n    tooltips: {\n      mode: \"index\",\n      intersect: false,\n    },\n    hover: {\n      mode: \"nearest\",\n      intersect: true,\n    },\n    scales: {\n      x: {\n        display: true,\n        scaleLabel: {\n          display: true,\n          labelString: \"Month\",\n        },\n      },\n      y: {\n        display: true,\n        scaleLabel: {\n          display: true,\n          labelString: \"Value\",\n        },\n      },\n    },\n  },\n  legend: {\n    display: false,\n  },\n};\n\nexport const barOptions = {\n  data: {\n    labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n    datasets: [\n      {\n        label: \"Shoes\",\n        backgroundColor: \"#0694a2\",\n        // borderColor: window.chartColors.red,\n        borderWidth: 1,\n        data: [-3, 14, 52, 74, 33, 90, 70],\n      },\n      {\n        label: \"Bags\",\n        backgroundColor: \"#7e3af2\",\n        // borderColor: window.chartColors.blue,\n        borderWidth: 1,\n        data: [66, 33, 43, 12, 54, 62, 84],\n      },\n    ],\n  },\n  options: {\n    responsive: true,\n  },\n  legend: {\n    display: false,\n  },\n};\n\nexport const realTimeUsersBarOptions = {\n  data: {\n    labels: [\n      \"6.00\",\n      \"6.10\",\n      \"6.20\",\n      \"6.30\",\n      \"6.40\",\n      \"6.50\",\n      \"7.00\",\n      \"7.10\",\n      \"7.20\",\n      \"7.30\",\n      \"7.40\",\n      \"7.50\",\n      \"Now\",\n    ],\n    datasets: [\n      {\n        label: \"Active Users\",\n        backgroundColor: \"#0694a2\",\n        // borderColor: window.chartColors.red,\n        borderWidth: 1,\n        data: [2, 14, 52, 74, 33, 90, 70, 34, 56, 62, 11, 23, 55],\n      },\n    ],\n  },\n  options: {\n    responsive: true,\n  },\n  legend: {\n    display: false,\n  },\n};\n","import React from \"react\";\n\nimport InfoCard from \"../components/Cards/InfoCard\";\nimport ChartCard from \"../components/Chart/ChartCard\";\nimport { Doughnut, Line } from \"react-chartjs-2\";\nimport ChartLegend from \"../components/Chart/ChartLegend\";\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport { ChatIcon, CartIcon, MoneyIcon, PeopleIcon } from \"../icons\";\nimport RoundIcon from \"../components/RoundIcon\";\n\nimport {\n  doughnutOptions,\n  lineOptions,\n  doughnutLegends,\n  lineLegends,\n} from \"../utils/demo/chartsData\";\nimport OrdersTable from \"../components/OrdersTable\";\n\n\nfunction Dashboard() {\n  const loggedUser = JSON.parse(localStorage.getItem(\"user\"))\n\n  return (\n    <>\n      <PageTitle>Контролен Панел</PageTitle>\n\n      {/* <CTA /> */}\n\n      {loggedUser.data.role === '[ADMIN]' && ( <>\n      <div className=\"grid gap-6 mb-8 md:grid-cols-2 xl:grid-cols-4\">\n        <InfoCard title=\"Брой клиенти\" value=\"765\">\n          <RoundIcon\n            icon={PeopleIcon}\n            iconColorClass=\"text-orange-500 dark:text-orange-100\"\n            bgColorClass=\"bg-orange-100 dark:bg-orange-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n\n        <InfoCard title=\"Общa печалба\" value=\"126,760.89 лв.\">\n          <RoundIcon\n            icon={MoneyIcon}\n            iconColorClass=\"text-green-500 dark:text-green-100\"\n            bgColorClass=\"bg-green-100 dark:bg-green-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n\n        <InfoCard title=\"Нови поръчки\" value=\"150\">\n          <RoundIcon\n            icon={CartIcon}\n            iconColorClass=\"text-blue-500 dark:text-blue-100\"\n            bgColorClass=\"bg-blue-100 dark:bg-blue-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n\n        <InfoCard title=\"Приходи за последните 30 дни\" value=\"12,345 лв.\">\n          <RoundIcon\n            icon={MoneyIcon}\n            iconColorClass=\"text-teal-500 dark:text-teal-100\"\n            bgColorClass=\"bg-teal-100 dark:bg-teal-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n      </div>\n\n      <div className=\"grid gap-6 mb-8 md:grid-cols-2\">\n        <ChartCard title=\"Създадени поръчки по тип потребител\">\n          <Line {...lineOptions} />\n          <ChartLegend legends={lineLegends} />\n        </ChartCard>\n\n        <ChartCard title=\"Използвани материали\">\n          <Doughnut {...doughnutOptions} />\n          <ChartLegend legends={doughnutLegends} />\n        </ChartCard>\n      </div>\n      </>\n      )}\n      <PageTitle>Поръчки</PageTitle>\n      <OrdersTable resultsPerPage={10} />\n    </>\n  );\n}\n\nexport default Dashboard;\n","import React from 'react'\n\nfunction PageTitle({ children }) {\n  return (\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\n  )\n}\n\nexport default PageTitle\n","const prod = {\n    url: {\n      API_BASE_URL: 'https://orders-pi314-396621.uc.r.appspot.com' ,\n    }\n  }\n  \n  const dev = {\n    url: {\n      API_BASE_URL: 'http://localhost:8080'\n    }\n  }\n  \n  export const config = process.env.NODE_ENV === 'development' ? dev : prod","import React from \"react\";\n\nconst Icon = ({ icon, ...props }) => {\n  const Icon = icon;\n  return <Icon {...props} />;\n};\n\nexport default Icon;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Pagination,\n  Button, Select, Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"@windmill/react-ui\";\nimport {\n  DropdownIcon,\n  EditIcon,\n\n} from \"../icons\";\nimport { Link } from 'react-router-dom'\nimport json2xls from 'json2xls'; // Import json2xls\nimport { saveAs } from \"file-saver\"; // Import saveAs function\nimport * as XLSX from 'xlsx';\nimport ExcelJS from 'exceljs';\nimport Icon from \"../components/Icon\";\nimport { config } from '../Constants';\n\n\n\n\n\n\n\n\nconst OrdersTable = ({ resultsPerPage, filter }) => {\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  const [totalResults, setTotalResults] = useState(0);\n  const token = localStorage.getItem('accessToken')\n  const loggedUser = JSON.parse(localStorage.getItem('user'))\n  const [selectedStatus, setSelectedStatus] = useState();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedOrderId, setSelectedOrderId] = useState(null); // Define selectedOrderId state\n  const apiBaseUrl = config.url.API_BASE_URL;\n  const [isEditing, setIsEditing] = useState([]);\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case \"WORKING_ON\":\n        return \"text-yellow-500\"; // Yellow color\n      case \"CREATED\":\n        return \"text-gray-500\";\n      case \"SEND\":\n        return \"text-blue-500\";\n      case \"DONE\":\n        return \"text-green-500\";\n        return \"\";\n    }\n  };\n  useEffect(() => {\n    const editingState = {};\n    data.forEach(order => {\n      editingState[order.id] = false;\n    });\n    setIsEditing(editingState);\n  }, [data]);\n  \n\n  const handleChange = (event, order) => {\n    const newStatus = event.target.value;\n    if (newStatus !== selectedStatus) {\n      setSelectedStatus(newStatus);\n      setSelectedOrderId(order.id);\n      setIsModalOpen(true);\n    }\n  };\n\n  const fetchData = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      };\n      const response = await axios.get(apiBaseUrl + \"/api/orders/all\", config);\n      const ordersData = response.data;\n\n      // Apply filters if necessary\n      let filteredData = ordersData;\n      if (filter === \"изпратена\") {\n        filteredData = ordersData.filter(order => order.status === \"SEND\");\n      } else if (filter === \"създадена\") {\n        filteredData = ordersData.filter(order => order.status === \"CREATED\");\n      } else if (filter === \"изпълнява се\") {\n        filteredData = ordersData.filter(order => order.status === \"WORKING_ON\");\n      } else if (filter === \"изпълнена\") {\n        filteredData = ordersData.filter(order => order.status === \"DONE\");\n      }\n\n      // Flatten the groups and update the totalResults and data state\n      const flattenedGroups = filteredData.flatMap(order => order);\n      setTotalResults(flattenedGroups.length);\n      setData(flattenedGroups.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const handleConfirmChange = () => {\n    const order = data.find(order => order.id === selectedOrderId); // Find the order using selectedOrderId\n    if (!order) {\n      console.error(\"Selected order not found\");\n      closeModal();\n      return;\n    }\n\n    // Make API call to change the order status using Axios\n    const url = `${apiBaseUrl}/api/orders/${order.id}/change-status/${selectedStatus}`;\n    axios\n      .post(url, null, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((response) => {\n        console.log(url);\n        window.location.reload()\n        // Handle response as needed\n      })\n      .catch((error) => {\n        // Handle error\n      });\n\n    closeModal();\n  };\n  function closeModal() {\n    setIsModalOpen(false);\n    // window.location.reload();\n  }\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n\n  const formatDateWithoutDashes = (dateString) => {\n    const date = new Date(dateString);\n    const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\n    return date.toLocaleDateString('en-US', options).replace(/\\//g, ''); // Remove slashes\n  };\n\n\n\n  const exportToExcel = async () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet('Справка');\n\n    const headerRow = [\n      \"ПОРЕДЕН НОМЕР\", \"Група\", \"ДАТА\", \"ПОРЪЧКА\", \"КЛИЕНТ\", \"ВИД\", \"ГРАД\",\n      \"ЕТИКЕТ\", \"МОДЕЛ\", \"ВИСОЧИНА\", \"ШИРИНА\", \"БРОЙ КОЛИЧЕСТВО\",\n      \"МЕРНА ЕДИНИЦА\", \"ДРЪЖКА\", \"ЕДИНИЧНА ЦЕНА\", \"ЦЕНА НА ДРЪЖКА\",\n      \"ДВУСТРАННО ФОЛИРАНЕ\", \"СТОЙНОСТ\", \"ФОЛИО\", \"ПРОФИЛ\",\n    ];\n\n    worksheet.addRow(headerRow);\n\n    data.forEach(order => {\n\n      order.groups.forEach(group => {\n        const rowData = [\n          formatDateWithoutDashes(order.createdAt) + order.id, \"Група\", order.createdAt, order.id, order.user.companyName, order.type === \"BY_HAND\" ? \"Ръчно - от Администратор\" : \"От клиент\",\n          order.user.city, order.detailType, group.model.name, group.height, group.width, group.number,\n          \"квадратен метър\", group.handle.name, group.handle.price, \"Цена на Дръжка\",\n          group.bothSidesLaminated ? \"ДВУСТРАННО\" : \"\", order.totalPrice, group.folio.name, group.profil.name\n        ];\n        const newRow = worksheet.addRow(rowData);\n\n        // Check if order status is CREATED and set row color to red\n        if (order.status === \"CREATED\") {\n          newRow.fill = {\n            type: 'pattern',\n            pattern: 'solid',\n            fgColor: { argb: 'FF00FF00' }, // Green colornpom \n          };\n        } else if (order.status === \"WORKING_ON\") {\n          newRow.fill = {\n            type: 'pattern',\n            pattern: 'solid',\n            fgColor: { argb: 'FFFFFF00' }, // Yellow color\n          };\n        }\n      });\n    });\n\n    const buffer = await workbook.xlsx.writeBuffer();\n    const blob = new Blob([buffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n\n    saveAs(blob, 'Справка - ' + new Date().toLocaleDateString() + '.xlsx');\n  };\n\n\n  useEffect(() => {\n    fetchData();\n  }, [page, resultsPerPage, filter]);\n  return (\n    <div>\n      {loggedUser.data.role === '[ADMIN]' && (\n        <>\n          <div className=\"mt-4 \">\n            <Button layout=\"outline\" onClick={exportToExcel} className=\"btn btn-primary\">\n              Експорт на справка\n            </Button>\n          </div>\n          <hr className=\"customeDivider mx-4 my-5\" />\n        </>\n      )}\n\n      {/* Table */}\n      <TableContainer className=\"mb-8\">\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Номер</TableCell>\n              <TableCell>Oт дата</TableCell>\n              <TableCell>Статус</TableCell>\n              <TableCell>Потребител</TableCell>\n              <TableCell>Крайна сума</TableCell>\n              <TableCell>Тип поръчка</TableCell>\n              <TableCell>Отстъпка</TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n\n            {data.map((order, index) => (\n              <TableRow key={order.id}>\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <div>\n                      <p className=\"font-semibold\">{formatDateWithoutDashes(order.createdAt) + order.id}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <div>\n                      <p className=\"font-semibold\">{order.createdAt}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell key={order.id} >\n                  <Modal isOpen={isModalOpen} onClose={closeModal}>\n                    <ModalHeader className=\"flex items-center\">\n                      <Icon icon={EditIcon} className=\"w-6 h-6 mr-3\" />\n                      Промяна на статус\n                    </ModalHeader>\n                    <ModalBody>\n                      Сигурни ли сте, че искате да промените статуса на{\" \"}\n                      {/* {selectedStatus && `\"${selectedStatus}\"`} */}\n                      <b> {selectedStatus === \"WORKING_ON\" ? \"Изпълнява се\" : selectedStatus === \"CREATED\" ? \"Създадена  \" : selectedStatus === \"SEND\" ? \"Изпратена\" : selectedStatus === \"DONE\" ? \"Изпълнена\" : selectedStatus}</b>\n\n                    </ModalBody>\n                    <ModalFooter>\n                      <div className=\"hidden sm:block\">\n                        <Button onClick={() => { console.log(order); handleConfirmChange(order) }}>\n                          Потвърждаване\n                        </Button>\n                      </div>\n                      <div className=\"hidden sm:block\">\n                        <Button layout=\"outline\" onClick={closeModal}>\n                          Отказ\n                        </Button>\n                      </div>\n                    </ModalFooter>\n                  </Modal>\n\n                  {loggedUser.data.role === '[ADMIN]' && (\n                    <div onClick={() => setIsEditing(prevState => ({ ...prevState, [order.id]: true }))} style={{ cursor: isEditing[order.id] || order.status === \"DONE\" ? \"default\" : \"pointer\" }}>\n                    {isEditing[order.id] ? (\n                        <Select\n                          value={selectedStatus}\n                          onChange={(event) => handleChange(event, order)}\n                          onBlur={() => setIsEditing(false)}\n                        >\n                          {order.status === \"CREATED\" ? (\n                            \n                            <>                            <option value=\"\">--</option>\n                            <option value=\"WORKING_ON\">Изпълнява се</option><option value=\"SEND\">Изпратена</option><option value=\"DONE\">Изпълнена</option></>\n                            \n\n                          ) : (\n                            <option value={selectedStatus}>\n                              {order.status === \"WORKING_ON\" ? \"Изпълнява се\" : order.status === \"SEND\" ? \"Изпратена\" : \"Изпълнена\"}\n                            </option>\n                          )}\n                           {order.status == \"WORKING_ON\" && (\n                            <><option value=\"SEND\">Изпратена</option><option value=\"DONE\">Изпълнена</option></>)}\n                          {order.status == \"SEND\" && (\n                            <option value=\"DONE\">Изпълнена</option>)}\n\n                        </Select>\n                      ) : (\n                        <div className={`flex items-center text-sm ${getStatusColor(order.status)}`}>\n                          <div>\n                            <p className=\"font-semibold\">\n                              {order.status === \"WORKING_ON\" ? \"Изпълнява се\" : order.status === \"CREATED\" ? \"Създадена\" : order.status === \"SEND\" ? \"Изпратена\" : order.status === \"DONE\" ? \"Изпълнена\" : order.status}                      {order.status !== \"DONE\" && <p style={{ color: \"blue\" }}>Промяна на статус</p>}\n\n                            </p>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  )}\n                  {loggedUser.data.role === '[USER]' && (\n                    <div className={`flex items-center text-sm ${getStatusColor(order.status)}`}>\n                      <div>\n                        <p className=\"font-semibold\">\n                          {order.status === \"WORKING_ON\" ? \"Изпълнява се\" : order.status === \"CREATED\" ? \"Създадена\" : order.status === \"SEND\" ? \"Изпратена\" : order.status === \"DONE\" ? \"Изпълнена\" : order.status}</p>\n\n                      </div>\n                    </div>)}\n                </TableCell>\n                <TableCell>\n\n                  <div className=\"flex items-center text-sm\">\n                    <div>\n                      <p className=\"font-semibold\">{order.user.companyName}</p>\n                    </div>\n                  </div>\n                </TableCell>\n\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <div>\n                      <span className=\"font-semibold\">{order.totalPrice}</span><span>лв.</span>\n                    </div>\n                  </div>\n                </TableCell>\n\n\n                <TableCell>\n                  {order.type === \"BY_HAND\" ? \"Ръчно - от Администратор\" : \"От клиент\"}\n                </TableCell>\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <div>\n                      <span className=\"font-semibold\">0</span><span>%</span>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell className=\"w-1/12 text-center\">\n                  <Link\n                    to={`orders/${order.id}`}\n                    className=\"text-indigo-600 hover:text-indigo-900\"\n                  >\n                    Детайли\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter>\n\n          <Pagination\n            totalResults={totalResults}\n            resultsPerPage={resultsPerPage}\n            onChange={onPageChange}\n          />\n        </TableFooter>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default OrdersTable;\n"],"sourceRoot":""}