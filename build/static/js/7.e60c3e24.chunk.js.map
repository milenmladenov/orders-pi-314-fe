{"version":3,"sources":["components/UsersTable.js","pages/Customers.js","components/Typography/PageTitle.js","Constants.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./node_modules/regenerator-runtime/runtime.js?96cf"],"names":["UsersTable","_ref","resultsPerPage","filter","_useState","useState","_useState2","_slicedToArray","page","setPage","token","localStorage","getItem","apiBaseUrl","config","url","API_BASE_URL","_useState3","_useState4","data","setData","_useState5","_useState6","totalResults","setTotalResults","fetchData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_config","response","userData","wrap","_context","prev","next","headers","Authorization","concat","axios","get","sent","length","slice","t0","console","error","stop","apply","arguments","useEffect","React","createElement","TableContainer","className","Table","TableHeader","TableCell","TableBody","map","user","i","TableRow","key","companyName","username","email","phone","Link","to","id","TableFooter","Pagination","label","onChange","p","Customers","PageTitle","children","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","value","done","Promise","then","fn","self","this","args","err","undefined","runtime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","TypeError","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","name","setPrototypeOf","__proto__","awrap","async","iter","keys","object","reverse","pop","skipTempReset","charAt","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function"],"mappings":"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","file":"static/js/7.e60c3e24.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { config } from '../Constants';\n\n\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Pagination,\n \n} from \"@windmill/react-ui\";\nimport { Link } from 'react-router-dom'\n\n\nconst UsersTable = ({ resultsPerPage, filter }) => {\n  const [page, setPage] = useState(1);\n  const token = localStorage.getItem('accessToken')\n  const apiBaseUrl = config.url.API_BASE_URL;\n\n  const [data, setData] = useState([]);\n  const [totalResults, setTotalResults] = useState(0);\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n  const fetchData = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      };\n      const response = await axios.get(apiBaseUrl + \"api/customers\", config);\n      const userData = response.data\n      setTotalResults(userData.length);\n      setData(userData.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  }\n\n  // on page change, load new sliced data\n  // here you would make another server request for new data\n  useEffect(() => {\n    fetchData();\n  }, [page, resultsPerPage, filter]);\n\n  return (\n    <div>\n      {/* Table */}\n      <TableContainer className=\"mb-8\">\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Име </TableCell>\n              <TableCell>Потребителско име</TableCell>\n              <TableCell>Email</TableCell>\n              <TableCell>Телефон</TableCell>\n              <TableCell></TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {data.map((user, i) => (\n              <TableRow key={i}>\n                <TableCell>\n                \n                    <div>\n                      <p className=\"font-semibold\">{user.companyName}</p>\n                    </div>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">{user.username}</span>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">{user.email}</span>\n                </TableCell>\n\n                <TableCell>\n                  <span className=\"text-sm\">{user.phone}\n                  </span>\n                </TableCell>\n                <TableCell className=\"w-1/12 text-center\">\n                  <Link\n                    to={`customers/${user.id}`}\n                    className=\"text-indigo-600 hover:text-indigo-900\"\n                  >\n                    Детайли\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter>\n          <Pagination\n            totalResults={totalResults}\n            resultsPerPage={resultsPerPage}\n            label=\"Table navigation\"\n            onChange={onPageChange}\n          />\n        </TableFooter>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default UsersTable;\n","import React from \"react\";\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport UsersTable from \"../components/UsersTable\";\n\nconst Customers = () => {\n  return (\n    <div>\n      <PageTitle>Клиенти</PageTitle>\n\n      <UsersTable resultsPerPage={10} />\n    </div>\n  );\n};\n\nexport default Customers;\n","import React from 'react'\n\nfunction PageTitle({ children }) {\n  return (\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\n  )\n}\n\nexport default PageTitle\n","const prod = {\n    url: {\n      API_BASE_URL: 'https://orders-pi314-396621.uc.r.appspot.com' ,\n    }\n  }\n  \n  const dev = {\n    url: {\n      API_BASE_URL: 'http://localhost:8080'\n    }\n  }\n  \n  export const config = process.env.NODE_ENV === 'development' ? dev : prod","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n"],"sourceRoot":""}