{"version":3,"sources":["components/Chart/ChartCard.js","components/Chart/ChartLegend.js","components/RoundIcon.js","utils/demo/chartsData.js","pages/Dashboard.js","components/Typography/PageTitle.js","Constants.js","components/Icon.js","components/Cards/InfoCard.js","components/OrdersTable.js"],"names":["Chart","_ref","children","title","React","createElement","className","ChartLegend","legends","map","legend","key","concat","color","RoundIcon","Icon","icon","_ref$iconColorClass","iconColorClass","_ref$bgColorClass","bgColorClass","cls","classNames","doughnutLegends","lineLegends","doughnutOptions","data","datasets","backgroundColor","label","labels","options","responsive","cutoutPercentage","display","lineOptions","borderColor","fill","tooltips","mode","intersect","hover","scales","x","scaleLabel","labelString","y","Dashboard","loggedUser","JSON","parse","localStorage","getItem","Fragment","PageTitle","role","InfoCard","value","PeopleIcon","MoneyIcon","CartIcon","ChartCard","Line","Doughnut","OrdersTable","resultsPerPage","config","url","API_BASE_URL","props","_objectWithoutProperties","_excluded","Card","CardBody","filter","_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","_useState4","setData","_useState5","_useState6","totalResults","setTotalResults","token","_useState7","undefined","_useState8","selectedStatus","_useState9","_useState10","isModalOpen","setIsModalOpen","_useState11","_useState12","apiBaseUrl","fetchData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_config","response","ordersData","filteredData","flattenedGroups","wrap","_context","prev","next","headers","Authorization","axios","get","sent","order","status","flatMap","length","slice","t0","console","error","stop","apply","arguments","closeModal","formatDateWithoutDashes","dateString","Date","toLocaleDateString","year","month","day","replace","exportToExcel","_ref3","_callee2","workbook","worksheet","headerRow","buffer","blob","_context2","ExcelJS","Workbook","addWorksheet","addRow","forEach","groups","group","rowData","createdAt","id","user","companyName","type","city","detailType","model","name","height","width","number","handle","price","bothSidesLaminated","totalPrice","folio","profil","newRow","pattern","fgColor","argb","xlsx","writeBuffer","Blob","saveAs","useEffect","Button","layout","onClick","TableContainer","Table","TableHeader","TableCell","TableBody","i","TableRow","Modal","isOpen","onClose","ModalHeader","EditIcon","ModalBody","ModalFooter","fetch","method","then","catch","handleConfirmChange","Select","Link","to","TableFooter","Pagination","onChange","p"],"mappings":"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","file":"static/js/6.5972867e.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Chart({ children, title }) {\n  return (\n    <div className=\"min-w-0 p-4 bg-white rounded-lg shadow-xs dark:bg-gray-800\">\n      <p className=\"mb-4 font-semibold text-gray-800 dark:text-gray-300\">{title}</p>\n      {children}\n    </div>\n  )\n}\n\nexport default Chart\n","import React from 'react'\n\nfunction ChartLegend({ legends }) {\n  return (\n    <div className=\"flex justify-center mt-4 space-x-3 text-sm text-gray-600 dark:text-gray-400\">\n      {legends.map((legend) => (\n        <div className=\"flex items-center\" key={legend.title}>\n          <span className={`inline-block w-3 h-3 mr-1 ${legend.color} rounded-full`}></span>\n          <span>{legend.title}</span>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default ChartLegend\n","import React from 'react'\nimport classNames from 'classnames'\n\nfunction RoundIcon({\n  icon: Icon,\n  iconColorClass = 'text-purple-600 dark:text-purple-100',\n  bgColorClass = 'bg-purple-100 dark:bg-purple-600',\n  className,\n}) {\n  const baseStyle = 'p-3 rounded-full'\n\n  const cls = classNames(baseStyle, iconColorClass, bgColorClass, className)\n  return (\n    <div className={cls}>\n      <Icon className=\"w-5 h-5\" />\n    </div>\n  )\n}\n\nexport default RoundIcon\n","export const doughnutLegends = [\n  { title: \"Мембранна Вратичка\", color: \"bg-blue-500\" },\n  { title: \"Двустранно Грундиран МДФ\", color: \"bg-teal-600\" },\n  { title: \"Фурнирован МДФ\", color: \"bg-purple-600\" },\n];\n\nexport const lineLegends = [\n  { title: \"От Админ\", color: \"bg-teal-600\" },\n  { title: \"От Клиент\", color: \"bg-purple-600\" },\n];\n\nexport const barLegends = [\n  { title: \"Shoes\", color: \"bg-teal-600\" },\n  { title: \"Bags\", color: \"bg-purple-600\" },\n];\nexport const realTimeUsersBarLegends = [\n  { title: \"Active Users\", color: \"bg-teal-600\" },\n];\n\nexport const doughnutOptions = {\n  data: {\n    datasets: [\n      {\n        data: [33, 33, 33],\n        /**\n         * These colors come from Tailwind CSS palette\n         * https://tailwindcss.com/docs/customizing-colors/#default-color-palette\n         */\n        backgroundColor: [\"#0694a2\", \"#1c64f2\", \"#7e3af2\"],\n        label: \"Dataset 1\",\n      },\n    ],\n    labels: [\"Мембранна Вратичка\", \"Двустранно Грундиран МДФ\", \"Фурнирован МДФ\"],\n  },\n  options: {\n    responsive: true,\n    cutoutPercentage: 80,\n  },\n  legend: {\n    display: false,\n  },\n};\n\nexport const lineOptions = {\n  data: {\n    labels: [\"Януари\", \"Фебруари\", \"Март\", \"Април\", \"Май\", \"Юни\", \"Юли\"],\n    datasets: [\n      {\n        label: \"от Админ\",\n        /**\n         * These colors come from Tailwind CSS palette\n         * https://tailwindcss.com/docs/customizing-colors/#default-color-palette\n         */\n        backgroundColor: \"#0694a2\",\n        borderColor: \"#0694a2\",\n        data: [43, 48, 40, 54, 67, 73, 70],\n        fill: false,\n      },\n      {\n        label: \"От Клиент\",\n        fill: false,\n        /**\n         * These colors come from Tailwind CSS palette\n         * https://tailwindcss.com/docs/customizing-colors/#default-color-palette\n         */\n        backgroundColor: \"#7e3af2\",\n        borderColor: \"#7e3af2\",\n        data: [24, 50, 64, 74, 52, 51, 65],\n      },\n    ],\n  },\n  options: {\n    responsive: true,\n    tooltips: {\n      mode: \"index\",\n      intersect: false,\n    },\n    hover: {\n      mode: \"nearest\",\n      intersect: true,\n    },\n    scales: {\n      x: {\n        display: true,\n        scaleLabel: {\n          display: true,\n          labelString: \"Month\",\n        },\n      },\n      y: {\n        display: true,\n        scaleLabel: {\n          display: true,\n          labelString: \"Value\",\n        },\n      },\n    },\n  },\n  legend: {\n    display: false,\n  },\n};\n\nexport const barOptions = {\n  data: {\n    labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n    datasets: [\n      {\n        label: \"Shoes\",\n        backgroundColor: \"#0694a2\",\n        // borderColor: window.chartColors.red,\n        borderWidth: 1,\n        data: [-3, 14, 52, 74, 33, 90, 70],\n      },\n      {\n        label: \"Bags\",\n        backgroundColor: \"#7e3af2\",\n        // borderColor: window.chartColors.blue,\n        borderWidth: 1,\n        data: [66, 33, 43, 12, 54, 62, 84],\n      },\n    ],\n  },\n  options: {\n    responsive: true,\n  },\n  legend: {\n    display: false,\n  },\n};\n\nexport const realTimeUsersBarOptions = {\n  data: {\n    labels: [\n      \"6.00\",\n      \"6.10\",\n      \"6.20\",\n      \"6.30\",\n      \"6.40\",\n      \"6.50\",\n      \"7.00\",\n      \"7.10\",\n      \"7.20\",\n      \"7.30\",\n      \"7.40\",\n      \"7.50\",\n      \"Now\",\n    ],\n    datasets: [\n      {\n        label: \"Active Users\",\n        backgroundColor: \"#0694a2\",\n        // borderColor: window.chartColors.red,\n        borderWidth: 1,\n        data: [2, 14, 52, 74, 33, 90, 70, 34, 56, 62, 11, 23, 55],\n      },\n    ],\n  },\n  options: {\n    responsive: true,\n  },\n  legend: {\n    display: false,\n  },\n};\n","import React from \"react\";\n\nimport InfoCard from \"../components/Cards/InfoCard\";\nimport ChartCard from \"../components/Chart/ChartCard\";\nimport { Doughnut, Line } from \"react-chartjs-2\";\nimport ChartLegend from \"../components/Chart/ChartLegend\";\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport { ChatIcon, CartIcon, MoneyIcon, PeopleIcon } from \"../icons\";\nimport RoundIcon from \"../components/RoundIcon\";\n\nimport {\n  doughnutOptions,\n  lineOptions,\n  doughnutLegends,\n  lineLegends,\n} from \"../utils/demo/chartsData\";\nimport OrdersTable from \"../components/OrdersTable\";\n\n\nfunction Dashboard() {\n  const loggedUser = JSON.parse(localStorage.getItem(\"user\"))\n\n  return (\n    <>\n      <PageTitle>Контролен Панел</PageTitle>\n\n      {/* <CTA /> */}\n\n      {loggedUser.data.role === '[ADMIN]' && ( <>\n      <div className=\"grid gap-6 mb-8 md:grid-cols-2 xl:grid-cols-4\">\n        <InfoCard title=\"Брой клиенти\" value=\"765\">\n          <RoundIcon\n            icon={PeopleIcon}\n            iconColorClass=\"text-orange-500 dark:text-orange-100\"\n            bgColorClass=\"bg-orange-100 dark:bg-orange-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n\n        <InfoCard title=\"Общa печалба\" value=\"126,760.89 лв.\">\n          <RoundIcon\n            icon={MoneyIcon}\n            iconColorClass=\"text-green-500 dark:text-green-100\"\n            bgColorClass=\"bg-green-100 dark:bg-green-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n\n        <InfoCard title=\"Нови поръчки\" value=\"150\">\n          <RoundIcon\n            icon={CartIcon}\n            iconColorClass=\"text-blue-500 dark:text-blue-100\"\n            bgColorClass=\"bg-blue-100 dark:bg-blue-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n\n        <InfoCard title=\"Приходи за последните 30 дни\" value=\"12,345 лв.\">\n          <RoundIcon\n            icon={MoneyIcon}\n            iconColorClass=\"text-teal-500 dark:text-teal-100\"\n            bgColorClass=\"bg-teal-100 dark:bg-teal-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n      </div>\n\n      <div className=\"grid gap-6 mb-8 md:grid-cols-2\">\n        <ChartCard title=\"Създадени поръчки по тип потребител\">\n          <Line {...lineOptions} />\n          <ChartLegend legends={lineLegends} />\n        </ChartCard>\n\n        <ChartCard title=\"Използвани материали\">\n          <Doughnut {...doughnutOptions} />\n          <ChartLegend legends={doughnutLegends} />\n        </ChartCard>\n      </div>\n      </>\n      )}\n      <PageTitle>Поръчки</PageTitle>\n      <OrdersTable resultsPerPage={10} />\n    </>\n  );\n}\n\nexport default Dashboard;\n","import React from 'react'\n\nfunction PageTitle({ children }) {\n  return (\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\n  )\n}\n\nexport default PageTitle\n","const prod = {\n    url: {\n      API_BASE_URL: 'https://orders-pi314-396621.uc.r.appspot.com' ,\n    }\n  }\n  \n  const dev = {\n    url: {\n      API_BASE_URL: 'http://localhost:8080'\n    }\n  }\n  \n  export const config = process.env.NODE_ENV === 'development' ? dev : prod","import React from \"react\";\n\nconst Icon = ({ icon, ...props }) => {\n  const Icon = icon;\n  return <Icon {...props} />;\n};\n\nexport default Icon;\n","import React from 'react'\nimport { Card, CardBody } from '@windmill/react-ui'\n\nfunction InfoCard({ title, value, children: icon }) {\n  return (\n    <Card>\n      <CardBody className=\"flex items-center\">\n        {icon}\n        <div>\n          <p className=\"mb-2 text-sm font-medium text-gray-600 dark:text-gray-400\">{title}</p>\n          <p className=\"text-lg font-semibold text-gray-700 dark:text-gray-200\">{value}</p>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default InfoCard\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n  Button, Select, Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"@windmill/react-ui\";\nimport {\n  EditIcon,\n  EyeIcon,\n  GridViewIcon,\n  HomeIcon,\n  ListViewIcon,\n  TrashIcon,\n} from \"../icons\";\nimport { Link } from 'react-router-dom'\nimport json2xls from 'json2xls'; // Import json2xls\nimport { saveAs } from \"file-saver\"; // Import saveAs function\nimport * as XLSX from 'xlsx';\nimport ExcelJS from 'exceljs';\nimport Icon from \"../components/Icon\";\nimport { config } from '../Constants';\n\n\n\n\n\n\n\nconst OrdersTable = ({ resultsPerPage, filter }) => {\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  const [totalResults, setTotalResults] = useState(0);\n  const token = localStorage.getItem('accessToken')\n  const loggedUser = JSON.parse(localStorage.getItem('user'))\n  const [selectedStatus, setSelectedStatus] = useState(undefined);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedOrderId, setSelectedOrderId] = useState(null); // Define selectedOrderId state\n  const apiBaseUrl = config.url.API_BASE_URL;\n\n\n\n  const handleChange = (event,order) => {\n    const newStatus = event.target.value;\n    order.selectedStatus = newStatus;\n    if (newStatus !== selectedStatus) {\n      setSelectedStatus(newStatus);\n      setIsModalOpen(true);\n    }\n  };\n\n  const fetchData = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      };\n      const response = await axios.get(apiBaseUrl + \"/api/orders/all\", config);\n      const ordersData = response.data;\n\n      // Apply filters if necessary\n      let filteredData = ordersData;\n      if (filter === \"изпратена\") {\n        filteredData = ordersData.filter(order => order.status === \"Paid\");\n      } else if (filter === \"създадена\") {\n        filteredData = ordersData.filter(order => order.status === \"CREATED\");\n      } else if (filter === \"изпълнява се\") {\n        filteredData = ordersData.filter(order => order.status === \"WORKING_ON\");\n      } else if (filter === \"изпълнена\") {\n        filteredData = ordersData.filter(order => order.status === \"Paid\");\n      }\n\n      // Flatten the groups and update the totalResults and data state\n      const flattenedGroups = filteredData.flatMap(order => order);\n      setTotalResults(flattenedGroups.length);\n      setData(flattenedGroups.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const handleConfirmChange = (order) => {\n    // Make API call to change the order status\n    fetch(apiBaseUrl + `api/orders/${order.id}/change-status?orderStatus=${selectedStatus}`, {\n      method: 'POST',\n    })\n      .then((response) => {\n        // Handle response as needed\n      })\n      .catch((error) => {\n        // Handle error\n      });\n\n    // Close the confirmation modal\n    closeModal()\n  };\n  function closeModal() {\n    setIsModalOpen(false);\n  }\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n\n  const formatDateWithoutDashes = (dateString) => {\n    const date = new Date(dateString);\n    const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\n    return date.toLocaleDateString('en-US', options).replace(/\\//g, ''); // Remove slashes\n  };\n\n\n\n  const exportToExcel = async () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet('Справка');\n\n    const headerRow = [\n      \"ПОРЕДЕН НОМЕР\", \"Група\", \"ДАТА\", \"ПОРЪЧКА\", \"КЛИЕНТ\", \"ВИД\", \"ГРАД\",\n      \"ЕТИКЕТ\", \"МОДЕЛ\", \"ВИСОЧИНА\", \"ШИРИНА\", \"БРОЙ КОЛИЧЕСТВО\",\n      \"МЕРНА ЕДИНИЦА\", \"ДРЪЖКА\", \"ЕДИНИЧНА ЦЕНА\", \"ЦЕНА НА ДРЪЖКА\",\n      \"ДВУСТРАННО ФОЛИРАНЕ\", \"СТОЙНОСТ\", \"ФОЛИО\", \"ПРОФИЛ\",\n    ];\n\n    worksheet.addRow(headerRow);\n\n    data.forEach(order => {\n      order.groups.forEach(group => {\n        const rowData = [\n          formatDateWithoutDashes(order.createdAt) + order.id, \"Група\", order.createdAt, order.id, order.user.companyName, order.type === \"BY_HAND\" ? \"Ръчно - от Администратор\" : \"От клиент\",\n          order.user.city, order.detailType, group.model.name, group.height, group.width, group.number,\n          \"квадратен метър\", group.handle.name, group.handle.price, \"Цена на Дръжка\",\n          group.bothSidesLaminated ? \"ДВУСТРАННО\" : \"\", order.totalPrice, group.folio.name, group.profil.name\n        ];\n        const newRow = worksheet.addRow(rowData);\n\n        // Check if order status is CREATED and set row color to red\n        if (order.status === \"CREATED\") {\n          newRow.fill = {\n            type: 'pattern',\n            pattern: 'solid',\n            fgColor: { argb: 'FF00FF00' }, // Green colornpom \n          };\n        } else if (order.status === \"WORKING_ON\") {\n          newRow.fill = {\n            type: 'pattern',\n            pattern: 'solid',\n            fgColor: { argb: 'FFFFFF00' }, // Yellow color\n          };\n        }\n      });\n    });\n\n    const buffer = await workbook.xlsx.writeBuffer();\n    const blob = new Blob([buffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n\n    saveAs(blob, 'Справка - ' + new Date().toLocaleDateString() + '.xlsx');\n  };\n\n\n  useEffect(() => {\n    fetchData();\n  }, [page, resultsPerPage, filter]);\n  return (\n    <div>\n      {loggedUser.data.role === '[ADMIN]' && (\n        <>\n          <div className=\"mt-4 \">\n            <Button layout=\"outline\" onClick={exportToExcel} className=\"btn btn-primary\">\n              Експорт на справка\n            </Button>\n          </div>\n          <hr className=\"customeDivider mx-4 my-5\" />\n        </>\n      )}\n      \n      {/* Table */}\n      <TableContainer className=\"mb-8\">\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Номер</TableCell>\n              <TableCell>Oт дата</TableCell>\n              <TableCell>Статус</TableCell>\n              <TableCell>Потребител</TableCell>\n              <TableCell>Крайна сума</TableCell>\n              <TableCell>Тип поръчка</TableCell>\n              <TableCell>Отстъпка</TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n          \n            {data.map((order, i) => (\n             <TableRow key={i}>\n                  <TableCell>\n                    <div className=\"flex items-center text-sm\">\n                      <div>\n                        <p className=\"font-semibold\">{formatDateWithoutDashes(order.createdAt) + order.id}</p>\n                      </div>\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <div className=\"flex items-center text-sm\">\n                      <div>\n                        <p className=\"font-semibold\">{order.createdAt}</p>\n                      </div>\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <Modal isOpen={isModalOpen} onClose={closeModal}>\n                      <ModalHeader className=\"flex items-center\">\n                        <Icon icon={EditIcon} className=\"w-6 h-6 mr-3\" />\n                        Промяна на статус\n                      </ModalHeader>\n                      <ModalBody>\n                        Сигурни ли сте, че искате да промените статуса на{\" \"}\n                        {selectedStatus && `\"${selectedStatus}\"`}\n                      </ModalBody>\n                      <ModalFooter>\n                        <div className=\"hidden sm:block\">\n                          <Button onClick={() => handleConfirmChange(order)}>\n                            Потвърждаване\n                          </Button>\n                        </div>\n                        <div className=\"hidden sm:block\">\n                          <Button layout=\"outline\" onClick={closeModal}>\n                            Отказ\n                          </Button>\n                        </div>\n                      </ModalFooter>\n                    </Modal>\n                  \n                    <Select value={selectedStatus}  >\n                      <option value={order.status}>\n                        {order.status === \"WORKING_ON\" ? \"Изпълнява се\" : order.status === \"CREATED\" ? \"Създадена  \" : order.status === \"SEND\" ? \"Изпратена\" : order.status === \"DONE\" ? \"Изпълнена\" : order.status}\n                      </option>\n                      {order.status !== \"CREATED\" && (\n                        <option value=\"CREATED\">Създадена</option>\n                      )}\n                      {order.status !== \"SEND\" && (\n                        <option value=\"SEND\">Изпратена</option>\n                      )}\n                      {order.status !== \"WORKING_ON\" && (\n                        <option value=\"WORKING_ON\">Изпълнява се</option>\n                      )}\n                      {order.status !== \"DONE\" && (\n                        <option value=\"DONE\">Изпълнена</option>\n                      )}\n\n\n                    </Select>\n\n                  </TableCell>\n                  <TableCell>\n\n                    <div className=\"flex items-center text-sm\">\n                      <div>\n                        <p className=\"font-semibold\">{order.user.companyName}</p>\n                      </div>\n                    </div>\n                  </TableCell>\n\n                  <TableCell>\n                    <div className=\"flex items-center text-sm\">\n                      <div>\n                        <span className=\"font-semibold\">{order.totalPrice}</span><span>лв.</span>\n                      </div>\n                    </div>\n                  </TableCell>\n\n\n                  <TableCell>\n                    {order.type === \"BY_HAND\" ? \"Ръчно - от Администратор\" : \"От клиент\"}\n                  </TableCell>\n                  <TableCell>\n                    <div className=\"flex items-center text-sm\">\n                      <div>\n                        <span className=\"font-semibold\">0</span><span>%</span>\n                      </div>\n                    </div>\n                  </TableCell>\n                  <TableCell className=\"w-1/12 text-center\">\n                    <Link\n                      to={`orders/${order.id}`}\n                      className=\"text-indigo-600 hover:text-indigo-900\"\n                    >\n                      Детайли\n                    </Link>\n                  </TableCell>\n                </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter>\n\n          <Pagination\n            totalResults={totalResults}\n            resultsPerPage={resultsPerPage}\n            label=\"Table navigation\"\n            onChange={onPageChange}\n          />\n        </TableFooter>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default OrdersTable;\n"],"sourceRoot":""}