{"version":3,"sources":["pages/Orders.js","components/Typography/PageTitle.js","Constants.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","components/Icon.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/OrdersTable.js"],"names":["Icon","_ref","icon","props","_objectWithoutProperties","_excluded","React","createElement","Orders","_useState","useState","_useState2","_slicedToArray","resultsPerPage","setResultPerPage","_useState3","_useState4","filter","setFilter","PageTitle","className","aria-hidden","HomeIcon","NavLink","exact","to","Card","CardBody","Label","Select","onChange","e","filter_name","target","value","OrdersTable","children","config","url","API_BASE_URL","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","page","setPage","data","setData","_useState5","_useState6","totalResults","setTotalResults","token","localStorage","getItem","loggedUser","JSON","parse","_useState7","_useState8","selectedStatus","setSelectedStatus","_useState9","_useState10","isModalOpen","setIsModalOpen","_useState11","_useState12","selectedOrderId","setSelectedOrderId","apiBaseUrl","_useState13","_useState14","isEditing","setIsEditing","getStatusColor","status","useEffect","editingState","order","id","fetchData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_config","response","ordersData","filteredData","flattenedGroups","wrap","_context","prev","next","headers","Authorization","concat","axios","get","sent","flatMap","slice","t0","console","error","stop","closeModal","formatDateWithoutDashes","dateString","Date","toLocaleDateString","year","month","day","replace","exportToExcel","_ref3","_callee2","workbook","worksheet","headerRow","buffer","blob","_context2","ExcelJS","Workbook","addWorksheet","addRow","groups","group","rowData","createdAt","user","companyName","type","city","detailType","model","name","height","width","number","handle","price","bothSidesLaminated","totalPrice","folio","profil","newRow","fill","pattern","fgColor","argb","xlsx","writeBuffer","Blob","saveAs","role","Fragment","Button","layout","onClick","TableContainer","Table","TableHeader","TableCell","TableBody","map","index","TableRow","Modal","isOpen","onClose","ModalHeader","EditIcon","ModalBody","ModalFooter","log","find","post","then","window","location","reload","catch","handleConfirmChange","prevState","_objectSpread","style","cursor","event","newStatus","handleChange","onBlur","color","Link","TableFooter","Pagination","p"],"mappings":"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","file":"static/js/7.d693c17e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport { NavLink } from \"react-router-dom\";\nimport { HomeIcon } from \"../icons\";\nimport { Card, CardBody, Label, Select } from \"@windmill/react-ui\";\nimport OrdersTable from \"../components/OrdersTable\";\n\nfunction Icon({ icon, ...props }) {\n  const Icon = icon;\n  return <Icon {...props} />;\n}\n\nconst Orders = () => {\n  // pagination setup\n  const [resultsPerPage, setResultPerPage] = useState(10);\n  const [filter, setFilter] = useState(\"всички\");\n\n  const handleFilter = (filter_name) => {\n    if (filter_name == \"Всички\") {\n      setFilter(\"всички\");\n    }\n    if (filter_name == \"Създадена\") {\n      setFilter(\"създадена\");\n    }\n    if (filter_name == \"Изпълнява се\") {\n      setFilter(\"изпълнява се\");\n    }\n    if (filter_name == \"Изпратена\") {\n      setFilter(\"изпратена\");\n    }\n    if (filter_name == \"Изпълнена\") {\n      setFilter(\"изпълнена\");\n    }\n  };\n\n  return (\n    <div>\n      <PageTitle>Поръчки</PageTitle>\n\n      {/* Breadcum */}\n      <div className=\"flex text-gray-800 dark:text-gray-300\">\n        <div className=\"flex items-center text-purple-600\">\n          <Icon className=\"w-5 h-5\" aria-hidden=\"true\" icon={HomeIcon} />\n          <NavLink exact to=\"/app/dashboard\" className=\"mx-2\">\n            Начало\n          </NavLink>\n        </div>\n        {\">\"}\n        <p className=\"mx-2\">Поръчки</p>\n      </div>\n\n      {/* Sort */}\n      <Card className=\"mt-5 mb-5 shadow-md\">\n        <CardBody>\n          <div className=\"flex items-center\">\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n              Филтър\n            </p>\n\n            <Label className=\"mx-3\">\n              <Select\n                className=\"py-3\"\n                onChange={(e) => handleFilter(e.target.value)}\n              >\n                <option>Всички</option>\n                <option>Създадена</option>\n                <option>Изпълнява се</option>\n                <option>Изпратена</option>\n                <option>Изпълнена</option>\n\n              </Select>\n            </Label>\n\n            <Label className=\"\">\n              {/* <!-- focus-within sets the color for the icon when input is focused --> */}\n              <div className=\"relative text-gray-500 focus-within:text-purple-600 dark:focus-within:text-purple-400\">\n                <input\n                  className=\"py-3 pr-5 text-sm text-black dark:text-gray-300 dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:focus:shadow-outline-gray form-input\"\n                  value={resultsPerPage}\n                  onChange={(e) => setResultPerPage(e.target.value)}\n                />\n                <div className=\"absolute inset-y-0 right-0 flex items-center mr-3 pointer-events-none\">\n                  {/* <SearchIcon className=\"w-5 h-5\" aria-hidden=\"true\" /> */}\n                  Показани\n                </div>\n              </div>\n            </Label>\n          </div>\n        </CardBody>\n      </Card>\n\n      {/* Table */}\n      <OrdersTable resultsPerPage={resultsPerPage} filter={filter} />\n    </div>\n  );\n};\n\nexport default Orders;\n","import React from 'react'\n\nfunction PageTitle({ children }) {\n  return (\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\n  )\n}\n\nexport default PageTitle\n","const prod = {\n    url: {\n      API_BASE_URL: 'https://orders-pi314-396621.uc.r.appspot.com' ,\n    }\n  }\n  \n  const dev = {\n    url: {\n      API_BASE_URL: 'http://localhost:8080'\n    }\n  }\n  \n  export const config = process.env.NODE_ENV === 'development' ? dev : prod","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React from \"react\";\n\nconst Icon = ({ icon, ...props }) => {\n  const Icon = icon;\n  return <Icon {...props} />;\n};\n\nexport default Icon;\n","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Pagination,\n  Button, Select, Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"@windmill/react-ui\";\nimport {\n  DropdownIcon,\n  EditIcon,\n\n} from \"../icons\";\nimport { Link } from 'react-router-dom'\nimport json2xls from 'json2xls'; // Import json2xls\nimport { saveAs } from \"file-saver\"; // Import saveAs function\nimport * as XLSX from 'xlsx';\nimport ExcelJS from 'exceljs';\nimport Icon from \"../components/Icon\";\nimport { config } from '../Constants';\n\n\n\n\n\n\n\n\nconst OrdersTable = ({ resultsPerPage, filter }) => {\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  const [totalResults, setTotalResults] = useState(0);\n  const token = localStorage.getItem('accessToken')\n  const loggedUser = JSON.parse(localStorage.getItem('user'))\n  const [selectedStatus, setSelectedStatus] = useState();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedOrderId, setSelectedOrderId] = useState(null); // Define selectedOrderId state\n  const apiBaseUrl = config.url.API_BASE_URL;\n  const [isEditing, setIsEditing] = useState([]);\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case \"WORKING_ON\":\n        return \"text-yellow-500\"; // Yellow color\n      case \"CREATED\":\n        return \"text-gray-500\";\n      case \"SEND\":\n        return \"text-blue-500\";\n      case \"DONE\":\n        return \"text-green-500\";\n        return \"\";\n    }\n  };\n  useEffect(() => {\n    const editingState = {};\n    data.forEach(order => {\n      editingState[order.id] = false;\n    });\n    setIsEditing(editingState);\n  }, [data]);\n  \n\n  const handleChange = (event, order) => {\n    const newStatus = event.target.value;\n    if (newStatus !== selectedStatus) {\n      setSelectedStatus(newStatus);\n      setSelectedOrderId(order.id);\n      setIsModalOpen(true);\n    }\n  };\n\n  const fetchData = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      };\n      const response = await axios.get(apiBaseUrl + \"/api/orders/all\", config);\n      const ordersData = response.data;\n\n      // Apply filters if necessary\n      let filteredData = ordersData;\n      if (filter === \"изпратена\") {\n        filteredData = ordersData.filter(order => order.status === \"SEND\");\n      } else if (filter === \"създадена\") {\n        filteredData = ordersData.filter(order => order.status === \"CREATED\");\n      } else if (filter === \"изпълнява се\") {\n        filteredData = ordersData.filter(order => order.status === \"WORKING_ON\");\n      } else if (filter === \"изпълнена\") {\n        filteredData = ordersData.filter(order => order.status === \"DONE\");\n      }\n\n      // Flatten the groups and update the totalResults and data state\n      const flattenedGroups = filteredData.flatMap(order => order);\n      setTotalResults(flattenedGroups.length);\n      setData(flattenedGroups.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const handleConfirmChange = () => {\n    const order = data.find(order => order.id === selectedOrderId); // Find the order using selectedOrderId\n    if (!order) {\n      console.error(\"Selected order not found\");\n      closeModal();\n      return;\n    }\n\n    // Make API call to change the order status using Axios\n    const url = `${apiBaseUrl}/api/orders/${order.id}/change-status/${selectedStatus}`;\n    axios\n      .post(url, null, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((response) => {\n        console.log(url);\n        window.location.reload()\n        // Handle response as needed\n      })\n      .catch((error) => {\n        // Handle error\n      });\n\n    closeModal();\n  };\n  function closeModal() {\n    setIsModalOpen(false);\n    // window.location.reload();\n  }\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n\n  const formatDateWithoutDashes = (dateString) => {\n    const date = new Date(dateString);\n    const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\n    return date.toLocaleDateString('en-US', options).replace(/\\//g, ''); // Remove slashes\n  };\n\n\n\n  const exportToExcel = async () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet('Справка');\n\n    const headerRow = [\n      \"ПОРЕДЕН НОМЕР\", \"Група\", \"ДАТА\", \"ПОРЪЧКА\", \"КЛИЕНТ\", \"ВИД\", \"ГРАД\",\n      \"ЕТИКЕТ\", \"МОДЕЛ\", \"ВИСОЧИНА\", \"ШИРИНА\", \"БРОЙ КОЛИЧЕСТВО\",\n      \"МЕРНА ЕДИНИЦА\", \"ДРЪЖКА\", \"ЕДИНИЧНА ЦЕНА\", \"ЦЕНА НА ДРЪЖКА\",\n      \"ДВУСТРАННО ФОЛИРАНЕ\", \"СТОЙНОСТ\", \"ФОЛИО\", \"ПРОФИЛ\",\n    ];\n\n    worksheet.addRow(headerRow);\n\n    data.forEach(order => {\n\n      order.groups.forEach(group => {\n        const rowData = [\n          formatDateWithoutDashes(order.createdAt) + order.id, \"Група\", order.createdAt, order.id, order.user.companyName, order.type === \"BY_HAND\" ? \"Ръчно - от Администратор\" : \"От клиент\",\n          order.user.city, order.detailType, group.model.name, group.height, group.width, group.number,\n          \"квадратен метър\", group.handle.name, group.handle.price, \"Цена на Дръжка\",\n          group.bothSidesLaminated ? \"ДВУСТРАННО\" : \"\", order.totalPrice, group.folio.name, group.profil.name\n        ];\n        const newRow = worksheet.addRow(rowData);\n\n        // Check if order status is CREATED and set row color to red\n        if (order.status === \"CREATED\") {\n          newRow.fill = {\n            type: 'pattern',\n            pattern: 'solid',\n            fgColor: { argb: 'FF00FF00' }, // Green colornpom \n          };\n        } else if (order.status === \"WORKING_ON\") {\n          newRow.fill = {\n            type: 'pattern',\n            pattern: 'solid',\n            fgColor: { argb: 'FFFFFF00' }, // Yellow color\n          };\n        }\n      });\n    });\n\n    const buffer = await workbook.xlsx.writeBuffer();\n    const blob = new Blob([buffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n\n    saveAs(blob, 'Справка - ' + new Date().toLocaleDateString() + '.xlsx');\n  };\n\n\n  useEffect(() => {\n    fetchData();\n  }, [page, resultsPerPage, filter]);\n  return (\n    <div>\n      {loggedUser.data.role === '[ADMIN]' && (\n        <>\n          <div className=\"mt-4 \">\n            <Button layout=\"outline\" onClick={exportToExcel} className=\"btn btn-primary\">\n              Експорт на справка\n            </Button>\n          </div>\n          <hr className=\"customeDivider mx-4 my-5\" />\n        </>\n      )}\n\n      {/* Table */}\n      <TableContainer className=\"mb-8\">\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Номер</TableCell>\n              <TableCell>Oт дата</TableCell>\n              <TableCell>Статус</TableCell>\n              <TableCell>Потребител</TableCell>\n              <TableCell>Крайна сума</TableCell>\n              <TableCell>Тип поръчка</TableCell>\n              <TableCell>Отстъпка</TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n\n            {data.map((order, index) => (\n              <TableRow key={order.id}>\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <div>\n                      <p className=\"font-semibold\">{formatDateWithoutDashes(order.createdAt) + order.id}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <div>\n                      <p className=\"font-semibold\">{order.createdAt}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell key={order.id} >\n                  <Modal isOpen={isModalOpen} onClose={closeModal}>\n                    <ModalHeader className=\"flex items-center\">\n                      <Icon icon={EditIcon} className=\"w-6 h-6 mr-3\" />\n                      Промяна на статус\n                    </ModalHeader>\n                    <ModalBody>\n                      Сигурни ли сте, че искате да промените статуса на{\" \"}\n                      {/* {selectedStatus && `\"${selectedStatus}\"`} */}\n                      <b> {selectedStatus === \"WORKING_ON\" ? \"Изпълнява се\" : selectedStatus === \"CREATED\" ? \"Създадена  \" : selectedStatus === \"SEND\" ? \"Изпратена\" : selectedStatus === \"DONE\" ? \"Изпълнена\" : selectedStatus}</b>\n\n                    </ModalBody>\n                    <ModalFooter>\n                      <div className=\"hidden sm:block\">\n                        <Button onClick={() => { console.log(order); handleConfirmChange(order) }}>\n                          Потвърждаване\n                        </Button>\n                      </div>\n                      <div className=\"hidden sm:block\">\n                        <Button layout=\"outline\" onClick={closeModal}>\n                          Отказ\n                        </Button>\n                      </div>\n                    </ModalFooter>\n                  </Modal>\n\n                  {loggedUser.data.role === '[ADMIN]' && (\n                    <div onClick={() => setIsEditing(prevState => ({ ...prevState, [order.id]: true }))} style={{ cursor: isEditing[order.id] || order.status === \"DONE\" ? \"default\" : \"pointer\" }}>\n                    {isEditing[order.id] ? (\n                        <Select\n                          value={selectedStatus}\n                          onChange={(event) => handleChange(event, order)}\n                          onBlur={() => setIsEditing(false)}\n                        >\n                          {order.status === \"CREATED\" ? (\n                            \n                            <>                            <option value=\"\">--</option>\n                            <option value=\"WORKING_ON\">Изпълнява се</option><option value=\"SEND\">Изпратена</option><option value=\"DONE\">Изпълнена</option></>\n                            \n\n                          ) : (\n                            <option value={selectedStatus}>\n                              {order.status === \"WORKING_ON\" ? \"Изпълнява се\" : order.status === \"SEND\" ? \"Изпратена\" : \"Изпълнена\"}\n                            </option>\n                          )}\n                           {order.status == \"WORKING_ON\" && (\n                            <><option value=\"SEND\">Изпратена</option><option value=\"DONE\">Изпълнена</option></>)}\n                          {order.status == \"SEND\" && (\n                            <option value=\"DONE\">Изпълнена</option>)}\n\n                        </Select>\n                      ) : (\n                        <div className={`flex items-center text-sm ${getStatusColor(order.status)}`}>\n                          <div>\n                            <p className=\"font-semibold\">\n                              {order.status === \"WORKING_ON\" ? \"Изпълнява се\" : order.status === \"CREATED\" ? \"Създадена\" : order.status === \"SEND\" ? \"Изпратена\" : order.status === \"DONE\" ? \"Изпълнена\" : order.status}                      {order.status !== \"DONE\" && <p style={{ color: \"blue\" }}>Промяна на статус</p>}\n\n                            </p>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  )}\n                  {loggedUser.data.role === '[USER]' && (\n                    <div className={`flex items-center text-sm ${getStatusColor(order.status)}`}>\n                      <div>\n                        <p className=\"font-semibold\">\n                          {order.status === \"WORKING_ON\" ? \"Изпълнява се\" : order.status === \"CREATED\" ? \"Създадена\" : order.status === \"SEND\" ? \"Изпратена\" : order.status === \"DONE\" ? \"Изпълнена\" : order.status}</p>\n\n                      </div>\n                    </div>)}\n                </TableCell>\n                <TableCell>\n\n                  <div className=\"flex items-center text-sm\">\n                    <div>\n                      <p className=\"font-semibold\">{order.user.companyName}</p>\n                    </div>\n                  </div>\n                </TableCell>\n\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <div>\n                      <span className=\"font-semibold\">{order.totalPrice}</span><span>лв.</span>\n                    </div>\n                  </div>\n                </TableCell>\n\n\n                <TableCell>\n                  {order.type === \"BY_HAND\" ? \"Ръчно - от Администратор\" : \"От клиент\"}\n                </TableCell>\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <div>\n                      <span className=\"font-semibold\">0</span><span>%</span>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell className=\"w-1/12 text-center\">\n                  <Link\n                    to={`orders/${order.id}`}\n                    className=\"text-indigo-600 hover:text-indigo-900\"\n                  >\n                    Детайли\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter>\n\n          <Pagination\n            totalResults={totalResults}\n            resultsPerPage={resultsPerPage}\n            onChange={onPageChange}\n          />\n        </TableFooter>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default OrdersTable;\n"],"sourceRoot":""}