{"version":3,"sources":["pages/Orders.js","components/Typography/PageTitle.js","Constants.js","components/Icon.js","components/OrdersTable.js"],"names":["Icon","_ref","icon","props","_objectWithoutProperties","_excluded","React","createElement","Orders","_useState","useState","_useState2","_slicedToArray","resultsPerPage","setResultPerPage","_useState3","_useState4","filter","setFilter","PageTitle","className","aria-hidden","HomeIcon","NavLink","exact","to","Card","CardBody","Label","Select","onChange","e","filter_name","target","value","OrdersTable","children","config","url","API_BASE_URL","page","setPage","data","setData","_useState5","_useState6","totalResults","setTotalResults","token","localStorage","getItem","loggedUser","JSON","parse","_useState7","undefined","_useState8","selectedStatus","_useState9","_useState10","isModalOpen","setIsModalOpen","_useState11","_useState12","apiBaseUrl","fetchData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_config","response","ordersData","filteredData","flattenedGroups","wrap","_context","prev","next","headers","Authorization","concat","axios","get","sent","order","status","flatMap","length","slice","t0","console","error","stop","apply","arguments","closeModal","formatDateWithoutDashes","dateString","Date","toLocaleDateString","year","month","day","replace","exportToExcel","_ref3","_callee2","workbook","worksheet","headerRow","buffer","blob","_context2","ExcelJS","Workbook","addWorksheet","addRow","forEach","groups","group","rowData","createdAt","id","user","companyName","type","city","detailType","model","name","height","width","number","handle","price","bothSidesLaminated","totalPrice","folio","profil","newRow","fill","pattern","fgColor","argb","xlsx","writeBuffer","Blob","saveAs","useEffect","role","Fragment","Button","layout","onClick","TableContainer","Table","TableHeader","TableCell","TableBody","map","i","TableRow","key","Modal","isOpen","onClose","ModalHeader","EditIcon","ModalBody","ModalFooter","fetch","method","then","catch","handleConfirmChange","Link","TableFooter","Pagination","label","p"],"mappings":"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","file":"static/js/7.22d66e90.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport { NavLink } from \"react-router-dom\";\nimport { HomeIcon } from \"../icons\";\nimport { Card, CardBody, Label, Select } from \"@windmill/react-ui\";\nimport OrdersTable from \"../components/OrdersTable\";\n\nfunction Icon({ icon, ...props }) {\n  const Icon = icon;\n  return <Icon {...props} />;\n}\n\nconst Orders = () => {\n  // pagination setup\n  const [resultsPerPage, setResultPerPage] = useState(10);\n  const [filter, setFilter] = useState(\"всички\");\n\n  const handleFilter = (filter_name) => {\n    if (filter_name == \"Всички\") {\n      setFilter(\"всички\");\n    }\n    if (filter_name == \"Създадена\") {\n      setFilter(\"създадена\");\n    }\n    if (filter_name == \"Изпълнява се\") {\n      setFilter(\"изпълнява се\");\n    }\n    if (filter_name == \"Изпратена\") {\n      setFilter(\"изпратена\");\n    }\n    if (filter_name == \"Изпълнена\") {\n      setFilter(\"изпълнена\");\n    }\n  };\n\n  return (\n    <div>\n      <PageTitle>Поръчки</PageTitle>\n\n      {/* Breadcum */}\n      <div className=\"flex text-gray-800 dark:text-gray-300\">\n        <div className=\"flex items-center text-purple-600\">\n          <Icon className=\"w-5 h-5\" aria-hidden=\"true\" icon={HomeIcon} />\n          <NavLink exact to=\"/app/dashboard\" className=\"mx-2\">\n            Начало\n          </NavLink>\n        </div>\n        {\">\"}\n        <p className=\"mx-2\">Поръчки</p>\n      </div>\n\n      {/* Sort */}\n      <Card className=\"mt-5 mb-5 shadow-md\">\n        <CardBody>\n          <div className=\"flex items-center\">\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n              Филтър\n            </p>\n\n            <Label className=\"mx-3\">\n              <Select\n                className=\"py-3\"\n                onChange={(e) => handleFilter(e.target.value)}\n              >\n                <option>Всички</option>\n                <option>Създадена</option>\n                <option>Изпълнява се</option>\n                <option>Изпратена</option>\n                <option>Изпълнена</option>\n\n              </Select>\n            </Label>\n\n            <Label className=\"\">\n              {/* <!-- focus-within sets the color for the icon when input is focused --> */}\n              <div className=\"relative text-gray-500 focus-within:text-purple-600 dark:focus-within:text-purple-400\">\n                <input\n                  className=\"py-3 pr-5 text-sm text-black dark:text-gray-300 dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:focus:shadow-outline-gray form-input\"\n                  value={resultsPerPage}\n                  onChange={(e) => setResultPerPage(e.target.value)}\n                />\n                <div className=\"absolute inset-y-0 right-0 flex items-center mr-3 pointer-events-none\">\n                  {/* <SearchIcon className=\"w-5 h-5\" aria-hidden=\"true\" /> */}\n                  Показани\n                </div>\n              </div>\n            </Label>\n          </div>\n        </CardBody>\n      </Card>\n\n      {/* Table */}\n      <OrdersTable resultsPerPage={resultsPerPage} filter={filter} />\n    </div>\n  );\n};\n\nexport default Orders;\n","import React from 'react'\n\nfunction PageTitle({ children }) {\n  return (\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\n  )\n}\n\nexport default PageTitle\n","const prod = {\n    url: {\n      API_BASE_URL: 'https://orders-pi314-396621.uc.r.appspot.com' ,\n    }\n  }\n  \n  const dev = {\n    url: {\n      API_BASE_URL: 'http://localhost:8080'\n    }\n  }\n  \n  export const config = process.env.NODE_ENV === 'development' ? dev : prod","import React from \"react\";\n\nconst Icon = ({ icon, ...props }) => {\n  const Icon = icon;\n  return <Icon {...props} />;\n};\n\nexport default Icon;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n  Button, Select, Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"@windmill/react-ui\";\nimport {\n  EditIcon,\n  EyeIcon,\n  GridViewIcon,\n  HomeIcon,\n  ListViewIcon,\n  TrashIcon,\n} from \"../icons\";\nimport { Link } from 'react-router-dom'\nimport json2xls from 'json2xls'; // Import json2xls\nimport { saveAs } from \"file-saver\"; // Import saveAs function\nimport * as XLSX from 'xlsx';\nimport ExcelJS from 'exceljs';\nimport Icon from \"../components/Icon\";\nimport { config } from '../Constants';\n\n\n\n\n\n\n\nconst OrdersTable = ({ resultsPerPage, filter }) => {\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  const [totalResults, setTotalResults] = useState(0);\n  const token = localStorage.getItem('accessToken')\n  const loggedUser = JSON.parse(localStorage.getItem('user'))\n  const [selectedStatus, setSelectedStatus] = useState(undefined);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedOrderId, setSelectedOrderId] = useState(null); // Define selectedOrderId state\n  const apiBaseUrl = config.url.API_BASE_URL;\n\n\n\n  const handleChange = (event,order) => {\n    const newStatus = event.target.value;\n    order.selectedStatus = newStatus;\n    if (newStatus !== selectedStatus) {\n      setSelectedStatus(newStatus);\n      setIsModalOpen(true);\n    }\n  };\n\n  const fetchData = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      };\n      const response = await axios.get(apiBaseUrl + \"/api/orders/all\", config);\n      const ordersData = response.data;\n\n      // Apply filters if necessary\n      let filteredData = ordersData;\n      if (filter === \"изпратена\") {\n        filteredData = ordersData.filter(order => order.status === \"Paid\");\n      } else if (filter === \"създадена\") {\n        filteredData = ordersData.filter(order => order.status === \"CREATED\");\n      } else if (filter === \"изпълнява се\") {\n        filteredData = ordersData.filter(order => order.status === \"WORKING_ON\");\n      } else if (filter === \"изпълнена\") {\n        filteredData = ordersData.filter(order => order.status === \"Paid\");\n      }\n\n      // Flatten the groups and update the totalResults and data state\n      const flattenedGroups = filteredData.flatMap(order => order);\n      setTotalResults(flattenedGroups.length);\n      setData(flattenedGroups.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const handleConfirmChange = (order) => {\n    // Make API call to change the order status\n    fetch(apiBaseUrl + `/orders/${order.id}/change-status?orderStatus=${selectedStatus}`, {\n      method: 'POST',\n    })\n      .then((response) => {\n        // Handle response as needed\n      })\n      .catch((error) => {\n        // Handle error\n      });\n\n    // Close the confirmation modal\n    closeModal()\n  };\n  function closeModal() {\n    setIsModalOpen(false);\n  }\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n\n  const formatDateWithoutDashes = (dateString) => {\n    const date = new Date(dateString);\n    const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\n    return date.toLocaleDateString('en-US', options).replace(/\\//g, ''); // Remove slashes\n  };\n\n\n\n  const exportToExcel = async () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet('Справка');\n\n    const headerRow = [\n      \"ПОРЕДЕН НОМЕР\", \"Група\", \"ДАТА\", \"ПОРЪЧКА\", \"КЛИЕНТ\", \"ВИД\", \"ГРАД\",\n      \"ЕТИКЕТ\", \"МОДЕЛ\", \"ВИСОЧИНА\", \"ШИРИНА\", \"БРОЙ КОЛИЧЕСТВО\",\n      \"МЕРНА ЕДИНИЦА\", \"ДРЪЖКА\", \"ЕДИНИЧНА ЦЕНА\", \"ЦЕНА НА ДРЪЖКА\",\n      \"ДВУСТРАННО ФОЛИРАНЕ\", \"СТОЙНОСТ\", \"ФОЛИО\", \"ПРОФИЛ\",\n    ];\n\n    worksheet.addRow(headerRow);\n\n    data.forEach(order => {\n      order.groups.forEach(group => {\n        const rowData = [\n          formatDateWithoutDashes(order.createdAt) + order.id, \"Група\", order.createdAt, order.id, order.user.companyName, order.type === \"BY_HAND\" ? \"Ръчно - от Администратор\" : \"От клиент\",\n          order.user.city, order.detailType, group.model.name, group.height, group.width, group.number,\n          \"квадратен метър\", group.handle.name, group.handle.price, \"Цена на Дръжка\",\n          group.bothSidesLaminated ? \"ДВУСТРАННО\" : \"\", order.totalPrice, group.folio.name, group.profil.name\n        ];\n        const newRow = worksheet.addRow(rowData);\n\n        // Check if order status is CREATED and set row color to red\n        if (order.status === \"CREATED\") {\n          newRow.fill = {\n            type: 'pattern',\n            pattern: 'solid',\n            fgColor: { argb: 'FF00FF00' }, // Green colornpom \n          };\n        } else if (order.status === \"WORKING_ON\") {\n          newRow.fill = {\n            type: 'pattern',\n            pattern: 'solid',\n            fgColor: { argb: 'FFFFFF00' }, // Yellow color\n          };\n        }\n      });\n    });\n\n    const buffer = await workbook.xlsx.writeBuffer();\n    const blob = new Blob([buffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n\n    saveAs(blob, 'Справка - ' + new Date().toLocaleDateString() + '.xlsx');\n  };\n\n\n  useEffect(() => {\n    fetchData();\n  }, [page, resultsPerPage, filter]);\n  return (\n    <div>\n      {loggedUser.data.role === '[ADMIN]' && (\n        <>\n          <div className=\"mt-4 \">\n            <Button layout=\"outline\" onClick={exportToExcel} className=\"btn btn-primary\">\n              Експорт на справка\n            </Button>\n          </div>\n          <hr className=\"customeDivider mx-4 my-5\" />\n        </>\n      )}\n      \n      {/* Table */}\n      <TableContainer className=\"mb-8\">\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Номер</TableCell>\n              <TableCell>Oт дата</TableCell>\n              <TableCell>Статус</TableCell>\n              <TableCell>Потребител</TableCell>\n              <TableCell>Крайна сума</TableCell>\n              <TableCell>Тип поръчка</TableCell>\n              <TableCell>Отстъпка</TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n          \n            {data.map((order, i) => (\n             <TableRow key={i}>\n                  <TableCell>\n                    <div className=\"flex items-center text-sm\">\n                      <div>\n                        <p className=\"font-semibold\">{formatDateWithoutDashes(order.createdAt) + order.id}</p>\n                      </div>\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <div className=\"flex items-center text-sm\">\n                      <div>\n                        <p className=\"font-semibold\">{order.createdAt}</p>\n                      </div>\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <Modal isOpen={isModalOpen} onClose={closeModal}>\n                      <ModalHeader className=\"flex items-center\">\n                        <Icon icon={EditIcon} className=\"w-6 h-6 mr-3\" />\n                        Промяна на статус\n                      </ModalHeader>\n                      <ModalBody>\n                        Сигурни ли сте, че искате да промените статуса на{\" \"}\n                        {selectedStatus && `\"${selectedStatus}\"`}\n                      </ModalBody>\n                      <ModalFooter>\n                        <div className=\"hidden sm:block\">\n                          <Button onClick={() => handleConfirmChange(order)}>\n                            Потвърждаване\n                          </Button>\n                        </div>\n                        <div className=\"hidden sm:block\">\n                          <Button layout=\"outline\" onClick={closeModal}>\n                            Отказ\n                          </Button>\n                        </div>\n                      </ModalFooter>\n                    </Modal>\n                  \n                    <Select value={selectedStatus}  >\n                      <option value={order.status}>\n                        {order.status === \"WORKING_ON\" ? \"Изпълнява се\" : order.status === \"CREATED\" ? \"Създадена  \" : order.status === \"SEND\" ? \"Изпратена\" : order.status === \"DONE\" ? \"Изпълнена\" : order.status}\n                      </option>\n                      {order.status !== \"CREATED\" && (\n                        <option value=\"CREATED\">Създадена</option>\n                      )}\n                      {order.status !== \"SEND\" && (\n                        <option value=\"SEND\">Изпратена</option>\n                      )}\n                      {order.status !== \"WORKING_ON\" && (\n                        <option value=\"WORKING_ON\">Изпълнява се</option>\n                      )}\n                      {order.status !== \"DONE\" && (\n                        <option value=\"DONE\">Изпълнена</option>\n                      )}\n\n\n                    </Select>\n\n                  </TableCell>\n                  <TableCell>\n\n                    <div className=\"flex items-center text-sm\">\n                      <div>\n                        <p className=\"font-semibold\">{order.user.companyName}</p>\n                      </div>\n                    </div>\n                  </TableCell>\n\n                  <TableCell>\n                    <div className=\"flex items-center text-sm\">\n                      <div>\n                        <span className=\"font-semibold\">{order.totalPrice}</span><span>лв.</span>\n                      </div>\n                    </div>\n                  </TableCell>\n\n\n                  <TableCell>\n                    {order.type === \"BY_HAND\" ? \"Ръчно - от Администратор\" : \"От клиент\"}\n                  </TableCell>\n                  <TableCell>\n                    <div className=\"flex items-center text-sm\">\n                      <div>\n                        <span className=\"font-semibold\">0</span><span>%</span>\n                      </div>\n                    </div>\n                  </TableCell>\n                  <TableCell className=\"w-1/12 text-center\">\n                    <Link\n                      to={`orders/${order.id}`}\n                      className=\"text-indigo-600 hover:text-indigo-900\"\n                    >\n                      Детайли\n                    </Link>\n                  </TableCell>\n                </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter>\n\n          <Pagination\n            totalResults={totalResults}\n            resultsPerPage={resultsPerPage}\n            label=\"Table navigation\"\n            onChange={onPageChange}\n          />\n        </TableFooter>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default OrdersTable;\n"],"sourceRoot":""}