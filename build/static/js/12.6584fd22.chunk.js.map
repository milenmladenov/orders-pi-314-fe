{"version":3,"sources":["pages/Orders.js","components/Typography/PageTitle.js","components/OrdersTable.js"],"names":["Icon","_ref","icon","props","_objectWithoutProperties","_excluded","React","createElement","Orders","_useState","useState","_useState2","_slicedToArray","resultsPerPage","setResultPerPage","_useState3","_useState4","filter","setFilter","PageTitle","className","aria-hidden","HomeIcon","NavLink","exact","to","Card","CardBody","Label","Select","onChange","e","filter_name","target","value","OrdersTable","children","page","setPage","data","setData","_useState5","_useState6","totalResults","setTotalResults","token","localStorage","getItem","loggedUser","JSON","parse","formatDateWithoutDashes","dateString","Date","toLocaleDateString","year","month","day","replace","fetchData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","response","ordersData","filteredData","flattenedGroups","wrap","_context","prev","next","headers","Authorization","concat","axios","get","sent","order","status","flatMap","length","slice","t0","console","error","stop","apply","arguments","exportToExcel","_ref3","_callee2","workbook","worksheet","headerRow","buffer","blob","_context2","ExcelJS","Workbook","addWorksheet","addRow","forEach","groups","group","rowData","createdAt","id","user","companyName","type","city","detailType","model","name","height","width","number","handle","price","bothSidesLaminated","totalPrice","folio","profil","newRow","fill","pattern","fgColor","argb","xlsx","writeBuffer","Blob","saveAs","useEffect","role","Fragment","Button","layout","onClick","TableContainer","Table","TableHeader","TableCell","TableBody","map","i","TableRow","key","Link","TableFooter","Pagination","label","p"],"mappings":"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","file":"static/js/12.6584fd22.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport { NavLink } from \"react-router-dom\";\nimport { HomeIcon } from \"../icons\";\nimport { Card, CardBody, Label, Select } from \"@windmill/react-ui\";\nimport OrdersTable from \"../components/OrdersTable\";\n\nfunction Icon({ icon, ...props }) {\n  const Icon = icon;\n  return <Icon {...props} />;\n}\n\nconst Orders = () => {\n  // pagination setup\n  const [resultsPerPage, setResultPerPage] = useState(10);\n  const [filter, setFilter] = useState(\"всички\");\n\n  const handleFilter = (filter_name) => {\n    if (filter_name == \"Всички\") {\n      setFilter(\"всички\");\n    }\n    if (filter_name == \"Създадена\") {\n      setFilter(\"създадена\");\n    }\n    if (filter_name == \"Изпълнява се\") {\n      setFilter(\"изпълнява се\");\n    }\n    if (filter_name == \"Изпратена\") {\n      setFilter(\"изпратена\");\n    }\n    if (filter_name == \"Изпълнена\") {\n      setFilter(\"изпълнена\");\n    }\n  };\n\n  return (\n    <div>\n      <PageTitle>Поръчки</PageTitle>\n\n      {/* Breadcum */}\n      <div className=\"flex text-gray-800 dark:text-gray-300\">\n        <div className=\"flex items-center text-purple-600\">\n          <Icon className=\"w-5 h-5\" aria-hidden=\"true\" icon={HomeIcon} />\n          <NavLink exact to=\"/app/dashboard\" className=\"mx-2\">\n            Начало\n          </NavLink>\n        </div>\n        {\">\"}\n        <p className=\"mx-2\">Поръчки</p>\n      </div>\n\n      {/* Sort */}\n      <Card className=\"mt-5 mb-5 shadow-md\">\n        <CardBody>\n          <div className=\"flex items-center\">\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n              Филтър\n            </p>\n\n            <Label className=\"mx-3\">\n              <Select\n                className=\"py-3\"\n                onChange={(e) => handleFilter(e.target.value)}\n              >\n                <option>Всички</option>\n                <option>Създадена</option>\n                <option>Изпълнява се</option>\n                <option>Изпратена</option>\n                <option>Изпълнена</option>\n\n              </Select>\n            </Label>\n\n            <Label className=\"\">\n              {/* <!-- focus-within sets the color for the icon when input is focused --> */}\n              <div className=\"relative text-gray-500 focus-within:text-purple-600 dark:focus-within:text-purple-400\">\n                <input\n                  className=\"py-3 pr-5 text-sm text-black dark:text-gray-300 dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:focus:shadow-outline-gray form-input\"\n                  value={resultsPerPage}\n                  onChange={(e) => setResultPerPage(e.target.value)}\n                />\n                <div className=\"absolute inset-y-0 right-0 flex items-center mr-3 pointer-events-none\">\n                  {/* <SearchIcon className=\"w-5 h-5\" aria-hidden=\"true\" /> */}\n                  Показани\n                </div>\n              </div>\n            </Label>\n          </div>\n        </CardBody>\n      </Card>\n\n      {/* Table */}\n      <OrdersTable resultsPerPage={resultsPerPage} filter={filter} />\n    </div>\n  );\n};\n\nexport default Orders;\n","import React from 'react'\n\nfunction PageTitle({ children }) {\n  return (\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\n  )\n}\n\nexport default PageTitle\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n  Button,Select\n} from \"@windmill/react-ui\";\nimport { Link } from 'react-router-dom'\nimport json2xls from 'json2xls'; // Import json2xls\nimport { saveAs } from \"file-saver\"; // Import saveAs function\nimport * as XLSX from 'xlsx';\nimport ExcelJS from 'exceljs';\n\n\n\n\n\nconst OrdersTable = ({ resultsPerPage, filter }) => {\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  const [totalResults, setTotalResults] = useState(0);\n  const token = localStorage.getItem('accessToken')\n  const loggedUser =JSON.parse(localStorage.getItem('user'))\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n\n  const formatDateWithoutDashes = (dateString) => {\n    const date = new Date(dateString);\n    const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\n    return date.toLocaleDateString('en-US', options).replace(/\\//g, ''); // Remove slashes\n  };\n\n  const fetchData = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      };\n      const response = await axios.get(\"http://localhost:8080/api/orders/all\", config);\n      const ordersData = response.data;\n\n      // Apply filters if necessary\n      let filteredData = ordersData;\n      if (filter === \"изпратена\") {\n        filteredData = ordersData.filter(order => order.status === \"Paid\");\n      } else if (filter === \"създадена\") {\n        filteredData = ordersData.filter(order => order.status === \"CREATED\");\n      } else if (filter === \"изпълнява се\") {\n        filteredData = ordersData.filter(order => order.status === \"WORKING_ON\");\n      } else if (filter === \"изпълнена\") {\n        filteredData = ordersData.filter(order => order.status === \"Paid\");\n      }\n\n      // Flatten the groups and update the totalResults and data state\n      const flattenedGroups = filteredData.flatMap(order => order);\n      setTotalResults(flattenedGroups.length);\n      setData(flattenedGroups.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n\n  const exportToExcel = async () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet('Orders');\n\n    const headerRow = [\n      \"ПОРЕДЕН НОМЕР\", \"Група\", \"ДАТА\", \"ПОРЪЧКА\", \"КЛИЕНТ\", \"ВИД\", \"ГРАД\",\n      \"ЕТИКЕТ\", \"МОДЕЛ\", \"ВИСОЧИНА\", \"ШИРИНА\", \"БРОЙ КОЛИЧЕСТВО\",\n      \"МЕРНА ЕДИНИЦА\", \"ДРЪЖКА\", \"ЕДИНИЧНА ЦЕНА\", \"ЦЕНА НА ДРЪЖКА\",\n      \"ДВУСТРАННО ФОЛИРАНЕ\", \"СТОЙНОСТ\", \"ФОЛИО\", \"ПРОФИЛ\",\n    ];\n\n    worksheet.addRow(headerRow);\n\n    data.forEach(order => {\n      order.groups.forEach(group => {\n        const rowData = [\n          formatDateWithoutDashes(order.createdAt) + order.id, \"Група\", order.createdAt, order.id, order.user.companyName, order.type === \"BY_HAND\" ? \"Ръчно - от Администратор\" : \"От клиент\",\n          order.user.city, order.detailType, group.model.name, group.height, group.width, group.number,\n          \"квадратен метър\", group.handle.name, group.handle.price, \"Цена на Дръжка\",\n          group.bothSidesLaminated ? \"ДВУСТРАННО\" : \"\", order.totalPrice, group.folio.name, group.profil.name\n        ];\n        const newRow = worksheet.addRow(rowData);\n\n        // Check if order status is CREATED and set row color to red\n        if (order.status === \"CREATED\") {\n          newRow.fill = {\n            type: 'pattern',\n            pattern: 'solid',\n            fgColor: { argb: 'FF00FF00' }, // Green colornpom \n          };\n        } else if (order.status === \"WORKING_ON\") {\n          newRow.fill = {\n            type: 'pattern',\n            pattern: 'solid',\n            fgColor: { argb: 'FFFFFF00' }, // Yellow color\n          };\n        }\n      });\n    });\n\n    const buffer = await workbook.xlsx.writeBuffer();\n    const blob = new Blob([buffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n\n    saveAs(blob, 'Справка - ' + new Date().toLocaleDateString() + '.xlsx');\n  };\n\n\n  useEffect(() => {\n    fetchData();\n  }, [page, resultsPerPage, filter]);\n  return (\n      <div>\n        {loggedUser.data.role === '[ADMIN]' && (\n        <>\n          <div className=\"mt-4 \">\n            <Button layout=\"outline\" onClick={exportToExcel} className=\"btn btn-primary\">\n              Експорт на справка\n            </Button>\n          </div>\n          <hr className=\"customeDivider mx-4 my-5\" />\n        </>\n      )}\n      {/* Table */}\n      <TableContainer className=\"mb-8\">\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Номер</TableCell>\n              <TableCell>Oт дата</TableCell>\n              <TableCell>Статус</TableCell>\n              <TableCell>Потребител</TableCell>\n              <TableCell>Крайна сума</TableCell>\n              <TableCell>Тип поръчка</TableCell>\n              <TableCell>Отстъпка</TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n\n            {data.map((order, i) => (\n              <TableRow key={i}>\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <div>\n                      <p className=\"font-semibold\">{formatDateWithoutDashes(order.createdAt) + order.id}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <div>\n                      <p className=\"font-semibold\">{order.createdAt}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <Select>\n                  <option value={order.status}> \n{order.status === \"WORKING_ON\" ? \"Изпълнява се\" : order.status === \"CREATED\" ? \"Създадена  \" : order.status}\n                  </option>\n                  <option value=\"CREATED\">Създадена</option>\n                  <option value=\"PAID\">Платена</option>\n                  <option value=\"WORKING_ON\">Изпълнява се</option>\n                 \n                  </Select>\n                 \n                </TableCell>\n                <TableCell>\n\n                  <div className=\"flex items-center text-sm\">\n                    <div>\n                      <p className=\"font-semibold\">{order.user.companyName}</p>\n                    </div>\n                  </div>\n                </TableCell>\n\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <div>\n                      <span className=\"font-semibold\">{order.totalPrice}</span  ><span>лв.</span>\n                    </div>\n                  </div>\n                </TableCell>\n\n\n                <TableCell>\n                  {order.type === \"BY_HAND\" ? \"Ръчно - от Администратор\" : \"От клиент\"}\n                </TableCell>\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <div>\n                      <span className=\"font-semibold\">0</span  ><span>%</span>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell className=\"w-1/12 text-center\">\n                  <Link\n                    to={`orders/${order.id}`}\n                    className=\"text-indigo-600 hover:text-indigo-900\"\n                  >\n                    Детайли\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter>\n\n          <Pagination\n            totalResults={totalResults}\n            resultsPerPage={resultsPerPage}\n            label=\"Table navigation\"\n            onChange={onPageChange}\n          />\n        </TableFooter>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default OrdersTable;\n"],"sourceRoot":""}